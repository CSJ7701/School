(undo-tree-save-format-version . 1)
"c958bb9e0f83fa39bc7d48f940e48d5481ab30b0"
[nil nil nil nil (25911 57602 991766 454000) 0 nil]
([nil nil ((#(".##.....##..#######..##.....##.########.##......##..#######..########..##....##....########
.##.....##.##.....##.###...###.##.......##..##..##.##.....##.##.....##.##...##.....##......
.##.....##.##.....##.####.####.##.......##..##..##.##.....##.##.....##.##..##......##......
.#########.##.....##.##.###.##.######...##..##..##.##.....##.########..#####.......#######.
.##.....##.##.....##.##.....##.##.......##..##..##.##.....##.##...##...##..##............##
.##.....##.##.....##.##.....##.##.......##..##..##.##.....##.##....##..##...##.....##....##
.##.....##..#######..##.....##.########..###..###...#######..##.....##.##....##.....######.
" 0 496 (fontified t face font-lock-comment-face c-in-sws t) 496 552 (fontified t face font-lock-comment-face c-in-sws t) 552 644 (fontified t face font-lock-comment-face c-in-sws t)) . 5) (undo-tree-id87 . -643) (undo-tree-id88 . -643) (undo-tree-id89 . -643) (undo-tree-id90 . -643) (t 25911 56768 93223 342000)) nil (25911 57602 991764 492000) 0 nil])
([nil nil ((82 . 86) (57 . 59) (32 . 34) (7 . 9) (nil rear-nonsticky nil 99 . 100) (nil fontified nil 5 . 100) (5 . 100) (#("  " 0 2 (fontified t ws-butler-chg chg face font-lock-comment-face)) . 6) (undo-tree-id86 . -2) 8 (5 . 8)) nil (25911 57602 991757 514000) 0 nil])
([nil nil ((#("dddd                      
" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 1 3 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 3 4 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 4 27 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 82) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -26) (undo-tree-id85 . 23) 85) nil (25911 57602 991748 811000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete rear-nonsticky t fontified t face font-lock-comment-face)) . 82) (undo-tree-id81 . 1)) nil (25911 57602 991738 475000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-face)) . 82) (undo-tree-id80 . 1)) nil (25911 57602 991736 908000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 5)) nil (25911 57602 991734 795000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-face)) . 5)) nil (25911 57602 991733 895000) 0 nil])
([nil nil ((#("Goal:
Refactor homework to spawn a process for each file argument.
Final program should be able to process each file in a seperate process
**QUESTION** - should each of these children run at the same time, e.g. should the parent create all children, then wait; or should the               parent create a child, wait for it to die, then create the next child?
**ANSWER**   - Create multiple before waiting for all to die.

Each child should have its own delays
**QUESTION** - does this mean that we should be specifying a different delay for each file, or is this just saying that each child shou               ld take the previously defined delay, and it should simply run on a different \"clock cycle\"?
**ANSWER**   - Same delay time for all files, run on seperate \"clocks\"

Parent will process no files - use waitpid() to wait until child(ren) die.



Notes:
Fork returns 0 for (___) and PID for (___). Use this in an if statement to make parent wait.

" 0 407 (fontified t face font-lock-comment-face c-in-sws t) 407 422 (fontified t face font-lock-comment-face c-in-sws t) 422 449 (fontified t face font-lock-comment-face c-in-sws t) 449 461 (face font-lock-comment-face fontified t c-in-sws t) 461 497 (fontified t face font-lock-comment-face c-in-sws t) 497 499 (fontified t face font-lock-comment-face c-in-sws t) 499 500 (fontified t face font-lock-comment-face c-in-sws t) 500 704 (fontified t face font-lock-comment-face c-in-sws t) 704 922 (fontified t face font-lock-comment-face c-in-sws t) 922 954 (fontified t face font-lock-comment-face c-in-sws t) 954 955 (fontified t face font-lock-comment-face c-in-sws t)) . 81) (undo-tree-id76 . -954) (undo-tree-id77 . -954) (undo-tree-id78 . -954) (undo-tree-id79 . -954)) nil (25911 57602 991732 647000) 0 nil])
([nil nil ((80 . 83)) nil (25911 57602 991729 36000) 0 nil])
([nil nil ((81 . 84) (#("  " 0 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 81) (undo-tree-id75 . -2) 83) nil (25911 57602 991728 35000) 0 nil])
([nil nil ((82 . 85) (#("  " 0 2 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 82) (undo-tree-id74 . -2) 84) nil (25911 57602 991725 874000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 83) (undo-tree-id73 . -2) 85) nil (25911 57602 991723 862000) 0 nil])
([nil nil ((81 . 83) (81 . 82)) nil (25911 57602 991722 90000) 0 nil])
([nil nil ((84 . 85)) nil (25911 57602 991721 152000) 0 nil])
([nil nil ((#("*" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -83) (undo-tree-id71 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -84) (undo-tree-id72 . -1) 85) nil (25911 57602 991720 19000) 0 nil])
([nil nil ((83 . 93)) nil (25911 57602 991717 402000) 0 nil])
([nil nil ((93 . 96)) nil (25911 57602 991716 643000) 0 nil])
([nil nil ((96 . 97)) nil (25911 57602 991715 953000) 0 nil])
([nil nil ((97 . 99)) nil (25911 57602 991715 261000) 0 nil])
([nil nil ((99 . 120)) nil (25911 57602 991714 535000) 0 nil])
([nil nil ((120 . 135)) nil (25911 57602 991713 866000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -134) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 135) nil (25911 57602 991712 949000) 0 nil])
([nil nil ((134 . 137)) nil (25911 57602 991710 701000) 0 nil])
([nil nil ((137 . 143)) nil (25911 57602 991709 862000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -141) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -142) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 143) nil (25911 57602 991708 720000) 0 nil])
([nil nil ((141 . 142)) nil (25911 57602 991703 298000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -141) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 142) nil (25911 57602 991702 371000) 0 nil])
([nil nil ((141 . 162)) nil (25911 57602 991700 132000) 0 nil])
([nil nil ((162 . 178)) nil (25911 57602 991699 326000) 0 nil])
([nil nil ((178 . 183)) nil (25911 57602 991698 621000) 0 nil])
([nil nil ((183 . 184)) nil (25911 57602 991697 938000) 0 nil])
([nil nil ((184 . 187)) nil (25911 57602 991697 240000) 0 nil])
([nil nil ((#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -183) (undo-tree-id59 . -1) (#("
" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -184) (undo-tree-id60 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -185) (undo-tree-id61 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -186) (undo-tree-id62 . -1) 187) nil (25911 57602 991695 757000) 0 nil])
([nil nil ((183 . 184)) nil (25911 57602 991691 867000) 0 nil])
([nil nil ((184 . 187)) nil (25911 57602 991691 202000) 0 nil])
([nil nil ((187 . 193)) nil (25911 57602 991690 559000) 0 nil])
([nil nil ((#("S" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -192) (undo-tree-id58 . -1) 193) nil (25911 57602 991689 703000) 0 nil])
([nil nil ((192 . 193)) nil (25911 57602 991688 95000) 0 nil])
([nil nil ((193 . 200)) nil (25911 57602 991687 224000) 0 nil])
([nil nil ((200 . 203)) nil (25911 57602 991686 534000) 0 nil])
([nil nil ((203 . 215)) nil (25911 57602 991685 673000) 0 nil])
([nil nil ((215 . 216)) nil (25911 57602 991684 909000) 0 nil])
([nil nil ((216 . 221)) nil (25911 57602 991684 167000) 0 nil])
([nil nil ((221 . 222)) nil (25911 57602 991683 465000) 0 nil])
([nil nil ((222 . 227)) nil (25911 57602 991682 554000) 0 nil])
([nil nil ((227 . 230)) nil (25911 57602 991681 570000) 0 nil])
([nil nil ((228 . 231) (#("  " 0 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 228) (undo-tree-id57 . -2) 230) nil (25911 57602 991680 559000) 0 nil])
([nil nil ((231 . 244)) nil (25911 57602 991678 668000) 0 nil])
([nil nil ((244 . 247)) nil (25911 57602 991677 850000) 0 nil])
([nil nil ((245 . 248) (#("  " 0 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 245) (undo-tree-id56 . -2) 247) nil (25911 57602 991676 698000) 0 nil])
([nil nil ((248 . 249)) nil (25911 57602 991674 877000) 0 nil])
([nil nil ((249 . 258)) nil (25911 57602 991674 15000) 0 nil])
([nil nil ((#("]" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -257) (undo-tree-id55 . -1) 258) nil (25911 57602 991673 42000) 0 nil])
([nil nil ((257 . 277)) nil (25911 57602 991671 452000) 0 nil])
([nil nil ((#("w" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -276) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 277) nil (25911 57602 991670 442000) 0 nil])
([nil nil ((276 . 288)) nil (25911 57602 991668 25000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -286) (undo-tree-id51 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -287) (undo-tree-id52 . -1) 288) nil (25911 57602 991666 846000) 0 nil])
([nil nil ((286 . 288)) nil (25911 57602 991664 327000) 0 nil])
([nil nil ((#("append " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 1 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 2 3 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 3 4 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 4 5 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 5 6 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 6 7 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -281) (undo-tree-id49 . -1) (undo-tree-id50 . -7) 288) nil (25911 57602 991663 357000) 0 nil])
([nil nil ((281 . 299)) nil (25911 57602 991661 292000) 0 nil])
([nil nil ((#("message" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 1 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 2 3 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 3 4 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 4 5 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 5 6 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 6 7 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -292) (undo-tree-id47 . -6) (undo-tree-id48 . -7) 299) nil (25911 57602 991660 378000) 0 nil])
([nil nil ((#("log " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -288) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -1) 292) nil (25911 57602 991657 886000) 0 nil])
([nil nil ((288 . 304)) nil (25911 57602 991654 999000) 0 nil])
([nil nil ((304 . 317)) nil (25911 57602 991654 141000) 0 nil])
([nil nil ((#("lofgile" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 1 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 2 3 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 3 4 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 4 5 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 5 6 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 6 7 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -310) (undo-tree-id42 . -3) (undo-tree-id43 . -7) 317) nil (25911 57602 991653 75000) 0 nil])
([nil nil ((310 . 318)) nil (25911 57602 991650 391000) 0 nil])
([nil nil ((317 . 320) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 317) (undo-tree-id41 . -1) 318) nil (25911 57602 991649 332000) 0 nil])
([nil nil ((320 . 324)) nil (25911 57602 991647 277000) 0 nil])
([nil nil ((324 . 345)) nil (25911 57602 991646 391000) 0 nil])
([nil nil ((345 . 363)) nil (25911 57602 991645 517000) 0 nil])
([nil nil ((#("par" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -360) (undo-tree-id38 . -2) (undo-tree-id39 . -3) (undo-tree-id40 . -2) 363) nil (25911 57602 991644 406000) 0 nil])
([nil nil ((360 . 364)) nil (25911 57602 991641 241000) 0 nil])
([nil nil ((#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -360) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -361) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -362) (undo-tree-id36 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -363) (undo-tree-id37 . -1) 364) nil (25911 57602 991639 442000) 0 nil])
([nil nil ((360 . 365)) nil (25911 57602 991633 680000) 0 nil])
([nil nil ((365 . 382)) nil (25911 57602 991632 959000) 0 nil])
([nil nil ((382 . 383)) nil (25911 57602 991632 97000) 0 nil])
([nil nil ((383 . 384)) nil (25911 57602 991631 363000) 0 nil])
([nil nil ((384 . 392)) nil (25911 57602 991630 604000) 0 nil])
([nil nil ((#("." 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -391) (undo-tree-id31 . -1) 392) nil (25911 57602 991629 470000) 0 nil])
([nil nil ((391 . 409)) nil (25911 57602 991627 514000) 0 nil])
([nil nil ((409 . 421)) nil (25911 57602 991626 733000) 0 nil])
([nil nil ((421 . 442)) nil (25911 57602 991625 924000) 0 nil])
([nil nil ((442 . 447)) nil (25911 57602 991625 86000) 0 nil])
([nil nil ((#("process" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 1 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 2 3 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 3 4 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 4 5 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 5 6 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 6 7 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -440) (undo-tree-id28 . -3) (undo-tree-id29 . -7) (undo-tree-id30 . -2) 447) nil (25911 57602 991623 931000) 0 nil])
([nil nil ((440 . 454)) nil (25911 57602 991621 19000) 0 nil])
([nil nil ((244 . 247)) nil (25911 57602 991620 276000) 0 nil])
([nil nil ((245 . 248) (#("  " 0 2 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 245) (undo-tree-id27 . -2) 247) nil (25911 57602 991618 785000) 0 nil])
([nil nil ((248 . 249)) nil (25911 57602 991616 764000) 0 nil])
([nil nil ((249 . 254)) nil (25911 57602 991615 977000) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -251) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -252) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -253) (undo-tree-id26 . -1) 254) nil (25911 57602 991614 383000) 0 nil])
([nil nil ((251 . 258)) nil (25911 57602 991609 374000) 0 nil])
([nil nil ((#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -256) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -257) (undo-tree-id21 . -1) 258) nil (25911 57602 991608 285000) 0 nil])
([nil nil ((256 . 258)) nil (25911 57602 991605 149000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -257) (undo-tree-id18 . -1) 258) nil (25911 57602 991603 975000) 0 nil])
([nil nil ((257 . 278)) nil (25911 57602 991602 300000) 0 nil])
([nil nil ((278 . 299)) nil (25911 57602 991601 551000) 0 nil])
([nil nil ((299 . 304)) nil (25911 57602 991600 802000) 0 nil])
([nil nil ((304 . 312)) nil (25911 57602 991600 14000) 0 nil])
([nil nil ((#("default " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t face font-lock-comment-face) 5 6 (ws-butler-chg chg fontified t face font-lock-comment-face) 6 7 (ws-butler-chg chg fontified t face font-lock-comment-face) 7 8 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -304) (undo-tree-id16 . -2) (undo-tree-id17 . -8) 312) nil (25911 57602 991598 790000) 0 nil])
([nil nil ((304 . 323)) nil (25911 57602 991596 168000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -321) (undo-tree-id14 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -322) (undo-tree-id15 . -1) 323) nil (25911 57602 991594 901000) 0 nil])
([nil nil ((321 . 334)) nil (25911 57602 991592 607000) 0 nil])
([nil nil ((#("all " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 1 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 2 3 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 3 4 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -330) (undo-tree-id11 . -3) (undo-tree-id12 . -4) (undo-tree-id13 . -2) 334) nil (25911 57602 991591 513000) 0 nil])
([nil nil ((330 . 335)) nil (25911 57602 991588 352000) 0 nil])
([nil nil ((335 . 355)) nil (25911 57602 991587 607000) 0 nil])
([nil nil ((566 . 569)) nil (25911 57602 991586 797000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 567) (undo-tree-id10 . -2) 569) nil (25911 57602 991585 896000) 0 nil])
([nil nil ((566 . 568)) nil (25911 57602 991584 310000) 0 nil])
([nil nil ((#("-" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -566) (undo-tree-id8 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -567) (undo-tree-id9 . -1) 568) nil (25911 57602 991583 49000) 0 nil])
([nil nil ((566 . 571)) nil (25911 57602 991580 269000) 0 nil])
([nil nil ((#("-" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -568) (undo-tree-id5 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -569) (undo-tree-id6 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -570) (undo-tree-id7 . -1) 571) nil (25911 57602 991578 992000) 0 nil])
([nil nil ((568 . 573)) nil (25911 57602 991575 752000) 0 nil])
([nil nil ((#("=" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -571) (undo-tree-id3 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -572) (undo-tree-id4 . -1) 573) nil (25911 57602 991574 369000) 0 nil])
([nil nil ((571 . 573)) nil (25911 57602 991571 696000) 0 nil])
([nil nil ((573 . 586)) nil (25911 57602 991570 739000) 0 nil])
([nil nil ((586 . 587)) nil (25911 57602 991569 863000) 0 nil])
([nil nil ((587 . 600)) nil (25911 57602 991569 35000) 0 nil])
([nil nil ((#("each " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 1 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 2 3 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 3 4 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 4 5 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -595) (undo-tree-id0 . -3) (undo-tree-id1 . -5) (undo-tree-id2 . -2) 600) nil (25911 57602 991567 299000) 0 nil])
([nil nil ((595 . 609)) nil (25911 57602 991547 277000) 0 nil])
([nil nil ((609 . 610)) nil (25911 57602 991546 607000) 0 nil])
([nil nil ((610 . 615)) nil (25911 57602 991545 901000) 0 nil])
([nil nil ((615 . 636)) nil (25911 57602 991545 23000) 0 nil])
([nil nil ((636 . 639)) nil (25911 57602 991543 903000) 0 nil])
([nil nil ((639 . 660)) nil (25911 57602 991543 36000) 0 nil])
([nil nil ((660 . 663)) nil (25911 57602 991542 190000) 0 nil])
([nil nil ((663 . 664)) nil (25911 57602 991541 479000) 0 nil])
([nil nil ((664 . 671)) nil (25911 57602 991540 623000) 0 nil])
([nil nil ((671 . 692)) nil (25911 57602 991539 291000) 0 nil])
([nil nil ((692 . 700)) nil (25911 57602 991534 948000) 0 nil])
([nil nil ((700 . 706) (t 25911 57603 11823 907000)) nil (25911 57797 163868 489000) 0 nil])
([nil nil ((706 . 717)) nil (25911 57797 163867 313000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -715) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -716) (undo-tree-id165 . -1) (undo-tree-id166 . -1) 717) nil (25911 57797 163866 17000) 0 nil])
([nil nil ((715 . 736)) nil (25911 57797 163861 497000) 0 nil])
([nil nil ((736 . 746)) nil (25911 57797 163860 682000) 0 nil])
([nil nil ((746 . 747)) nil (25911 57797 163859 928000) 0 nil])
([nil nil ((747 . 748)) nil (25911 57797 163859 172000) 0 nil])
([nil nil ((748 . 769)) nil (25911 57797 163858 315000) 0 nil])
([nil nil ((769 . 772)) nil (25911 57797 163857 493000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -769) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("." 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -770) (undo-tree-id161 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -771) (undo-tree-id162 . -1) 772) nil (25911 57797 163856 21000) 0 nil])
([nil nil ((769 . 770)) nil (25911 57797 163851 510000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -769) (undo-tree-id157 . -1) (undo-tree-id158 . -1) 770) nil (25911 57797 163850 321000) 0 nil])
([nil nil ((769 . 772)) nil (25911 57797 163847 730000) 0 nil])
([nil nil ((772 . 778)) nil (25911 57797 163846 781000) 0 nil])
([nil nil ((773 . 779) (#("     " 0 5 (fontified t ws-butler-chg chg face font-lock-comment-face)) . 773) (undo-tree-id156 . -5) 778) nil (25911 57797 163845 608000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -774) (undo-tree-id151 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -775) (undo-tree-id152 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -776) (undo-tree-id153 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -777) (undo-tree-id154 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -778) (undo-tree-id155 . -1) 779) nil (25911 57797 163842 535000) 0 nil])
([nil nil ((774 . 780)) nil (25911 57797 163836 388000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -777) (undo-tree-id148 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -778) (undo-tree-id149 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -779) (undo-tree-id150 . -1) 780) nil (25911 57797 163835 25000) 0 nil])
([nil nil ((775 . 777)) nil (25911 57797 163831 202000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t face font-lock-comment-face)) . 777) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 777)) nil (25911 57797 163829 782000) 0 nil])
([nil nil ((775 . 780) (#("  " 0 1 (ws-butler-chg chg fontified nil face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified nil face font-lock-comment-face)) . 775) (undo-tree-id147 . -2) (777 . 778)) nil (25911 57797 163828 478000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -777) (undo-tree-id144 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -778) (undo-tree-id145 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -779) (undo-tree-id146 . -1) 780) nil (25911 57797 163825 559000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -775) (undo-tree-id142 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -776) (undo-tree-id143 . -1) 777) nil (25911 57797 163814 784000) 0 nil])
([nil nil ((775 . 777)) nil (25911 57797 163811 874000) 0 nil])
([nil nil ((778 . 782)) nil (25911 57797 163810 996000) 0 nil])
([nil nil ((782 . 785)) nil (25911 57797 163810 181000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 783) (undo-tree-id141 . -2) 785) nil (25911 57797 163809 189000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -773) (undo-tree-id140 . -1) 774) nil (25911 57797 163807 27000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -778) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -779) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -780) (undo-tree-id139 . -1) 781) nil (25911 57797 163804 680000) 0 nil])
([nil nil ((778 . 799)) nil (25911 57797 163799 895000) 0 nil])
([nil nil ((799 . 808)) nil (25911 57797 163799 203000) 0 nil])
([nil nil ((808 . 809)) nil (25911 57797 163798 459000) 0 nil])
([nil nil ((809 . 821)) nil (25911 57797 163797 595000) 0 nil])
([nil nil ((#("?" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -820) (undo-tree-id134 . -1) 821) nil (25911 57797 163796 635000) 0 nil])
([nil nil ((#("path" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -816) (undo-tree-id131 . -4) (undo-tree-id132 . -4) (undo-tree-id133 . -2) 820) nil (25911 57797 163794 695000) 0 nil])
([nil nil ((#("to " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -813) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) 816) nil (25911 57797 163791 570000) 0 nil])
([nil nil ((#("add " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -809) (undo-tree-id125 . -4) (undo-tree-id126 . -4) (undo-tree-id127 . -4) 813) nil (25911 57797 163788 217000) 0 nil])
([nil nil ((809 . 830)) nil (25911 57797 163785 120000) 0 nil])
([nil nil ((830 . 844)) nil (25911 57797 163784 301000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -843) (undo-tree-id124 . -1) 844) nil (25911 57797 163783 410000) 0 nil])
([nil nil ((843 . 862)) nil (25911 57797 163781 768000) 0 nil])
([nil nil ((862 . 863)) nil (25911 57797 163781 71000) 0 nil])
([nil nil ((863 . 869)) nil (25911 57797 163780 263000) 0 nil])
([nil nil ((#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -868) (undo-tree-id123 . -1) 869) nil (25911 57797 163779 404000) 0 nil])
([nil nil ((868 . 882)) nil (25911 57797 163777 631000) 0 nil])
([nil nil ((882 . 883)) nil (25911 57797 163776 808000) 0 nil])
([nil nil ((883 . 900)) nil (25911 57797 163776 13000) 0 nil])
([nil nil ((900 . 913)) nil (25911 57797 163774 884000) 0 nil])
([nil nil ((910 . 912)) nil (25911 57797 163774 85000) 0 nil])
([nil nil ((915 . 926)) nil (25911 57797 163773 321000) 0 nil])
([nil nil ((925 . 928) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 925) (undo-tree-id122 . -1) 926) nil (25911 57797 163772 320000) 0 nil])
([nil nil ((928 . 934)) nil (25911 57797 163770 421000) 0 nil])
([nil nil ((#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -933) (undo-tree-id120 . -1) (undo-tree-id121 . -1) 934) nil (25911 57797 163769 224000) 0 nil])
([nil nil ((933 . 950)) nil (25911 57797 163767 20000) 0 nil])
([nil nil ((950 . 967)) nil (25911 57797 163766 241000) 0 nil])
([nil nil ((967 . 976)) nil (25911 57797 163765 498000) 0 nil])
([nil nil ((976 . 977)) nil (25911 57797 163764 732000) 0 nil])
([nil nil ((977 . 985)) nil (25911 57797 163764 33000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -984) (undo-tree-id118 . -1) (undo-tree-id119 . -1) 985) nil (25911 57797 163762 908000) 0 nil])
([nil nil ((984 . 990)) nil (25911 57797 163760 384000) 0 nil])
([nil nil ((990 . 999)) nil (25911 57797 163759 579000) 0 nil])
([nil nil ((#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -998) (undo-tree-id116 . -1) (undo-tree-id117 . -1) 999) nil (25911 57797 163758 277000) 0 nil])
([nil nil ((998 . 1019)) nil (25911 57797 163755 962000) 0 nil])
([nil nil ((1019 . 1022)) nil (25911 57797 163755 191000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1021) (undo-tree-id115 . -1) 1022) nil (25911 57797 163754 257000) 0 nil])
([nil nil ((1021 . 1038)) nil (25911 57797 163752 525000) 0 nil])
([nil nil ((1038 . 1054)) nil (25911 57797 163751 649000) 0 nil])
([nil nil ((1054 . 1055)) nil (25911 57797 163750 871000) 0 nil])
([nil nil ((1055 . 1056)) nil (25911 57797 163750 117000) 0 nil])
([nil nil ((1055 . 1058) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 1055) (undo-tree-id114 . -1) 1056) nil (25911 57797 163748 894000) 0 nil])
([nil nil ((1056 . 1059) (#("  " 0 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 1056) (undo-tree-id113 . -2) 1058) nil (25911 57797 163745 506000) 0 nil])
([nil nil ((1059 . 1060)) nil (25911 57797 163440 674000) 0 nil])
([nil nil ((1060 . 1078)) nil (25911 57797 163439 919000) 0 nil])
([nil nil ((#("functio" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face) 1 3 (ws-butler-chg chg fontified t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t face font-lock-comment-face) 5 6 (ws-butler-chg chg fontified t face font-lock-comment-face) 6 7 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1071) (undo-tree-id111 . -7) (undo-tree-id112 . -7) 1078) nil (25911 57797 163438 923000) 0 nil])
([nil nil ((1071 . 1082)) nil (25911 57797 163436 460000) 0 nil])
([nil nil ((#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1081) (undo-tree-id109 . -1) (undo-tree-id110 . -1) 1082) nil (25911 57797 163435 340000) 0 nil])
([nil nil ((1081 . 1082)) nil (25911 57797 163432 334000) 0 nil])
([nil nil ((#("y" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1081) (undo-tree-id108 . -1) 1082) nil (25911 57797 163430 882000) 0 nil])
([nil nil ((1081 . 1094)) nil (25911 57797 163428 689000) 0 nil])
([nil nil ((1094 . 1115)) nil (25911 57797 163427 739000) 0 nil])
([nil nil ((1115 . 1136)) nil (25911 57797 163426 391000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 1135) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) 1136) nil (25911 57797 163421 684000) 0 nil])
([nil nil ((1135 . 1136) 1136 (t 25911 57797 175296 33000)) nil (25911 57850 504506 789000) 0 nil])
([nil nil ((3049 . 3051) (t 25911 57797 175296 33000)) nil (25911 57850 504505 383000) 0 nil])
([nil nil ((3051 . 3064)) nil (25911 57850 504504 454000) 0 nil])
([nil nil ((3064 . 3066)) nil (25911 57850 504503 563000) 0 nil])
([nil nil ((3066 . 3067)) nil (25911 57850 504502 646000) 0 nil])
([nil nil ((3067 . 3068)) nil (25911 57850 504501 810000) 0 nil])
([nil nil ((3068 . 3071)) nil (25911 57850 504501 52000) 0 nil])
([nil nil ((3069 . 3072) (#("  " 0 2 (ws-butler-chg chg fontified t)) . 3069) (undo-tree-id168 . -2) 3071) nil (25911 57850 504499 985000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3070) (undo-tree-id167 . -2) (3072 . 3073)) nil (25911 57850 504496 981000) 0 nil])
([nil nil ((3069 . 3072)) nil (25911 57850 504490 338000) 0 nil])
([nil nil ((3072 . 3080)) nil (25911 57850 504489 235000) 0 nil])
([nil nil ((3080 . 3081)) nil (25911 57850 504487 775000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . 1135) 3081) nil (25911 57850 504482 936000) 0 nil])
([nil nil ((3301 . 3303) (t 25911 57850 519161 743000)) nil (25911 57907 12004 604000) 0 nil])
([nil nil ((3726 . 3737)) nil (25911 57907 12003 52000) 0 nil])
([nil nil ((3727 . 3738) (#("          " 0 10 (fontified t ws-butler-chg chg)) . 3727) (undo-tree-id170 . -10) 3737) nil (25911 57907 12001 874000) 0 nil])
([nil nil ((3738 . 3743)) nil (25911 57907 11999 862000) 0 nil])
([nil nil ((3728 . 3736) (#("          " 0 10 (fontified t ws-butler-chg chg)) . 3728) 3743) nil (25911 57907 11998 714000) 0 nil])
([nil nil ((3741 . 3742)) nil (25911 57907 11997 316000) 0 nil])
([nil nil ((3742 . 3743)) nil (25911 57907 11996 292000) 0 nil])
([nil nil ((3743 . 3754)) nil (25911 57907 11995 227000) 0 nil])
([nil nil ((3754 . 3757)) nil (25911 57907 11994 470000) 0 nil])
([nil nil ((3757 . 3759)) nil (25911 57907 11993 402000) 0 nil])
([nil nil ((3759 . 3760)) nil (25911 57907 11992 233000) 0 nil])
([nil nil ((3760 . 3771)) nil (25911 57907 11991 58000) 0 nil])
([nil nil ((3761 . 3772) (#("          " 0 10 (fontified t ws-butler-chg chg)) . 3761) (undo-tree-id169 . -10) 3771) nil (25911 57907 11989 786000) 0 nil])
([nil nil ((3772 . 3777)) nil (25911 57907 11982 920000) 0 nil])
([nil nil ((3762 . 3770) (#("          " 0 10 (fontified t ws-butler-chg chg)) . 3762) 3777) nil (25911 57907 11981 298000) 0 nil])
([nil nil ((3775 . 3776)) nil (25911 57907 11979 846000) 0 nil])
([nil nil ((3776 . 3777)) nil (25911 57907 11978 432000) 0 nil])
([nil nil ((3777 . 3788)) nil (25911 57907 11977 352000) 0 nil])
([nil nil ((3788 . 3793)) nil (25911 57907 11975 945000) 0 nil])
([nil nil ((3793 . 3794)) nil (25911 57907 11970 987000) 0 nil])
([nil nil ((3743 . 3754) (t 25911 57907 23023 612000)) nil (25911 57935 396202 647000) 0 nil])
([nil nil ((3754 . 3760)) nil (25911 57935 396201 748000) 0 nil])
([nil nil ((3760 . 3761)) nil (25911 57935 396200 996000) 0 nil])
([nil nil ((3768 . 3769) (nil syntax-table nil 3768 . 3769) (nil syntax-table (1) 3761 . 3762) (3767 . 3768) (nil syntax-table nil 3767 . 3768) (nil syntax-table (1) 3761 . 3762) (3766 . 3767) (nil syntax-table nil 3766 . 3767) (nil syntax-table (1) 3761 . 3762) (3765 . 3766) (nil syntax-table nil 3765 . 3766) (nil syntax-table (1) 3761 . 3762) (3764 . 3765) (nil syntax-table nil 3764 . 3765) (nil syntax-table (1) 3761 . 3762) (3763 . 3764) (nil syntax-table nil 3763 . 3764) (nil syntax-table (1) 3761 . 3762) (3762 . 3763) (nil syntax-table nil 3762 . 3763) (nil syntax-table (1) 3761 . 3762) (3761 . 3762)) nil (25911 57935 396199 668000) 0 nil])
([nil nil ((3769 . 3770)) nil (25911 57935 396196 57000) 0 nil])
([nil nil ((3769 . 3770) (nil syntax-table nil 3771 . 3772) (nil syntax-table (1) 3761 . 3762) (3768 . 3769)) nil (25911 57935 396195 289000) 0 nil])
([nil nil ((3772 . 3773)) nil (25911 57935 396194 127000) 0 nil])
([nil nil ((3807 . 3818)) nil (25911 57935 396193 500000) 0 nil])
([nil nil ((3818 . 3824)) nil (25911 57935 396192 856000) 0 nil])
([nil nil ((3824 . 3825)) nil (25911 57935 396192 153000) 0 nil])
([nil nil ((3832 . 3833) (nil syntax-table nil 3832 . 3833) (nil syntax-table (1) 3825 . 3826) (3831 . 3832) (nil syntax-table nil 3831 . 3832) (nil syntax-table (1) 3825 . 3826) (3830 . 3831) (nil syntax-table nil 3830 . 3831) (nil syntax-table (1) 3825 . 3826) (3829 . 3830) (nil syntax-table nil 3829 . 3830) (nil syntax-table (1) 3825 . 3826) (3828 . 3829) (nil syntax-table nil 3828 . 3829) (nil syntax-table (1) 3825 . 3826) (3827 . 3828) (nil syntax-table nil 3827 . 3828) (nil syntax-table (1) 3825 . 3826) (3826 . 3827) (nil syntax-table nil 3826 . 3827) (nil syntax-table (1) 3825 . 3826) (3825 . 3826)) nil (25911 57935 396190 736000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3832) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (nil syntax-table nil 3833 . 3834) (nil syntax-table (1) 3825 . 3826)) nil (25911 57935 396186 415000) 0 nil])
([nil nil ((3834 . 3835) (nil syntax-table nil 3851 . 3852) (nil syntax-table (1) 3825 . 3826) (3833 . 3834) (nil syntax-table nil 3833 . 3834) (nil syntax-table (1) 3825 . 3826) (3832 . 3833) (nil syntax-table nil 3832 . 3833) (nil syntax-table (1) 3825 . 3826)) nil (25911 57935 396179 75000) 0 nil])
([nil nil ((3835 . 3836) (nil syntax-table nil 3835 . 3836) (nil syntax-table (1) 3825 . 3826)) nil (25911 57935 396176 921000) 0 nil])
([nil nil ((3836 . 3837) (nil syntax-table nil 3836 . 3837) (nil syntax-table (1) 3825 . 3826)) nil (25911 57935 396175 1000) 0 nil])
([nil nil ((3835 . 3836) (nil syntax-table nil 3837 . 3838) (nil syntax-table (1) 3825 . 3826)) nil (25911 57935 396170 433000) 0 nil])
([nil nil ((#("  * Make sure program only opens files in read mode. Pretty sure I already am.
" 0 2 (c-in-sws t fontified t face font-lock-comment-face) 2 3 (c-in-sws t fontified t face font-lock-comment-face) 3 4 (c-in-sws t fontified t face font-lock-comment-face) 4 5 (c-in-sws t fontified t face font-lock-comment-face) 5 6 (c-in-sws t fontified t face font-lock-comment-face) 6 7 (c-in-sws t fontified t face font-lock-comment-face) 7 8 (c-in-sws t fontified t face font-lock-comment-face) 8 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (c-in-sws t fontified t face font-lock-comment-face) 10 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 13 (c-in-sws t fontified t face font-lock-comment-face) 13 14 (c-in-sws t fontified t face font-lock-comment-face) 14 15 (c-in-sws t fontified t face font-lock-comment-face) 15 16 (c-in-sws t fontified t face font-lock-comment-face) 16 17 (c-in-sws t fontified t face font-lock-comment-face) 17 18 (c-in-sws t fontified t face font-lock-comment-face) 18 19 (c-in-sws t fontified t face font-lock-comment-face) 19 20 (c-in-sws t fontified t face font-lock-comment-face) 20 21 (c-in-sws t fontified t face font-lock-comment-face) 21 22 (c-in-sws t fontified t face font-lock-comment-face) 22 23 (c-in-sws t fontified t face font-lock-comment-face) 23 24 (c-in-sws t fontified t face font-lock-comment-face) 24 25 (c-in-sws t fontified t face font-lock-comment-face) 25 26 (c-in-sws t fontified t face font-lock-comment-face) 26 27 (c-in-sws t fontified t face font-lock-comment-face) 27 28 (c-in-sws t fontified t face font-lock-comment-face) 28 29 (c-in-sws t fontified t face font-lock-comment-face) 29 30 (c-in-sws t fontified t face font-lock-comment-face) 30 31 (c-in-sws t fontified t face font-lock-comment-face) 31 32 (c-in-sws t fontified t face font-lock-comment-face) 32 33 (c-in-sws t fontified t face font-lock-comment-face) 33 34 (c-in-sws t fontified t face font-lock-comment-face) 34 35 (c-in-sws t fontified t face font-lock-comment-face) 35 36 (c-in-sws t fontified t face font-lock-comment-face) 36 37 (c-in-sws t fontified t face font-lock-comment-face) 37 38 (c-in-sws t fontified t face font-lock-comment-face) 38 39 (c-in-sws t fontified t face font-lock-comment-face) 39 40 (c-in-sws t fontified t face font-lock-comment-face) 40 41 (c-in-sws t fontified t face font-lock-comment-face) 41 42 (c-in-sws t fontified t face font-lock-comment-face) 42 43 (c-in-sws t fontified t face font-lock-comment-face) 43 44 (c-in-sws t fontified t face font-lock-comment-face) 44 45 (c-in-sws t fontified t face font-lock-comment-face) 45 46 (c-in-sws t fontified t face font-lock-comment-face) 46 47 (c-in-sws t fontified t face font-lock-comment-face) 47 48 (c-in-sws t fontified t face font-lock-comment-face) 48 49 (c-in-sws t fontified t face font-lock-comment-face) 49 50 (c-in-sws t fontified t face font-lock-comment-face) 50 51 (c-in-sws t fontified t face font-lock-comment-face) 51 52 (c-in-sws t fontified t face font-lock-comment-face) 52 53 (c-in-sws t fontified t face font-lock-comment-face) 53 54 (c-in-sws t fontified t face font-lock-comment-face) 54 55 (c-in-sws t fontified t face font-lock-comment-face) 55 56 (c-in-sws t fontified t face font-lock-comment-face) 56 57 (c-in-sws t fontified t face font-lock-comment-face) 57 58 (c-in-sws t fontified t face font-lock-comment-face) 58 59 (c-in-sws t fontified t face font-lock-comment-face) 59 60 (c-in-sws t fontified t face font-lock-comment-face) 60 61 (c-in-sws t fontified t face font-lock-comment-face) 61 62 (c-in-sws t fontified t face font-lock-comment-face) 62 63 (c-in-sws t fontified t face font-lock-comment-face) 63 64 (c-in-sws t fontified t face font-lock-comment-face) 64 65 (c-in-sws t fontified t face font-lock-comment-face) 65 66 (c-in-sws t fontified t face font-lock-comment-face) 66 67 (c-in-sws t fontified t face font-lock-comment-face) 67 68 (c-in-sws t fontified t face font-lock-comment-face) 68 69 (c-in-sws t fontified t face font-lock-comment-face) 69 70 (c-in-sws t fontified t face font-lock-comment-face) 70 71 (c-in-sws t fontified t face font-lock-comment-face) 71 72 (c-in-sws t fontified t face font-lock-comment-face) 72 73 (c-in-sws t fontified t face font-lock-comment-face) 73 74 (c-in-sws t fontified t face font-lock-comment-face) 74 75 (c-in-sws t fontified t face font-lock-comment-face) 75 76 (c-in-sws t fontified t face font-lock-comment-face) 76 77 (c-in-sws t fontified t face font-lock-comment-face) 77 78 (c-in-sws t fontified t face font-lock-comment-face) 78 79 (c-in-sws t fontified t face font-lock-comment-face)) . 1057) (undo-tree-id176 . -78) (undo-tree-id177 . 30) (undo-tree-id178 . -48) (undo-tree-id179 . -49) (undo-tree-id180 . -49) 1105 (t 25911 57935 410955 685000)) nil (25911 57972 595601 82000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-face)) . 1057) (undo-tree-id175 . 1)) nil (25911 57972 595595 404000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-face)) . 1057) (undo-tree-id174 . 1)) nil (25911 57972 595593 327000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-face)) . 1057) (undo-tree-id173 . 1)) nil (25911 57972 595590 658000) 0 nil])
([nil nil ((3224 . 3225)) nil (25911 57972 595583 336000) 0 nil])
([nil nil ((3225 . 3226)) nil (25911 57972 595578 715000) 0 nil])
([nil nil ((3775 . 3786) (t 25911 57972 606868 40000)) nil (25911 58020 556940 526000) 0 nil])
([nil nil ((3776 . 3787) (#("          " 0 10 (fontified t ws-butler-chg chg)) . 3776) (undo-tree-id184 . -10) 3786) nil (25911 58020 556939 360000) 0 nil])
([nil nil ((3787 . 3788)) nil (25911 58020 556937 298000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t ws-butler-chg chg)) . -3787) (undo-tree-id183 . -1) 3788) nil (25911 58020 556936 232000) 0 nil])
([nil nil ((3787 . 3793)) nil (25911 58020 556934 544000) 0 nil])
([nil nil ((3777 . 3785) (#("          " 0 10 (fontified nil ws-butler-chg chg)) . 3777) (3793 . 3794)) nil (25911 58020 556933 603000) 0 nil])
([nil nil ((3792 . 3803)) nil (25911 58020 556932 559000) 0 nil])
([nil nil ((3803 . 3809)) nil (25911 58020 556931 688000) 0 nil])
([nil nil ((3809 . 3810)) nil (25911 58020 556930 924000) 0 nil])
([nil nil ((3811 . 3812) (nil syntax-table nil 3811 . 3812) (nil syntax-table (1) 3810 . 3811) (3810 . 3811)) nil (25911 58020 556929 878000) 0 nil])
([nil nil ((3816 . 3817) (nil syntax-table nil 3816 . 3817) (nil syntax-table (1) 3810 . 3811) (3815 . 3816) (nil syntax-table nil 3815 . 3816) (nil syntax-table (1) 3810 . 3811) (3814 . 3815) (nil syntax-table nil 3814 . 3815) (nil syntax-table (1) 3810 . 3811) (3813 . 3814) (nil syntax-table nil 3813 . 3814) (nil syntax-table (1) 3810 . 3811) (3812 . 3813) (nil syntax-table nil 3812 . 3813) (nil syntax-table (1) 3810 . 3811)) nil (25911 58020 556927 990000) 0 nil])
([nil nil ((3817 . 3818) (nil syntax-table nil 3817 . 3818) (nil syntax-table (1) 3810 . 3811)) nil (25911 58020 556924 619000) 0 nil])
([nil nil ((3828 . 3829) (nil syntax-table nil 3828 . 3829) (nil syntax-table (1) 3810 . 3811) (3827 . 3828) (nil syntax-table nil 3827 . 3828) (nil syntax-table (1) 3810 . 3811) (3826 . 3827) (nil syntax-table nil 3826 . 3827) (nil syntax-table (1) 3810 . 3811) (3825 . 3826) (nil syntax-table nil 3825 . 3826) (nil syntax-table (1) 3810 . 3811) (3824 . 3825) (nil syntax-table nil 3824 . 3825) (nil syntax-table (1) 3810 . 3811) (3823 . 3824) (nil syntax-table nil 3823 . 3824) (nil syntax-table (1) 3810 . 3811) (3822 . 3823) (nil syntax-table nil 3822 . 3823) (nil syntax-table (1) 3810 . 3811) (3821 . 3822) (nil syntax-table nil 3821 . 3822) (nil syntax-table (1) 3810 . 3811) (3820 . 3821) (nil syntax-table nil 3820 . 3821) (nil syntax-table (1) 3810 . 3811) (3819 . 3820) (nil syntax-table nil 3819 . 3820) (nil syntax-table (1) 3810 . 3811) (3818 . 3819) (nil syntax-table nil 3818 . 3819) (nil syntax-table (1) 3810 . 3811)) nil (25911 58020 556922 62000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3828) (undo-tree-id182 . -1) (nil syntax-table nil 3829 . 3830) (nil syntax-table (1) 3810 . 3811)) nil (25911 58020 556915 115000) 0 nil])
([nil nil ((3828 . 3829) (nil syntax-table nil 3828 . 3829) (nil syntax-table (1) 3810 . 3811)) nil (25911 58020 556912 806000) 0 nil])
([nil nil ((3834 . 3835) (nil syntax-table nil 3834 . 3835) (nil syntax-table (1) 3810 . 3811) (3833 . 3834) (nil syntax-table nil 3834 . 3835) (nil syntax-table (1) 3810 . 3811) (3832 . 3833) (nil syntax-table nil 3832 . 3833) (nil syntax-table (1) 3810 . 3811) (3831 . 3832) (nil syntax-table nil 3831 . 3832) (nil syntax-table (1) 3810 . 3811) (3830 . 3831) (nil syntax-table nil 3830 . 3831) (nil syntax-table (1) 3810 . 3811) (3829 . 3830) (nil syntax-table nil 3829 . 3830) (nil syntax-table (1) 3810 . 3811)) nil (25911 58020 556910 934000) 0 nil])
([nil nil ((3835 . 3836)) nil (25911 58020 556906 760000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3835) (undo-tree-id181 . -1) 3836) nil (25911 58020 556905 301000) 0 nil])
([nil nil ((3835 . 3836)) nil (25911 58020 556898 810000) 0 nil])
([nil nil ((3836 . 3843)) nil (25911 58020 556898 79000) 0 nil])
([nil nil ((3843 . 3844)) nil (25911 58020 556897 208000) 0 nil])
([nil nil ((3844 . 3845)) nil (25911 58020 556896 430000) 0 nil])
([nil nil ((3845 . 3856)) nil (25911 58020 556895 634000) 0 nil])
([nil nil ((3856 . 3861)) nil (25911 58020 556894 305000) 0 nil])
([nil nil ((3861 . 3862)) nil (25911 58020 556889 700000) 0 nil])
([nil nil ((2985 . 2988) (t 25911 58020 570757 137000)) nil (25911 58181 479382 383000) 0 nil])
([nil nil ((2988 . 2994)) nil (25911 58181 479381 261000) 0 nil])
([nil nil ((2994 . 2995)) nil (25911 58181 479380 512000) 0 nil])
([nil nil ((2999 . 3000) (nil syntax-table nil 2999 . 3000) (nil syntax-table (1) 2995 . 2996) (2998 . 2999) (nil syntax-table nil 2998 . 2999) (nil syntax-table (1) 2995 . 2996) (2997 . 2998) (nil syntax-table nil 2997 . 2998) (nil syntax-table (1) 2995 . 2996) (2996 . 2997) (nil syntax-table nil 2996 . 2997) (nil syntax-table (1) 2995 . 2996) (2995 . 2996)) nil (25911 58181 479379 428000) 0 nil])
([nil nil ((3000 . 3001) (nil syntax-table nil 3000 . 3001) (nil syntax-table (1) 2995 . 2996)) nil (25911 58181 479376 858000) 0 nil])
([nil nil ((3003 . 3004) (nil syntax-table nil 3003 . 3004) (nil syntax-table (1) 2995 . 2996) (3002 . 3003) (nil syntax-table nil 3002 . 3003) (nil syntax-table (1) 2995 . 2996) (3001 . 3002) (nil syntax-table nil 3001 . 3002) (nil syntax-table (1) 2995 . 2996)) nil (25911 58181 479375 547000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3003) (undo-tree-id204 . -1) (nil syntax-table nil 3004 . 3005) (nil syntax-table (1) 2995 . 2996)) nil (25911 58181 479373 327000) 0 nil])
([nil nil ((3008 . 3009) (nil syntax-table nil 3008 . 3009) (nil syntax-table (1) 2995 . 2996) (3007 . 3008) (nil syntax-table nil 3007 . 3008) (nil syntax-table (1) 2995 . 2996) (3006 . 3007) (nil syntax-table nil 3006 . 3007) (nil syntax-table (1) 2995 . 2996) (3005 . 3006) (nil syntax-table nil 3005 . 3006) (nil syntax-table (1) 2995 . 2996) (3004 . 3005) (nil syntax-table nil 3004 . 3005) (nil syntax-table (1) 2995 . 2996) (3003 . 3004) (nil syntax-table nil 3003 . 3004) (nil syntax-table (1) 2995 . 2996)) nil (25911 58181 479371 143000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3008) (undo-tree-id203 . -1) 3009) nil (25911 58181 479367 582000) 0 nil])
([nil nil ((3010 . 3011) (nil syntax-table nil 3010 . 3011) (nil syntax-table (1) 2995 . 2996) (3009 . 3010) (nil syntax-table nil 3010 . 3011) (nil syntax-table (1) 2995 . 2996) (3008 . 3009) (nil syntax-table nil 3008 . 3009) (nil syntax-table (1) 2995 . 2996)) nil (25911 58181 479365 706000) 0 nil])
([nil nil ((3011 . 3012)) nil (25911 58181 479363 793000) 0 nil])
([nil nil ((3012 . 3017)) nil (25911 58181 479363 128000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -3012) (undo-tree-id198 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3013) (undo-tree-id199 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3014) (undo-tree-id200 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3015) (undo-tree-id201 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3016) (undo-tree-id202 . -1) 3017) nil (25911 58181 479361 733000) 0 nil])
([nil nil ((3012 . 3013)) nil (25911 58181 479356 289000) 0 nil])
([nil nil ((3013 . 3016)) nil (25911 58181 479355 619000) 0 nil])
([nil nil ((3016 . 3022)) nil (25911 58181 479355 15000) 0 nil])
([nil nil ((3022 . 3023)) nil (25911 58181 479354 410000) 0 nil])
([nil nil ((3023 . 3024)) nil (25911 58181 479353 703000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg)) . -3023) (undo-tree-id197 . -1) 3024) nil (25911 58181 479352 831000) 0 nil])
([nil nil ((3027 . 3028) (nil syntax-table nil 3027 . 3028) (nil syntax-table (1) 3023 . 3024) (3026 . 3027) (nil syntax-table nil 3026 . 3027) (nil syntax-table (1) 3023 . 3024) (3025 . 3026) (nil syntax-table nil 3025 . 3026) (nil syntax-table (1) 3023 . 3024) (3024 . 3025) (nil syntax-table nil 3024 . 3025) (nil syntax-table (1) 3023 . 3024) (3023 . 3024)) nil (25911 58181 479350 788000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3025) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (nil syntax-table nil 3026 . 3027) (nil syntax-table (1) 3023 . 3024) (#("N" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3026) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (nil syntax-table nil 3027 . 3028) (nil syntax-table (1) 3023 . 3024) (#("T" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3027) (undo-tree-id196 . -1) (nil syntax-table nil 3028 . 3029) (nil syntax-table (1) 3023 . 3024)) nil (25911 58181 479347 523000) 0 nil])
([nil nil ((3025 . 3026) (nil syntax-table nil 3025 . 3026) (nil syntax-table (1) 3023 . 3024)) nil (25911 58181 479342 126000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3025) (undo-tree-id191 . -1) (nil syntax-table nil 3026 . 3027) (nil syntax-table (1) 3023 . 3024)) nil (25911 58181 479340 820000) 0 nil])
([nil nil ((3035 . 3036) (nil syntax-table nil 3035 . 3036) (nil syntax-table (1) 3023 . 3024) (3034 . 3035) (nil syntax-table nil 3034 . 3035) (nil syntax-table (1) 3023 . 3024) (3033 . 3034) (nil syntax-table nil 3033 . 3034) (nil syntax-table (1) 3023 . 3024) (3032 . 3033) (nil syntax-table nil 3032 . 3033) (nil syntax-table (1) 3023 . 3024) (3031 . 3032) (nil syntax-table nil 3031 . 3032) (nil syntax-table (1) 3023 . 3024) (3030 . 3031) (nil syntax-table nil 3030 . 3031) (nil syntax-table (1) 3023 . 3024) (3029 . 3030) (nil syntax-table nil 3029 . 3030) (nil syntax-table (1) 3023 . 3024) (3028 . 3029) (nil syntax-table nil 3028 . 3029) (nil syntax-table (1) 3023 . 3024) (3027 . 3028) (nil syntax-table nil 3027 . 3028) (nil syntax-table (1) 3023 . 3024) (3026 . 3027) (nil syntax-table nil 3026 . 3027) (nil syntax-table (1) 3023 . 3024) (3025 . 3026) (nil syntax-table nil 3025 . 3026) (nil syntax-table (1) 3023 . 3024)) nil (25911 58181 479337 819000) 0 nil])
([nil nil ((3036 . 3037) (nil syntax-table nil 3036 . 3037) (nil syntax-table (1) 3023 . 3024)) nil (25911 58181 479332 241000) 0 nil])
([nil nil ((3040 . 3041) (nil syntax-table nil 3040 . 3041) (nil syntax-table (1) 3023 . 3024) (3039 . 3040) (nil syntax-table nil 3039 . 3040) (nil syntax-table (1) 3023 . 3024) (3038 . 3039) (nil syntax-table nil 3038 . 3039) (nil syntax-table (1) 3023 . 3024) (3037 . 3038) (nil syntax-table nil 3037 . 3038) (nil syntax-table (1) 3023 . 3024)) nil (25911 58181 479330 736000) 0 nil])
([nil nil ((3041 . 3042) (nil syntax-table nil 3041 . 3042) (nil syntax-table (1) 3023 . 3024)) nil (25911 58181 479328 28000) 0 nil])
([nil nil ((3042 . 3043) (nil syntax-table nil 3042 . 3043) (nil syntax-table (1) 3023 . 3024)) nil (25911 58181 479326 813000) 0 nil])
([nil nil ((3050 . 3051) (nil syntax-table nil 3050 . 3051) (nil syntax-table (1) 3023 . 3024) (3049 . 3050) (nil syntax-table nil 3050 . 3051) (nil syntax-table (1) 3023 . 3024) (3048 . 3049) (nil syntax-table nil 3048 . 3049) (nil syntax-table (1) 3023 . 3024) (3047 . 3048) (nil syntax-table nil 3047 . 3048) (nil syntax-table (1) 3023 . 3024) (3046 . 3047) (nil syntax-table nil 3046 . 3047) (nil syntax-table (1) 3023 . 3024) (3045 . 3046) (nil syntax-table nil 3045 . 3046) (nil syntax-table (1) 3023 . 3024) (3044 . 3045) (nil syntax-table nil 3044 . 3045) (nil syntax-table (1) 3023 . 3024) (3043 . 3044) (nil syntax-table nil 3043 . 3044) (nil syntax-table (1) 3023 . 3024)) nil (25911 58181 479324 812000) 0 nil])
([nil nil ((3051 . 3052)) nil (25911 58181 479319 815000) 0 nil])
([nil nil ((3052 . 3053)) nil (25911 58181 479319 165000) 0 nil])
([nil nil ((3053 . 3056)) nil (25911 58181 479318 520000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3055) (undo-tree-id190 . -1) 3056) nil (25911 58181 479317 622000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 3055) (#("
" 0 1 (fontified t ws-butler-chg delete)) . 3055)) nil (25911 58181 479315 799000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -3053) (undo-tree-id188 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3054) (undo-tree-id189 . -1) 3055) nil (25911 58181 479314 593000) 0 nil])
([nil nil ((3053 . 3054)) nil (25911 58181 479311 705000) 0 nil])
([nil nil ((3760 . 3771)) nil (25911 58181 479310 962000) 0 nil])
([nil nil ((3771 . 3780)) nil (25911 58181 479310 199000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -3779) (undo-tree-id187 . -1) 3780) nil (25911 58181 479309 113000) 0 nil])
([nil nil ((3779 . 3782)) nil (25911 58181 479307 559000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg)) . -3781) (undo-tree-id186 . -1) 3782) nil (25911 58181 479306 491000) 0 nil])
([nil nil ((3781 . 3782)) nil (25911 58181 479304 376000) 0 nil])
([nil nil ((3211 . 3214)) nil (25911 58181 479303 621000) 0 nil])
([nil nil ((3214 . 3228)) nil (25911 58181 479302 877000) 0 nil])
([nil nil ((#("1" 0 1 (ws-butler-chg chg fontified t)) . -3227) (undo-tree-id185 . -1) 3228) nil (25911 58181 479301 382000) 0 nil])
([nil nil ((3227 . 3228)) nil (25911 58181 479294 347000) 0 nil])
([nil nil ((3228 . 3229)) nil (25911 58181 479289 838000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4609) (undo-tree-id223 . -1) (undo-tree-id224 . -1) 4610 (t 25911 58181 498400 18000)) nil (25911 58335 591412 115000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -4574) (undo-tree-id222 . -1) 4575) nil (25911 58335 591404 801000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4090) (undo-tree-id221 . -1) 4091) nil (25911 58335 591398 682000) 0 nil])
([nil nil ((4152 . 4155)) nil (25911 58335 591396 979000) 0 nil])
([nil nil ((4153 . 4156) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 4153) (undo-tree-id220 . -2) 4155) nil (25911 58335 591396 89000) 0 nil])
([nil nil ((4154 . 4157) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 4154) (undo-tree-id219 . -2) 4156) nil (25911 58335 591394 112000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 4155) (undo-tree-id218 . -2) 4157) nil (25911 58335 591392 109000) 0 nil])
([nil nil ((4805 . 4808)) nil (25911 58335 591390 506000) 0 nil])
([nil nil ((4806 . 4809) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 4806) (undo-tree-id217 . -2) 4808) nil (25911 58335 591389 636000) 0 nil])
([nil nil ((4807 . 4810) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 4807) (undo-tree-id216 . -2) 4809) nil (25911 58335 591387 723000) 0 nil])
([nil nil ((4808 . 4811) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 4808) (undo-tree-id215 . -2) 4810) nil (25911 58335 591385 612000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil ws-butler-chg chg)) . 4809) (undo-tree-id214 . -2) (4811 . 4812)) nil (25911 58335 591383 462000) 0 nil])
([nil nil ((4810 . 4811)) nil (25911 58335 591381 534000) 0 nil])
([nil nil ((4811 . 4813)) nil (25911 58335 591380 608000) 0 nil])
([nil nil ((4813 . 4834)) nil (25911 58335 591379 835000) 0 nil])
([nil nil ((4834 . 4836)) nil (25911 58335 591378 891000) 0 nil])
([nil nil ((4090 . 4093)) nil (25911 58335 591377 704000) 0 nil])
([nil nil ((4091 . 4094) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 4091) (undo-tree-id213 . -2) 4093) nil (25911 58335 591376 749000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 4092) (undo-tree-id212 . -2) 4094) nil (25911 58335 591374 562000) 0 nil])
([nil nil ((4091 . 4094)) nil (25911 58335 591372 826000) 0 nil])
([nil nil ((4091 . 4093) (4094 . 4095)) nil (25911 58335 591371 831000) 0 nil])
([nil nil ((4097 . 4098)) nil (25911 58335 591370 789000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg)) . -4097) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) 4098) nil (25911 58335 591369 846000) 0 nil])
([nil nil ((4097 . 4108)) nil (25911 58335 591366 373000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t ws-butler-chg chg)) . -4105) (undo-tree-id206 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -4106) (undo-tree-id207 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4107) (undo-tree-id208 . -1) 4108) nil (25911 58335 591364 664000) 0 nil])
([nil nil ((4105 . 4109)) nil (25911 58335 591360 384000) 0 nil])
([nil nil ((4109 . 4110)) nil (25911 58335 591359 621000) 0 nil])
([nil nil ((4110 . 4111)) nil (25911 58335 591358 904000) 0 nil])
([nil nil ((4111 . 4112)) nil (25911 58335 591358 10000) 0 nil])
([nil nil ((4112 . 4113)) nil (25911 58335 591357 146000) 0 nil])
([nil nil ((4113 . 4118)) nil (25911 58335 591356 353000) 0 nil])
([nil nil ((4118 . 4127)) nil (25911 58335 591355 542000) 0 nil])
([nil nil ((4127 . 4129)) nil (25911 58335 591354 601000) 0 nil])
([nil nil ((4129 . 4130)) nil (25911 58335 591353 710000) 0 nil])
([nil nil ((4130 . 4135)) nil (25911 58335 591352 879000) 0 nil])
([nil nil ((4135 . 4137)) nil (25911 58335 591351 932000) 0 nil])
([nil nil ((4137 . 4145)) nil (25911 58335 591351 50000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4144) (undo-tree-id205 . -1) 4145) nil (25911 58335 591349 179000) 0 nil])
([nil nil ((4144 . 4160)) nil (25911 58335 591339 372000) 0 nil])
([nil nil ((3746 . 3747) (t 25911 58335 606075 120000)) nil (25911 58416 277670 938000) 0 nil])
([nil nil ((3748 . 3749)) nil (25911 58416 277669 681000) 0 nil])
([nil nil ((3835 . 3836)) nil (25911 58416 277668 798000) 0 nil])
([nil nil ((3834 . 3835)) nil (25911 58416 277667 914000) 0 nil])
([nil nil ((3902 . 3903)) nil (25911 58416 277666 691000) 0 nil])
([nil nil ((3901 . 3902)) nil (25911 58416 277662 402000) 0 nil])
([nil nil ((3053 . 3056) (t 25911 58416 513909 710000)) nil (25911 58443 265961 55000) 0 nil])
([nil nil ((3056 . 3062)) nil (25911 58443 265959 867000) 0 nil])
([nil nil ((3062 . 3063)) nil (25911 58443 265958 528000) 0 nil])
([nil nil ((3066 . 3067) (nil syntax-table nil 3066 . 3067) (nil syntax-table (1) 3063 . 3064) (3065 . 3066) (nil syntax-table nil 3077 . 3078) (nil syntax-table (1) 3063 . 3064) (3064 . 3065) (nil syntax-table nil 3064 . 3065) (nil syntax-table (1) 3063 . 3064) (3063 . 3064)) nil (25911 58443 265953 643000) 0 nil])
([nil nil ((3067 . 3068)) nil (25911 58443 265946 518000) 0 nil])
([nil nil ((3068 . 3069)) nil (25911 58443 265939 942000) 0 nil])
([nil nil ((#("          printf(\"FIX ME\\n\");
" 0 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-4-face)) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face (rainbow-delimiters-depth-4-face)) 28 29 (fontified t) 29 30 (fontified t)) . 3767) (undo-tree-id225 . -29) (undo-tree-id226 . 9) (undo-tree-id227 . -29) (undo-tree-id228 . -21) (undo-tree-id229 . -21) (undo-tree-id230 . -21) (undo-tree-id231 . -21) (undo-tree-id232 . -21) (undo-tree-id233 . -21) (undo-tree-id234 . -21) (undo-tree-id235 . -21) (undo-tree-id236 . -20) (undo-tree-id237 . -21) (undo-tree-id238 . -21) (undo-tree-id239 . -21) (undo-tree-id240 . -21) (undo-tree-id241 . -21) (undo-tree-id242 . -21) (undo-tree-id243 . -21) (undo-tree-id244 . -21) (undo-tree-id245 . -21) (undo-tree-id246 . -21) (undo-tree-id247 . -20) (undo-tree-id248 . -20) (undo-tree-id249 . -20) (undo-tree-id250 . -20) (undo-tree-id251 . -20) (undo-tree-id252 . -20) (undo-tree-id253 . -20) (undo-tree-id254 . -20) (undo-tree-id255 . -20) (undo-tree-id256 . -20) (undo-tree-id257 . -20) (undo-tree-id258 . -20) (undo-tree-id259 . -20) (undo-tree-id260 . -20) (undo-tree-id261 . -20) (undo-tree-id262 . -20) (undo-tree-id263 . -20) (undo-tree-id264 . -20) (undo-tree-id265 . -20) (undo-tree-id266 . -30) 3787 (t 25911 58443 285855 626000)) nil (25911 58482 960204 264000) 0 nil])
([nil nil ((1056 . 1059) (t 25911 58482 977776 1000)) nil (25911 59365 784780 138000) 0 nil])
([nil nil ((1057 . 1060) (#("  " 0 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 1057) (undo-tree-id741 . -2) 1059) nil (25911 59365 784778 3000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 1058) (undo-tree-id740 . -2) 1060) nil (25911 59365 784774 390000) 0 nil])
([nil nil ((1057 . 1059)) nil (25911 59365 784771 244000) 0 nil])
([nil nil ((1059 . 1060)) nil (25911 59365 784769 823000) 0 nil])
([nil nil ((1060 . 1061)) nil (25911 59365 784768 692000) 0 nil])
([nil nil ((1061 . 1062)) nil (25911 59365 784767 504000) 0 nil])
([nil nil ((1062 . 1083)) nil (25911 59365 784765 687000) 0 nil])
([nil nil ((1083 . 1085)) nil (25911 59365 784764 291000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1084) (undo-tree-id739 . -1) 1085) nil (25911 59365 784762 433000) 0 nil])
([nil nil ((1084 . 1099)) nil (25911 59365 784759 526000) 0 nil])
([nil nil ((1099 . 1112)) nil (25911 59365 784757 696000) 0 nil])
([nil nil ((1112 . 1113)) nil (25911 59365 784754 822000) 0 nil])
([nil nil ((1113 . 1114)) nil (25911 59365 784752 528000) 0 nil])
([nil nil ((1114 . 1120)) nil (25911 59365 784751 51000) 0 nil])
([nil nil ((#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1119) (undo-tree-id737 . -1) (undo-tree-id738 . -1) 1120) nil (25911 59365 784748 595000) 0 nil])
([nil nil ((1119 . 1126)) nil (25911 59365 784743 858000) 0 nil])
([nil nil ((#("log" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 1 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 2 3 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -1123) (undo-tree-id735 . -3) (undo-tree-id736 . -3) 1126) nil (25911 59365 784741 283000) 0 nil])
([nil nil ((#("opt_" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1119) (undo-tree-id732 . -1) (undo-tree-id733 . -4) (undo-tree-id734 . -4) 1123) nil (25911 59365 784735 914000) 0 nil])
([nil nil ((#("Sets " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1114) (undo-tree-id729 . -5) (undo-tree-id730 . -5) (undo-tree-id731 . -5) 1119) nil (25911 59365 784730 92000) 0 nil])
([nil nil ((#("passed, " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 5 6 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 6 7 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 7 8 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1106) (undo-tree-id726 . -8) (undo-tree-id727 . -8) (undo-tree-id728 . -8) 1114) nil (25911 59365 784720 715000) 0 nil])
([nil nil ((#("If " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1103) (undo-tree-id723 . -3) (undo-tree-id724 . -3) (undo-tree-id725 . -3) 1106) nil (25911 59365 784715 235000) 0 nil])
([nil nil ((1103 . 1114)) nil (25911 59365 784709 940000) 0 nil])
([nil nil ((1114 . 1121)) nil (25911 59365 784708 467000) 0 nil])
([nil nil ((#("." 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1119) (undo-tree-id721 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -1120) (undo-tree-id722 . -1) 1121) nil (25911 59365 784706 649000) 0 nil])
([nil nil ((1119 . 1120)) nil (25911 59365 784701 881000) 0 nil])
([nil nil ((1120 . 1141)) nil (25911 59365 784699 156000) 0 nil])
([nil nil ((1141 . 1142)) nil (25911 59365 784697 707000) 0 nil])
([nil nil ((1142 . 1143)) nil (25911 59365 784696 550000) 0 nil])
([nil nil ((1143 . 1145)) nil (25911 59365 784695 383000) 0 nil])
([nil nil ((1145 . 1150)) nil (25911 59365 784694 53000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1149) (undo-tree-id719 . -1) (undo-tree-id720 . -1) 1150) nil (25911 59365 784692 180000) 0 nil])
([nil nil ((1149 . 1167)) nil (25911 59365 784687 914000) 0 nil])
([nil nil ((#("m" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1164) (undo-tree-id716 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1165) (undo-tree-id717 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -1166) (undo-tree-id718 . -1) 1167) nil (25911 59365 784685 714000) 0 nil])
([nil nil ((#("I" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1163) (undo-tree-id714 . -1) (undo-tree-id715 . -1) 1164) nil (25911 59365 784678 885000) 0 nil])
([nil nil ((1162 . 1165) (#(" " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . 1162) (undo-tree-id712 . -1) (undo-tree-id713 . -1) 1163) nil (25911 59365 784674 381000) 0 nil])
([nil nil ((1165 . 1186)) nil (25911 59365 784667 844000) 0 nil])
([nil nil ((1186 . 1199)) nil (25911 59365 784666 290000) 0 nil])
([nil nil ((1199 . 1212)) nil (25911 59365 784664 630000) 0 nil])
([nil nil ((1162 . 1170)) nil (25911 59365 784662 497000) 0 nil])
([nil nil ((1170 . 1183)) nil (25911 59365 784661 132000) 0 nil])
([nil nil ((#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1178) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1179) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (#("k" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1180) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1181) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (#("w" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1182) (undo-tree-id710 . -1) (undo-tree-id711 . -1) 1183) nil (25911 59365 784655 918000) 0 nil])
([nil nil ((1178 . 1189)) nil (25911 59365 784636 36000) 0 nil])
([nil nil ((#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1180) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1181) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (#("w" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1182) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1183) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1184) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1185) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1186) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1187) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1188) (undo-tree-id701 . -1) 1189) nil (25911 59365 784630 934000) 0 nil])
([nil nil ((1180 . 1201)) nil (25911 59365 784600 362000) 0 nil])
([nil nil ((1201 . 1202)) nil (25911 59365 784599 147000) 0 nil])
([nil nil ((1202 . 1208)) nil (25911 59365 784597 815000) 0 nil])
([nil nil ((1208 . 1209)) nil (25911 59365 784596 586000) 0 nil])
([nil nil ((1209 . 1219)) nil (25911 59365 784595 403000) 0 nil])
([nil nil ((#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1218) (undo-tree-id683 . -1) (undo-tree-id684 . -1) 1219) nil (25911 59365 784593 573000) 0 nil])
([nil nil ((1218 . 1219)) nil (25911 59365 784587 769000) 0 nil])
([nil nil ((1219 . 1220)) nil (25911 59365 784586 265000) 0 nil])
([nil nil ((1220 . 1221)) nil (25911 59365 784584 457000) 0 nil])
([nil nil ((1221 . 1237)) nil (25911 59365 784583 311000) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1235) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1236) (undo-tree-id681 . -1) (undo-tree-id682 . -1) 1237) nil (25911 59365 784579 369000) 0 nil])
([nil nil ((1235 . 1242)) nil (25911 59365 784570 147000) 0 nil])
([nil nil ((1242 . 1243)) nil (25911 59365 784567 468000) 0 nil])
([nil nil ((1243 . 1253)) nil (25911 59365 784564 834000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1249) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1250) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1251) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1252) (undo-tree-id676 . -1) (undo-tree-id677 . -1) 1253) nil (25911 59365 784562 915000) 0 nil])
([nil nil ((1249 . 1252)) nil (25911 59365 784556 374000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -1251) (undo-tree-id669 . -1) 1252) nil (25911 59365 784555 451000) 0 nil])
([nil nil ((1251 . 1253)) nil (25911 59365 784553 816000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1251) (undo-tree-id667 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1252) (undo-tree-id668 . -1) 1253) nil (25911 59365 784552 545000) 0 nil])
([nil nil ((1251 . 1255)) nil (25911 59365 784549 388000) 0 nil])
([nil nil ((1255 . 1260)) nil (25911 59365 784548 693000) 0 nil])
([nil nil ((#("O" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1259) (undo-tree-id666 . -1) 1260) nil (25911 59365 784547 843000) 0 nil])
([nil nil ((1259 . 1280)) nil (25911 59365 784546 221000) 0 nil])
([nil nil ((1280 . 1284)) nil (25911 59365 784545 338000) 0 nil])
([nil nil ((1284 . 1285)) nil (25911 59365 784544 696000) 0 nil])
([nil nil ((1285 . 1286)) nil (25911 59365 784543 979000) 0 nil])
([nil nil ((1286 . 1293)) nil (25911 59365 784543 256000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1289) (undo-tree-id662 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1290) (undo-tree-id663 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1291) (undo-tree-id664 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1292) (undo-tree-id665 . -1) 1293) nil (25911 59365 784541 911000) 0 nil])
([nil nil ((1289 . 1300)) nil (25911 59365 784537 656000) 0 nil])
([nil nil ((#("\"" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -1299) (undo-tree-id661 . -1) 1300) nil (25911 59365 784536 781000) 0 nil])
([nil nil ((1299 . 1305)) nil (25911 59365 784535 241000) 0 nil])
([nil nil ((#("R" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1303) (undo-tree-id659 . -1) (#("\"" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1304) (undo-tree-id660 . -1) 1305) nil (25911 59365 784534 212000) 0 nil])
([nil nil ((1303 . 1306)) nil (25911 59365 784531 736000) 0 nil])
([nil nil ((1306 . 1323)) nil (25911 59365 784530 906000) 0 nil])
([nil nil ((1373 . 1386)) nil (25911 59365 784529 806000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1385) (undo-tree-id658 . -1) 1386) nil (25911 59365 784528 900000) 0 nil])
([nil nil ((1385 . 1391)) nil (25911 59365 784527 21000) 0 nil])
([nil nil ((#("IF loop will check whether opt_log is defined, and if so, format it for fprintf, renaming to \"ERROR_PIPE\". If not defined, define \"ERROR_PIPE\" is set to STDERR.
  ISSUE - I print error messages in getopt. If I define ERROR_PIPE " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 5 6 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 6 7 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 7 8 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 8 9 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 9 10 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 10 11 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 11 12 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 12 13 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 13 14 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 14 15 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 15 16 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 16 17 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 17 18 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 18 19 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 19 20 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 20 21 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 21 22 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 22 23 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 23 24 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 24 25 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 25 26 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 26 27 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 27 28 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 28 29 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 29 30 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 30 31 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 31 32 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 32 33 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 33 34 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 34 35 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 35 36 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 36 37 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 37 38 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 38 39 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 39 40 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 40 41 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 41 42 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 42 43 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 43 44 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 44 45 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 45 47 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 47 48 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 48 49 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 49 50 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 50 51 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 51 52 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 52 53 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 53 54 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 54 55 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 55 56 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 56 57 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 57 58 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 58 59 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 59 60 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 60 61 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 61 62 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 62 63 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 63 64 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 64 65 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 65 66 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 66 67 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 67 68 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 68 69 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 69 70 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 70 71 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 71 72 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 72 73 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 73 74 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 74 75 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 75 76 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 76 77 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 77 78 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 78 79 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 79 80 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 80 81 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 81 82 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 82 83 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 83 84 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 84 85 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 85 86 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 86 87 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 87 88 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 88 89 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 89 90 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 90 91 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 91 92 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 92 93 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 93 94 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 94 95 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 95 96 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 96 97 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 97 98 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 98 99 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 99 100 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 100 101 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 101 102 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 102 103 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 103 104 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 104 105 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 105 106 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 106 107 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 107 108 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 108 109 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 109 110 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 110 111 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 111 112 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 112 113 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 113 114 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 114 115 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 115 116 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 116 117 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 117 118 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 118 119 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 119 120 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 120 121 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 121 122 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 122 123 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 123 124 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 124 125 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 125 126 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 126 127 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 127 128 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 128 129 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 129 130 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 130 131 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 131 132 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 132 133 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 133 134 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 134 135 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 135 136 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 136 137 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 137 138 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 138 139 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 139 140 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 140 141 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 141 142 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 142 143 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 143 144 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 144 145 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 145 146 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 146 147 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 147 148 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 148 149 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 149 150 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 150 151 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 151 152 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 152 153 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 153 154 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 154 155 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 155 156 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 156 157 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 157 158 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 158 159 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 159 160 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 160 161 (ws-butler-chg delete fontified t face font-lock-comment-face c-in-sws t) 161 163 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 163 164 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 164 165 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 165 166 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 166 167 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 167 168 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 168 169 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 169 170 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 170 171 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 171 172 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 172 173 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 173 174 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 174 175 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 175 176 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 176 177 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 177 178 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 178 179 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 179 180 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 180 181 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 181 182 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 182 183 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 183 184 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 184 185 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 185 186 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 186 187 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 187 188 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 188 189 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 189 190 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 190 191 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 191 192 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 192 193 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 193 194 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 194 195 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 195 196 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 196 197 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 197 198 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 198 199 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 199 200 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 200 201 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 201 202 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 202 203 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 203 204 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 204 205 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 205 206 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 206 207 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 207 208 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 208 209 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 209 210 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 210 211 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 211 212 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 212 213 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 213 214 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 214 215 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 215 216 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 216 217 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 217 218 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 218 219 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 219 220 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 220 221 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 221 222 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 222 223 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 223 224 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 224 225 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 225 226 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 226 227 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 227 228 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 1163) (undo-tree-id646 . -228) (undo-tree-id647 . -151) (undo-tree-id648 . -227) (undo-tree-id649 . -71) (undo-tree-id650 . -132) (undo-tree-id651 . -187) (undo-tree-id652 . -17) (undo-tree-id653 . -227) (undo-tree-id654 . -228) (undo-tree-id655 . -228) (undo-tree-id656 . -228) (undo-tree-id657 . -228)) nil (25911 59365 784525 470000) 0 nil])
([nil nil ((1163 . 1178)) nil (25911 59365 784505 756000) 0 nil])
([nil nil ((#("whether " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 1 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 2 3 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 3 4 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 4 5 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 5 6 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 6 7 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 7 8 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -1170) (undo-tree-id644 . -6) (undo-tree-id645 . -8) 1178) nil (25911 59365 784503 783000) 0 nil])
([nil nil ((#("Checks " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 5 6 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 6 7 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1163) (undo-tree-id642 . -7) (undo-tree-id643 . -7) 1170) nil (25911 59365 784497 564000) 0 nil])
([nil nil ((#("name. " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 5 6 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1157) (undo-tree-id630 . -6) (undo-tree-id631 . -6) (undo-tree-id632 . -6) (undo-tree-id633 . -6) (undo-tree-id634 . -6) (undo-tree-id635 . -6) (undo-tree-id636 . -6) (undo-tree-id637 . -6) (undo-tree-id638 . -6) (undo-tree-id639 . -6) (undo-tree-id640 . -6) (undo-tree-id641 . -6) 1163) nil (25911 59365 784492 773000) 0 nil])
([nil nil ((#("file " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1152) (undo-tree-id618 . -5) (undo-tree-id619 . -5) (undo-tree-id620 . -5) (undo-tree-id621 . -5) (undo-tree-id622 . -5) (undo-tree-id623 . -5) (undo-tree-id624 . -5) (undo-tree-id625 . -5) (undo-tree-id626 . -5) (undo-tree-id627 . -5) (undo-tree-id628 . -5) (undo-tree-id629 . -5) 1157) nil (25911 59365 784475 568000) 0 nil])
([nil nil ((#("to " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1149) (undo-tree-id605 . -3) (undo-tree-id606 . -3) (undo-tree-id607 . -3) (undo-tree-id608 . -3) (undo-tree-id609 . -3) (undo-tree-id610 . -3) (undo-tree-id611 . -3) (undo-tree-id612 . -3) (undo-tree-id613 . -3) (undo-tree-id614 . -3) (undo-tree-id615 . -3) (undo-tree-id616 . -3) (undo-tree-id617 . -3) 1152) nil (25911 59365 784455 337000) 0 nil])
([nil nil ((#("sets " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1144) (undo-tree-id592 . -5) (undo-tree-id593 . -5) (undo-tree-id594 . -5) (undo-tree-id595 . -5) (undo-tree-id596 . -5) (undo-tree-id597 . -5) (undo-tree-id598 . -5) (undo-tree-id599 . -5) (undo-tree-id600 . -5) (undo-tree-id601 . -5) (undo-tree-id602 . -5) (undo-tree-id603 . -5) (undo-tree-id604 . -5) 1149) nil (25911 59365 784433 164000) 0 nil])
([nil nil ((#("L, " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1141) (undo-tree-id579 . -3) (undo-tree-id580 . -3) (undo-tree-id581 . -3) (undo-tree-id582 . -3) (undo-tree-id583 . -3) (undo-tree-id584 . -3) (undo-tree-id585 . -3) (undo-tree-id586 . -3) (undo-tree-id587 . -3) (undo-tree-id588 . -3) (undo-tree-id589 . -3) (undo-tree-id590 . -3) (undo-tree-id591 . -3) 1144) nil (25911 59365 784413 768000) 0 nil])
([nil nil ((#("If -" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1137) (undo-tree-id565 . -4) (undo-tree-id566 . -4) (undo-tree-id567 . -4) (undo-tree-id568 . -4) (undo-tree-id569 . -3) (undo-tree-id570 . -4) (undo-tree-id571 . -4) (undo-tree-id572 . -4) (undo-tree-id573 . -4) (undo-tree-id574 . -4) (undo-tree-id575 . -4) (undo-tree-id576 . -4) (undo-tree-id577 . -4) (undo-tree-id578 . -4) 1141) nil (25911 59365 784394 261000) 0 nil])
([nil nil ((#("NULL. " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 5 6 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1131) (undo-tree-id551 . -6) (undo-tree-id552 . -6) (undo-tree-id553 . -6) (undo-tree-id554 . -6) (undo-tree-id555 . -6) (undo-tree-id556 . -6) (undo-tree-id557 . -6) (undo-tree-id558 . -6) (undo-tree-id559 . -6) (undo-tree-id560 . -6) (undo-tree-id561 . -6) (undo-tree-id562 . -6) (undo-tree-id563 . -6) (undo-tree-id564 . -6) 1137) nil (25911 59365 784374 613000) 0 nil])
([nil nil ((#("initially " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 5 6 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 6 7 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 7 8 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 8 9 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 9 10 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1121) (undo-tree-id537 . -10) (undo-tree-id538 . -10) (undo-tree-id539 . -10) (undo-tree-id540 . -10) (undo-tree-id541 . -10) (undo-tree-id542 . -10) (undo-tree-id543 . -10) (undo-tree-id544 . -10) (undo-tree-id545 . -10) (undo-tree-id546 . -10) (undo-tree-id547 . -10) (undo-tree-id548 . -10) (undo-tree-id549 . -10) (undo-tree-id550 . -10) 1131) nil (25911 59365 784349 710000) 0 nil])
([nil nil ((#("log, " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1116) (undo-tree-id523 . -5) (undo-tree-id524 . -5) (undo-tree-id525 . -5) (undo-tree-id526 . -5) (undo-tree-id527 . -5) (undo-tree-id528 . -5) (undo-tree-id529 . -5) (undo-tree-id530 . -5) (undo-tree-id531 . -5) (undo-tree-id532 . -5) (undo-tree-id533 . -5) (undo-tree-id534 . -5) (undo-tree-id535 . -5) (undo-tree-id536 . -5) 1121) nil (25911 59365 784308 639000) 0 nil])
([nil nil ((#("opt_" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1112) (undo-tree-id509 . -4) (undo-tree-id510 . -4) (undo-tree-id511 . -4) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -4) (undo-tree-id522 . -4) 1116) nil (25911 59365 784291 794000) 0 nil])
([nil nil ((#("Variable " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 5 6 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 6 7 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 7 8 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 8 9 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1103) (undo-tree-id494 . -9) (undo-tree-id495 . -9) (undo-tree-id496 . -9) (undo-tree-id497 . -9) (undo-tree-id498 . -9) (undo-tree-id499 . -9) (undo-tree-id500 . -9) (undo-tree-id501 . -9) (undo-tree-id502 . -9) (undo-tree-id503 . -9) (undo-tree-id504 . -9) (undo-tree-id505 . -9) (undo-tree-id506 . -9) (undo-tree-id507 . -9) (undo-tree-id508 . -9) 1112) nil (25911 59365 784270 272000) 0 nil])
([nil nil ((#("passed. " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 5 6 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 6 7 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 7 8 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1095) (undo-tree-id479 . -8) (undo-tree-id480 . -8) (undo-tree-id481 . -8) (undo-tree-id482 . -8) (undo-tree-id483 . -8) (undo-tree-id484 . -8) (undo-tree-id485 . -8) (undo-tree-id486 . -8) (undo-tree-id487 . -8) (undo-tree-id488 . -8) (undo-tree-id489 . -8) (undo-tree-id490 . -8) (undo-tree-id491 . -8) (undo-tree-id492 . -8) (undo-tree-id493 . -8) 1103) nil (25911 59365 784247 137000) 0 nil])
([nil nil ((#("is " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1092) (undo-tree-id464 . -3) (undo-tree-id465 . -3) (undo-tree-id466 . -3) (undo-tree-id467 . -3) (undo-tree-id468 . -3) (undo-tree-id469 . -3) (undo-tree-id470 . -3) (undo-tree-id471 . -3) (undo-tree-id472 . -3) (undo-tree-id473 . -3) (undo-tree-id474 . -3) (undo-tree-id475 . -3) (undo-tree-id476 . -3) (undo-tree-id477 . -3) (undo-tree-id478 . -3) 1095) nil (25911 59365 784226 87000) 0 nil])
([nil nil ((#("L " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1090) (undo-tree-id449 . -2) (undo-tree-id450 . -2) (undo-tree-id451 . -2) (undo-tree-id452 . -2) (undo-tree-id453 . -2) (undo-tree-id454 . -2) (undo-tree-id455 . -2) (undo-tree-id456 . -2) (undo-tree-id457 . -2) (undo-tree-id458 . -2) (undo-tree-id459 . -2) (undo-tree-id460 . -2) (undo-tree-id461 . -2) (undo-tree-id462 . -2) (undo-tree-id463 . -2) 1092) nil (25911 59365 784205 969000) 0 nil])
([nil nil ((#("if -" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1086) (undo-tree-id434 . -4) (undo-tree-id435 . -4) (undo-tree-id436 . -4) (undo-tree-id437 . -4) (undo-tree-id438 . -4) (undo-tree-id439 . -4) (undo-tree-id440 . -4) (undo-tree-id441 . -4) (undo-tree-id442 . -4) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (undo-tree-id446 . -4) (undo-tree-id447 . -4) (undo-tree-id448 . -4) 1090) nil (25911 59365 784185 72000) 0 nil])
([nil nil ((#("checks " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 5 6 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 6 7 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1079) (undo-tree-id419 . -7) (undo-tree-id420 . -7) (undo-tree-id421 . -7) (undo-tree-id422 . -7) (undo-tree-id423 . -7) (undo-tree-id424 . -7) (undo-tree-id425 . -7) (undo-tree-id426 . -7) (undo-tree-id427 . -7) (undo-tree-id428 . -7) (undo-tree-id429 . -7) (undo-tree-id430 . -7) (undo-tree-id431 . -7) (undo-tree-id432 . -7) (undo-tree-id433 . -7) 1086) nil (25911 59365 784163 261000) 0 nil])
([nil nil ((#("opt " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1075) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -4) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) (undo-tree-id412 . -4) (undo-tree-id413 . -4) (undo-tree-id414 . -4) (undo-tree-id415 . -4) (undo-tree-id416 . -4) (undo-tree-id417 . -4) (undo-tree-id418 . -4) 1079) nil (25911 59365 784143 505000) 0 nil])
([nil nil ((#("Get " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1071) (undo-tree-id389 . -4) (undo-tree-id390 . -4) (undo-tree-id391 . -4) (undo-tree-id392 . -4) (undo-tree-id393 . -4) (undo-tree-id394 . -4) (undo-tree-id395 . -4) (undo-tree-id396 . -4) (undo-tree-id397 . -4) (undo-tree-id398 . -4) (undo-tree-id399 . -4) (undo-tree-id400 . -4) (undo-tree-id401 . -4) (undo-tree-id402 . -4) (undo-tree-id403 . -4) 1075) nil (25911 59365 784123 628000) 0 nil])
([nil nil ((#("file. " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 5 6 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1065) (undo-tree-id374 . -6) (undo-tree-id375 . -6) (undo-tree-id376 . -6) (undo-tree-id377 . -6) (undo-tree-id378 . -6) (undo-tree-id379 . -6) (undo-tree-id380 . -6) (undo-tree-id381 . -6) (undo-tree-id382 . -6) (undo-tree-id383 . -6) (undo-tree-id384 . -6) (undo-tree-id385 . -6) (undo-tree-id386 . -6) (undo-tree-id387 . -6) (undo-tree-id388 . -6) 1071) nil (25911 59365 784112 116000) 0 nil])
([nil nil ((#("Log " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1061) (undo-tree-id359 . -4) (undo-tree-id360 . -4) (undo-tree-id361 . -4) (undo-tree-id362 . -4) (undo-tree-id363 . -4) (undo-tree-id364 . -4) (undo-tree-id365 . -4) (undo-tree-id366 . -4) (undo-tree-id367 . -4) (undo-tree-id368 . -4) (undo-tree-id369 . -4) (undo-tree-id370 . -4) (undo-tree-id371 . -4) (undo-tree-id372 . -4) (undo-tree-id373 . -4) 1065) nil (25911 59365 784065 594000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face c-in-sws t)) . -1055) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#("
" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -1056) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1057) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1058) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (#("*" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1059) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1060) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) 1061) nil (25911 59365 784050 608000) 0 nil])
([nil nil ((#("error " 0 1 (fontified t face font-lock-comment-face c-in-sws t) 1 2 (fontified t face font-lock-comment-face c-in-sws t) 2 3 (fontified t face font-lock-comment-face c-in-sws t) 3 4 (fontified t face font-lock-comment-face c-in-sws t) 4 5 (fontified t face font-lock-comment-face c-in-sws t) 5 6 (fontified t face font-lock-comment-face c-in-sws t)) . -399) (undo-tree-id267 . -6) 405) nil (25911 59365 783984 93000) 0 nil])
([nil nil ((399 . 406)) nil (25911 59365 783974 435000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4218) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (#("
" 0 1 (fontified t)) . -4219) (undo-tree-id748 . -1) (undo-tree-id749 . -1) 4220 (t 25911 59365 804103 130000)) nil (25911 59456 255923 733000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4867) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (#("
" 0 1 (fontified t)) . -4868) (undo-tree-id744 . -1) (undo-tree-id745 . -1) 4869) nil (25911 59456 255917 859000) 0 nil])
([nil nil ((3283 . 3286)) nil (25911 59456 255908 289000) 0 nil])
([nil nil ((3286 . 3296)) nil (25911 59456 255907 350000) 0 nil])
([nil nil ((3296 . 3303)) nil (25911 59456 255905 966000) 0 nil])
([nil nil ((3303 . 3304)) nil (25911 59456 255901 353000) 0 nil])
([nil nil ((3291 . 3292) (t 25911 59456 271937 292000)) nil (25911 59471 911333 723000) 0 nil])
([nil nil ((3967 . 3978) (t 25911 59471 927908 644000)) nil (25911 59518 978178 234000) 0 nil])
([nil nil ((3978 . 3992)) nil (25911 59518 978176 786000) 0 nil])
([nil nil ((3992 . 3993)) nil (25911 59518 978175 321000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg)) . -3986) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -3987) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -3988) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -3989) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -3990) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -3991) (undo-tree-id777 . -1) (#(";" 0 1 (fontified t ws-butler-chg chg)) . -3992) (undo-tree-id778 . -1) 3993) nil (25911 59518 978171 800000) 0 nil])
([nil nil ((3986 . 3992)) nil (25911 59518 978153 539000) 0 nil])
([nil nil ((3992 . 3993)) nil (25911 59518 978152 517000) 0 nil])
([nil nil ((3993 . 4004)) nil (25911 59518 978151 243000) 0 nil])
([nil nil ((4004 . 4010)) nil (25911 59518 978150 68000) 0 nil])
([nil nil ((4010 . 4011)) nil (25911 59518 978148 951000) 0 nil])
([nil nil ((4011 . 4012)) nil (25911 59518 978147 716000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-warning-face)) . -4011) (undo-tree-id765 . -1) (undo-tree-id766 . -1) 4012) nil (25911 59518 978146 218000) 0 nil])
([nil nil ((4013 . 4014) (nil syntax-table nil 4013 . 4014) (nil syntax-table (1) 4011 . 4012) (4012 . 4013) (nil syntax-table nil 4012 . 4013) (nil syntax-table (1) 4011 . 4012) (4011 . 4012)) nil (25911 59518 978141 520000) 0 nil])
([nil nil ((4023 . 4024) (nil syntax-table nil 4040 . 4041) (nil syntax-table (1) 4011 . 4012) (4022 . 4023) (nil syntax-table nil 4022 . 4023) (nil syntax-table (1) 4011 . 4012) (4021 . 4022) (nil syntax-table nil 4021 . 4022) (nil syntax-table (1) 4011 . 4012) (4020 . 4021) (nil syntax-table nil 4020 . 4021) (nil syntax-table (1) 4011 . 4012) (4019 . 4020) (nil syntax-table nil 4019 . 4020) (nil syntax-table (1) 4011 . 4012) (4018 . 4019) (nil syntax-table nil 4018 . 4019) (nil syntax-table (1) 4011 . 4012) (4017 . 4018) (nil syntax-table nil 4017 . 4018) (nil syntax-table (1) 4011 . 4012) (4016 . 4017) (nil syntax-table nil 4016 . 4017) (nil syntax-table (1) 4011 . 4012) (4015 . 4016) (nil syntax-table nil 4015 . 4016) (nil syntax-table (1) 4011 . 4012) (4014 . 4015) (nil syntax-table nil 4014 . 4015) (nil syntax-table (1) 4011 . 4012)) nil (25911 59518 978137 29000) 0 nil])
([nil nil ((4024 . 4025) (nil syntax-table nil 4024 . 4025) (nil syntax-table (1) 4011 . 4012)) nil (25911 59518 978128 94000) 0 nil])
([nil nil ((4027 . 4028) (nil syntax-table nil 4027 . 4028) (nil syntax-table (1) 4011 . 4012) (4026 . 4027) (nil syntax-table nil 4026 . 4027) (nil syntax-table (1) 4011 . 4012) (4025 . 4026) (nil syntax-table nil 4025 . 4026) (nil syntax-table (1) 4011 . 4012)) nil (25911 59518 978125 840000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4023) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (nil syntax-table nil 4024 . 4025) (nil syntax-table (1) 4011 . 4012) (#("," 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4024) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (nil syntax-table nil 4025 . 4026) (nil syntax-table (1) 4011 . 4012) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4025) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (nil syntax-table nil 4026 . 4027) (nil syntax-table (1) 4011 . 4012) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4026) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (nil syntax-table nil 4027 . 4028) (nil syntax-table (1) 4011 . 4012) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4027) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (nil syntax-table nil 4028 . 4029) (nil syntax-table (1) 4011 . 4012)) nil (25911 59518 978120 20000) 0 nil])
([nil nil ((4024 . 4025) (nil syntax-table nil 4024 . 4025) (nil syntax-table (1) 4011 . 4012) (4023 . 4024) (nil syntax-table nil 4040 . 4041) (nil syntax-table (1) 4011 . 4012)) nil (25911 59518 978089 588000) 0 nil])
([nil nil ((4025 . 4026)) nil (25911 59518 978087 899000) 0 nil])
([nil nil ((4026 . 4033)) nil (25911 59518 978087 104000) 0 nil])
([nil nil ((4026 . 4027)) nil (25911 59518 978086 105000) 0 nil])
([nil nil ((4034 . 4035)) nil (25911 59518 978084 649000) 0 nil])
([nil current ((4035 . 4036)) nil (25911 59518 978080 11000) 0 nil])
nil
