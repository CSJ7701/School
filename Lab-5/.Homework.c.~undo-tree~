(undo-tree-save-format-version . 1)
"7ed0ad2d99302794eb330cb4289258963f4551a0"
[nil nil nil nil (25884 8328 800567 359000) 0 nil]
([nil nil ((4348 . 4349) (4341 . 4348) (4339 . 4341) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4339) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("+" 0 1 (fontified t ws-butler-chg chg)) . -4340) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("+" 0 1 (fontified t ws-butler-chg chg)) . -4341) (undo-tree-id64 . -1) (undo-tree-id65 . -1) 4342 (4333 . 4342) (4328 . 4333) (4327 . 4328) (4326 . 4327) (4325 . 4326) (nil syntax-table nil 4325 . 4326) (nil syntax-table (1) 4311 . 4312) (4324 . 4325) (nil syntax-table nil 4324 . 4325) (nil syntax-table (1) 4311 . 4312) (4323 . 4324) (nil syntax-table nil 4323 . 4324) (nil syntax-table (1) 4311 . 4312) (4322 . 4323) (nil syntax-table nil 4322 . 4323) (nil syntax-table (1) 4311 . 4312) (4321 . 4322) (nil syntax-table nil 4321 . 4322) (nil syntax-table (1) 4311 . 4312) (4320 . 4321) (nil syntax-table nil 4320 . 4321) (nil syntax-table (1) 4311 . 4312) (4319 . 4320) (nil syntax-table nil 4319 . 4320) (nil syntax-table (1) 4311 . 4312) (4318 . 4319) (nil syntax-table nil 4318 . 4319) (nil syntax-table (1) 4311 . 4312) (4317 . 4318) (nil syntax-table nil 4317 . 4318) (nil syntax-table (1) 4311 . 4312) (4316 . 4317) (nil syntax-table nil 4316 . 4317) (nil syntax-table (1) 4311 . 4312) (4315 . 4316) (nil syntax-table nil 4315 . 4316) (nil syntax-table (1) 4311 . 4312) (4314 . 4315) (nil syntax-table nil 4314 . 4315) (nil syntax-table (1) 4311 . 4312) (4313 . 4314) (nil syntax-table nil 4313 . 4314) (nil syntax-table (1) 4311 . 4312) (4312 . 4313) (nil syntax-table nil 4312 . 4313) (nil syntax-table (1) 4311 . 4312) (4311 . 4312) (4310 . 4311) (4306 . 4310) (4304 . 4306) (4300 . 4304) (#(" " 0 1 (fontified nil ws-butler-chg delete)) . 4300) (undo-tree-id66 . -1) (4299 . 4300) (4298 . 4299) (4297 . 4298) (4283 . 4297) (4278 . 4283) (4277 . 4278) (4265 . 4277) (4264 . 4265) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -4264) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 4265 (4259 . 4265) (4254 . 4256) (#(" " 0 1 (fontified nil)) . 4254) (4257 . 4258) (4255 . 4257) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -4255) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 4256 (4255 . 4256) (t 25884 8144 66689 636000)) nil (25884 8328 800561 827000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4348) (undo-tree-id56 . 1) (undo-tree-id57 . -1) (#("}" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face))) . 4348) (4348 . 4349) (#("i" 0 1 (fontified t ws-butler-chg chg)) . 4348) (undo-tree-id58 . -1) (undo-tree-id59 . -1) 4349 (#("}" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face))) . 4348) (4349 . 4350) 4348) nil (25884 8328 800536 213000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -4341) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4342) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4343) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4344) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4345) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4346) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4347) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 4348) nil (25884 8328 800527 301000) 0 nil])
([nil nil ((4341 . 4348)) nil (25884 8328 800466 994000) 0 nil])
([nil nil ((4348 . 4349)) nil (25884 8328 800462 2000) 0 nil])
([nil nil ((4341 . 4342) (t 25884 8328 814336 296000)) nil (25884 8484 231304 243000) 0 nil])
([nil nil ((3556 . 3557) (t 25884 8484 238039 128000)) nil (25884 8662 830197 94000) 0 nil])
([nil nil ((3573 . 3577) (#("  " 0 2 (fontified nil)) . 3573) (undo-tree-id77 . -2) (3575 . 3576)) nil (25884 8662 830195 930000) 0 nil])
([nil nil ((3597 . 3601) (#("  " 0 2 (fontified nil)) . 3597) (undo-tree-id76 . -2) (3599 . 3600)) nil (25884 8662 830193 941000) 0 nil])
([nil nil ((3614 . 3618) (#("  " 0 2 (fontified nil)) . 3614) (undo-tree-id75 . -2) (3616 . 3617)) nil (25884 8662 830191 747000) 0 nil])
([nil nil ((3557 . 3558)) nil (25884 8662 830189 692000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t c-is-sws t ws-butler-chg chg)) . -3556) (undo-tree-id73 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3557) (undo-tree-id74 . -1) 3558) nil (25884 8662 830188 555000) 0 nil])
([nil nil ((3556 . 3558)) nil (25884 8662 830185 679000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg delete c-is-sws t fontified t)) . 3578)) nil (25884 8662 830184 769000) 0 nil])
([nil nil ((3574 . 3576) (#("      " 0 1 (ws-butler-chg chg fontified t c-is-sws t c-in-sws t) 1 4 (ws-butler-chg chg c-in-sws t fontified t c-is-sws t) 4 5 (fontified t c-is-sws t c-in-sws t ws-butler-chg delete) 5 6 (fontified t c-is-sws t c-in-sws t)) . 3574) (undo-tree-id72 . -4) 3578) nil (25884 8662 830183 793000) 0 nil])
([nil nil ((3576 . 3578)) nil (25884 8662 830181 590000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg delete c-is-sws t fontified t)) . 3599)) nil (25884 8662 830180 693000) 0 nil])
([nil nil ((3595 . 3597) (#("      " 0 1 (ws-butler-chg chg fontified t c-is-sws t c-in-sws t) 1 4 (ws-butler-chg chg c-in-sws t fontified t c-is-sws t) 4 5 (fontified t c-is-sws t c-in-sws t ws-butler-chg delete) 5 6 (fontified t c-is-sws t c-in-sws t)) . 3595) (undo-tree-id71 . -4) 3599) nil (25884 8662 830179 458000) 0 nil])
([nil nil ((3597 . 3598)) nil (25884 8662 830172 732000) 0 nil])
([nil nil ((3598 . 3599)) nil (25884 8662 830171 627000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg delete c-is-sws t fontified t)) . 3613)) nil (25884 8662 830170 105000) 0 nil])
([nil nil ((3609 . 3611) (#("    " 0 1 (ws-butler-chg chg fontified nil c-is-sws t c-in-sws t) 1 4 (ws-butler-chg chg c-in-sws t fontified nil c-is-sws t)) . 3609) (3613 . 3615)) nil (25884 8662 830165 210000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -4270) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("=" 0 1 (fontified t)) . -4271) (undo-tree-id83 . -1) 4272 (t 25884 8662 841697 712000)) nil (25884 8684 793114 47000) 0 nil])
([nil nil ((4270 . 4271)) nil (25884 8684 793097 716000) 0 nil])
([nil nil ((#("    optind++;
" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t)) . 4332) (undo-tree-id84 . -12) (undo-tree-id85 . -8) (undo-tree-id86 . 2) (undo-tree-id87 . -12) (undo-tree-id88 . -12) (undo-tree-id89 . -11) (undo-tree-id90 . -12) (undo-tree-id91 . -13) (undo-tree-id92 . -13) (undo-tree-id93 . -13) (undo-tree-id94 . -13) (undo-tree-id95 . -13) (undo-tree-id96 . -13) (undo-tree-id97 . -13) (undo-tree-id98 . -13) (undo-tree-id99 . -12) (undo-tree-id100 . -12) (undo-tree-id101 . -12) (undo-tree-id102 . -12) (undo-tree-id103 . -12) (undo-tree-id104 . -12) (undo-tree-id105 . -12) (undo-tree-id106 . -12) (undo-tree-id107 . -12) (undo-tree-id108 . -11) (undo-tree-id109 . -11) (undo-tree-id110 . -11) (undo-tree-id111 . -11) (undo-tree-id112 . -11) (undo-tree-id113 . -11) (undo-tree-id114 . -11) (undo-tree-id115 . -11) (undo-tree-id116 . -11) (undo-tree-id117 . -11) (undo-tree-id118 . -11) (undo-tree-id119 . -11) (undo-tree-id120 . -11) (undo-tree-id121 . -11) (undo-tree-id122 . -11) (undo-tree-id123 . -11) (undo-tree-id124 . -11) (undo-tree-id125 . -11) (undo-tree-id126 . -11) (undo-tree-id127 . -14) (undo-tree-id128 . -13) 4343 (t 25884 8684 801655 738000)) nil (25884 8708 665457 880000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 4270) (t 25884 8708 677610 103000)) nil (25884 8729 830281 507000) 0 nil])
([nil nil ((4270 . 4271)) nil (25884 8729 830280 318000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t ws-butler-chg chg)) . -4270) (undo-tree-id129 . -1) 4271) nil (25884 8729 830278 82000) 0 nil])
([nil nil ((4270 . 4272)) nil (25884 8729 830268 385000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -4270) (undo-tree-id130 . -1) (#("=" 0 1 (fontified t)) . -4271) (undo-tree-id131 . -1) 4272 (t 25884 8729 837569 659000)) nil (25884 8748 737550 371000) 0 nil])
([nil nil ((4270 . 4271)) nil (25884 8748 737539 183000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -4260) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -4261) (undo-tree-id135 . -1) 4262 (t 25884 8748 745533 521000)) nil (25884 8830 359327 621000) 0 nil])
([nil nil ((4260 . 4265)) nil (25884 8830 359314 809000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -4273) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) 4274 (t 25884 8830 365377 526000)) nil (25884 8847 799364 676000) 0 nil])
([nil nil ((4273 . 4275)) nil (25884 8847 799352 8000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -4273) (undo-tree-id169 . -1) (#("=" 0 1 (fontified t)) . -4274) (undo-tree-id170 . -1) 4275 (t 25884 8847 805344 194000)) nil (25884 8949 385100 210000) 0 nil])
([nil nil ((4273 . 4274)) nil (25884 8949 385097 609000) 0 nil])
([nil nil ((4305 . 4306)) nil (25884 8949 385096 895000) 0 nil])
([nil nil ((4306 . 4308)) nil (25884 8949 385096 164000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg)) . -4306) (undo-tree-id167 . -1) (#(";" 0 1 (fontified t ws-butler-chg chg)) . -4307) (undo-tree-id168 . -1) 4308) nil (25884 8949 385095 103000) 0 nil])
([nil nil ((4306 . 4308)) nil (25884 8949 385092 39000) 0 nil])
([nil nil ((4308 . 4323)) nil (25884 8949 385091 295000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4320) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4321) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4322) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) 4323) nil (25884 8949 385089 753000) 0 nil])
([nil nil ((4320 . 4322)) nil (25884 8949 385082 450000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4319) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4320) (undo-tree-id156 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4321) (undo-tree-id157 . -1) 4322) nil (25884 8949 385081 40000) 0 nil])
([nil nil ((4319 . 4328)) nil (25884 8949 385076 374000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4326) (undo-tree-id151 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4327) (undo-tree-id152 . -1) 4328) nil (25884 8949 385075 233000) 0 nil])
([nil nil ((4326 . 4332)) nil (25884 8949 385072 293000) 0 nil])
([nil nil ((4332 . 4340)) nil (25884 8949 385071 568000) 0 nil])
([nil nil ((#("there" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 1 2 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 2 3 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 3 4 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 4 5 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -4335) (undo-tree-id148 . -2) (undo-tree-id149 . -5) (undo-tree-id150 . -5) 4340) nil (25884 8949 385070 533000) 0 nil])
([nil nil ((#("whether " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 5 6 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 6 7 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 7 8 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4327) (undo-tree-id145 . -8) (undo-tree-id146 . -8) (undo-tree-id147 . -8) 4335) nil (25884 8949 385067 438000) 0 nil])
([nil nil ((#("check " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 5 6 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4321) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -6) 4327) nil (25884 8949 385062 695000) 0 nil])
([nil nil ((4321 . 4342)) nil (25884 8949 385059 579000) 0 nil])
([nil nil ((4342 . 4352)) nil (25884 8949 385058 841000) 0 nil])
([nil nil ((4352 . 4364)) nil (25884 8949 385058 90000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -4363) (undo-tree-id141 . -1) 4364) nil (25884 8949 385057 28000) 0 nil])
([nil nil ((4363 . 4379)) nil (25884 8949 385055 25000) 0 nil])
([nil nil ((4379 . 4380)) nil (25884 8949 385054 130000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -4379) (undo-tree-id140 . -1) 4380) nil (25884 8949 385052 126000) 0 nil])
([nil nil ((4379 . 4380)) nil (25884 8949 385042 53000) 0 nil])
([nil nil ((#("  while(optind > argc && *argv[optind] != '-'){ // This should print \"no file given\" if there are no file arguments given.
    printf(\"No File Given\");
      }" 0 2 (fontified t) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t face (rainbow-delimiters-depth-2-face)) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t face (rainbow-delimiters-depth-3-face)) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-3-face)) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t face font-lock-string-face) 43 44 (fontified t face font-lock-string-face) 44 45 (fontified t face font-lock-string-face) 45 46 (fontified t face (rainbow-delimiters-depth-2-face)) 46 47 (fontified t face (rainbow-delimiters-depth-2-face)) 47 48 (fontified t c-in-sws t c-is-sws t) 48 49 (fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 49 50 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 50 51 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 51 52 (fontified t c-in-sws t face font-lock-comment-face) 52 53 (fontified t c-in-sws t face font-lock-comment-face) 53 54 (fontified t c-in-sws t face font-lock-comment-face) 54 55 (fontified t c-in-sws t face font-lock-comment-face) 55 56 (fontified t c-in-sws t face font-lock-comment-face) 56 57 (fontified t c-in-sws t face font-lock-comment-face) 57 58 (fontified t c-in-sws t face font-lock-comment-face) 58 59 (fontified t c-in-sws t face font-lock-comment-face) 59 60 (fontified t c-in-sws t face font-lock-comment-face) 60 61 (fontified t c-in-sws t face font-lock-comment-face) 61 62 (fontified t c-in-sws t face font-lock-comment-face) 62 63 (fontified t c-in-sws t face font-lock-comment-face) 63 64 (fontified t c-in-sws t face font-lock-comment-face) 64 65 (fontified t c-in-sws t face font-lock-comment-face) 65 66 (fontified t c-in-sws t face font-lock-comment-face) 66 67 (fontified t c-in-sws t face font-lock-comment-face) 67 68 (fontified t c-in-sws t face font-lock-comment-face) 68 69 (fontified t c-in-sws t face font-lock-comment-face) 69 70 (fontified t c-in-sws t face font-lock-comment-face) 70 71 (fontified t c-in-sws t face font-lock-comment-face) 71 72 (fontified t c-in-sws t face font-lock-comment-face) 72 73 (fontified t c-in-sws t face font-lock-comment-face) 73 74 (fontified t c-in-sws t face font-lock-comment-face) 74 75 (fontified t c-in-sws t face font-lock-comment-face) 75 76 (fontified t c-in-sws t face font-lock-comment-face) 76 77 (fontified t c-in-sws t face font-lock-comment-face) 77 78 (fontified t c-in-sws t face font-lock-comment-face) 78 79 (fontified t c-in-sws t face font-lock-comment-face) 79 80 (fontified t c-in-sws t face font-lock-comment-face) 80 81 (fontified t c-in-sws t face font-lock-comment-face) 81 82 (fontified t c-in-sws t face font-lock-comment-face) 82 83 (fontified t c-in-sws t face font-lock-comment-face) 83 84 (fontified t c-in-sws t face font-lock-comment-face) 84 85 (fontified t c-in-sws t face font-lock-comment-face) 85 86 (fontified t c-in-sws t face font-lock-comment-face) 86 87 (fontified t c-in-sws t face font-lock-comment-face) 87 88 (fontified t c-in-sws t face font-lock-comment-face) 88 89 (fontified t c-in-sws t face font-lock-comment-face) 89 90 (fontified t c-in-sws t face font-lock-comment-face) 90 91 (fontified t c-in-sws t face font-lock-comment-face) 91 92 (fontified t c-in-sws t face font-lock-comment-face) 92 93 (fontified t c-in-sws t face font-lock-comment-face) 93 94 (fontified t c-in-sws t face font-lock-comment-face) 94 95 (fontified t c-in-sws t face font-lock-comment-face) 95 96 (fontified t c-in-sws t face font-lock-comment-face) 96 97 (fontified t c-in-sws t face font-lock-comment-face) 97 98 (fontified t c-in-sws t face font-lock-comment-face) 98 99 (fontified t c-in-sws t face font-lock-comment-face) 99 100 (fontified t c-in-sws t face font-lock-comment-face) 100 101 (fontified t c-in-sws t face font-lock-comment-face) 101 102 (fontified t c-in-sws t face font-lock-comment-face) 102 103 (fontified t c-in-sws t face font-lock-comment-face) 103 104 (fontified t c-in-sws t face font-lock-comment-face) 104 105 (fontified t c-in-sws t face font-lock-comment-face) 105 106 (fontified t c-in-sws t face font-lock-comment-face) 106 107 (fontified t c-in-sws t face font-lock-comment-face) 107 108 (fontified t c-in-sws t face font-lock-comment-face) 108 109 (fontified t c-in-sws t face font-lock-comment-face) 109 110 (fontified t c-in-sws t face font-lock-comment-face) 110 111 (fontified t c-in-sws t face font-lock-comment-face) 111 112 (fontified t c-in-sws t face font-lock-comment-face) 112 113 (fontified t c-in-sws t face font-lock-comment-face) 113 114 (fontified t c-in-sws t face font-lock-comment-face) 114 115 (fontified t c-in-sws t face font-lock-comment-face) 115 116 (fontified t c-in-sws t face font-lock-comment-face) 116 117 (fontified t c-in-sws t face font-lock-comment-face) 117 118 (fontified t c-in-sws t face font-lock-comment-face) 118 119 (fontified t c-in-sws t face font-lock-comment-face) 119 120 (fontified t c-in-sws t face font-lock-comment-face) 120 121 (fontified t c-in-sws t face font-lock-comment-face) 121 122 (fontified t face font-lock-comment-face c-in-sws t) 122 123 (fontified t face font-lock-comment-face c-in-sws t) 123 124 (c-is-sws t c-in-sws t fontified t) 124 127 (c-is-sws t c-in-sws t fontified t) 127 128 (c-is-sws t fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 134 (fontified t face (rainbow-delimiters-depth-3-face)) 134 135 (fontified t face font-lock-string-face) 135 136 (fontified t face font-lock-string-face) 136 137 (fontified t face font-lock-string-face) 137 138 (fontified t face font-lock-string-face) 138 139 (fontified t face font-lock-string-face) 139 140 (fontified t face font-lock-string-face) 140 141 (fontified t face font-lock-string-face) 141 142 (fontified t face font-lock-string-face) 142 143 (fontified t face font-lock-string-face) 143 144 (fontified t face font-lock-string-face) 144 145 (fontified t face font-lock-string-face) 145 146 (fontified t face font-lock-string-face) 146 147 (fontified t face font-lock-string-face) 147 148 (fontified t face font-lock-string-face) 148 149 (fontified t face font-lock-string-face) 149 150 (fontified t face (rainbow-delimiters-depth-3-face)) 150 151 (fontified t) 151 152 (fontified t) 152 153 (fontified t) 153 158 (fontified t) 158 159 (fontified t face (rainbow-delimiters-depth-2-face))) . 4258) (undo-tree-id204 . -159) (undo-tree-id205 . -118) (undo-tree-id206 . 7) (undo-tree-id207 . -123) (undo-tree-id208 . -152) (undo-tree-id209 . -15) (undo-tree-id210 . -15) (undo-tree-id211 . -15) (undo-tree-id212 . -152) (undo-tree-id213 . -15) (undo-tree-id214 . -120) (undo-tree-id215 . -2) (undo-tree-id216 . -159) (undo-tree-id217 . -15) (undo-tree-id218 . -159) (undo-tree-id219 . -159) (t 25884 8949 393150 52000)) nil (25884 9271 418670 483000) 0 nil])
([nil nil ((4107 . 4110)) nil (25884 9271 418658 649000) 0 nil])
([nil nil ((4108 . 4111) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 4108) (undo-tree-id203 . -2) 4110) nil (25884 9271 418657 841000) 0 nil])
([nil nil ((4111 . 4113)) nil (25884 9271 418655 852000) 0 nil])
([nil nil ((4113 . 4114)) nil (25884 9271 418655 24000) 0 nil])
([nil nil ((4114 . 4127)) nil (25884 9271 418653 791000) 0 nil])
([nil nil ((4127 . 4128)) nil (25884 9271 418653 22000) 0 nil])
([nil nil ((4128 . 4129)) nil (25884 9271 418652 320000) 0 nil])
([nil nil ((4131 . 4135) (#("  " 0 2 (fontified t)) . 4131) 4151) nil (25884 9271 418651 289000) 0 nil])
([nil nil ((4181 . 4187) (#("    " 0 4 (fontified t)) . 4181) 4203) nil (25884 9271 418649 910000) 0 nil])
([nil nil ((4209 . 4215) (#("    " 0 4 (fontified t)) . 4209) 4233) nil (25884 9271 418648 494000) 0 nil])
([nil nil ((4268 . 4274) (#("    " 0 4 (fontified t)) . 4268) 4281) nil (25884 9271 418647 134000) 0 nil])
([nil nil ((4284 . 4288) (#("  " 0 2 (fontified t)) . 4284) 4287) nil (25884 9271 418645 613000) 0 nil])
([nil nil ((4289 . 4294)) nil (25884 9271 418644 406000) 0 nil])
([nil nil ((4290 . 4295) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 4290) (undo-tree-id202 . -4) 4294) nil (25884 9271 418643 249000) 0 nil])
([nil nil ((4291 . 4293) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 4291) (undo-tree-id201 . -4) (4295 . 4296)) nil (25884 9271 418641 275000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -4289) (undo-tree-id200 . -1) 4290) nil (25884 9271 418639 230000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . -4129) (undo-tree-id199 . -1) 4130) nil (25884 9271 418637 440000) 0 nil])
([nil nil ((4292 . 4295)) nil (25884 9271 418635 682000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -4292) (undo-tree-id196 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -4293) (undo-tree-id197 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -4294) (undo-tree-id198 . -1) 4295) nil (25884 9271 418634 170000) 0 nil])
([nil nil ((4292 . 4297)) nil (25884 9271 418630 692000) 0 nil])
([nil nil ((4297 . 4298) (#("else" 0 1 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1 2 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified nil face font-lock-keyword-face)) . 4297) (undo-tree-id193 . -3) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (4293 . 4297) 4297) nil (25884 9271 418629 529000) 0 nil])
([nil nil ((4298 . 4299)) nil (25884 9271 418626 340000) 0 nil])
([nil nil ((4299 . 4304)) nil (25884 9271 418625 484000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 4300) (undo-tree-id191 . -4) (undo-tree-id192 . -4) 4304) nil (25884 9271 418624 351000) 0 nil])
([nil nil ((4292 . 4295) (#(" " 0 1 (ws-butler-chg chg fontified t)) . 4292) (undo-tree-id190 . -1) 4293) nil (25884 9271 418621 317000) 0 nil])
([nil nil ((4301 . 4306)) nil (25884 9271 418619 385000) 0 nil])
([nil nil ((4306 . 4312)) nil (25884 9271 418618 565000) 0 nil])
([nil nil ((4312 . 4313)) nil (25884 9271 418617 715000) 0 nil])
([nil nil ((4317 . 4318) (nil syntax-table nil 4317 . 4318) (nil syntax-table (1) 4313 . 4314) (4316 . 4317) (nil syntax-table nil 4316 . 4317) (nil syntax-table (1) 4313 . 4314) (4315 . 4316) (nil syntax-table nil 4315 . 4316) (nil syntax-table (1) 4313 . 4314) (4314 . 4315) (nil syntax-table nil 4314 . 4315) (nil syntax-table (1) 4313 . 4314) (4313 . 4314)) nil (25884 9271 418616 405000) 0 nil])
([nil nil ((4318 . 4319) (nil syntax-table nil 4318 . 4319) (nil syntax-table (1) 4313 . 4314) (4314 . 4318) (#("else" 0 4 (fontified nil ws-butler-chg chg)) . -4314) (nil syntax-table nil 4318 . 4319) (nil syntax-table (1) 4313 . 4314) (#("ELSE" 0 1 (fontified nil ws-butler-chg chg face font-lock-string-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-string-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-string-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-string-face)) . 4318) (undo-tree-id188 . -1) (undo-tree-id189 . -4) (nil syntax-table nil 4322 . 4323) (nil syntax-table (1) 4313 . 4314) (4314 . 4318) (nil syntax-table nil 4318 . 4319) (nil syntax-table (1) 4313 . 4314)) nil (25884 9271 418612 836000) 0 nil])
([nil nil ((4319 . 4320)) nil (25884 9271 418606 55000) 0 nil])
([nil nil ((4320 . 4321)) nil (25884 9271 418603 781000) 0 nil])
([nil nil ((4321 . 4326)) nil (25884 9271 418601 238000) 0 nil])
([nil nil ((4322 . 4324) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 4322) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (4326 . 4327)) nil (25884 9271 418593 717000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3519) (#("/" 0 1 (fontified t ws-butler-chg delete)) . 3519) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t)) . 3519) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (t 25884 9271 428534 674000)) nil (25884 9308 15944 520000) 0 nil])
([nil nil ((3519 . 3521)) nil (25884 9308 15941 626000) 0 nil])
([nil nil ((3521 . 3522)) nil (25884 9308 15940 838000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t c-is-sws t ws-butler-chg delete)) . 3556) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (#("/" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face)) . 3556) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1)) nil (25884 9308 15939 137000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t ws-butler-chg delete)) . 3574) (#("/" 0 1 (c-in-sws t fontified t c-is-sws t face font-lock-comment-delimiter-face)) . 3574)) nil (25884 9308 15925 886000) 0 nil])
([nil nil ((3572 . 3576) (#("  " 0 1 (c-in-sws t fontified t c-is-sws t) 1 2 (fontified t)) . -3572) (undo-tree-id371 . -2) (undo-tree-id372 . -2) (undo-tree-id373 . -2) (undo-tree-id374 . -2) (undo-tree-id375 . -2) (undo-tree-id376 . -2) (undo-tree-id377 . -2) (undo-tree-id378 . -2) (undo-tree-id379 . -2) (undo-tree-id380 . -2) (undo-tree-id381 . -2) (undo-tree-id382 . -2) (undo-tree-id383 . -2) (undo-tree-id384 . -2) (undo-tree-id385 . -2) (undo-tree-id386 . -2) (undo-tree-id387 . -2) (undo-tree-id388 . -2) (undo-tree-id389 . -2) (undo-tree-id390 . -2) (undo-tree-id391 . -2) (undo-tree-id392 . -2) (undo-tree-id393 . -2) (undo-tree-id394 . -2) (undo-tree-id395 . -2) (undo-tree-id396 . -2) (undo-tree-id397 . -2) (undo-tree-id398 . -2) (undo-tree-id399 . -2) (undo-tree-id400 . -2) (undo-tree-id401 . -2) (undo-tree-id402 . -2) (undo-tree-id403 . -2) (undo-tree-id404 . -2) 3574) nil (25884 9308 15923 286000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -3595) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (#("/" 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -3596) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) 3597) nil (25884 9308 15893 40000) 0 nil])
([nil nil ((3593 . 3597) (#("  " 0 1 (c-in-sws t fontified t) 1 2 (c-in-sws t fontified t)) . -3593) (undo-tree-id248 . -2) (undo-tree-id249 . -2) (undo-tree-id250 . -2) (undo-tree-id251 . -2) (undo-tree-id252 . -2) (undo-tree-id253 . -2) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (undo-tree-id258 . -2) (undo-tree-id259 . -2) (undo-tree-id260 . -2) (undo-tree-id261 . -2) (undo-tree-id262 . -2) (undo-tree-id263 . -2) (undo-tree-id264 . -2) (undo-tree-id265 . -2) (undo-tree-id266 . -2) (undo-tree-id267 . -2) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (undo-tree-id270 . -2) (undo-tree-id271 . -2) (undo-tree-id272 . -2) (undo-tree-id273 . -2) (undo-tree-id274 . -2) (undo-tree-id275 . -2) (undo-tree-id276 . -2) (undo-tree-id277 . -2) (undo-tree-id278 . -2) (undo-tree-id279 . -2) (undo-tree-id280 . -2) (undo-tree-id281 . -2) (undo-tree-id282 . -2) (undo-tree-id283 . -2) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) (undo-tree-id289 . -2) (undo-tree-id290 . -2) (undo-tree-id291 . -2) (undo-tree-id292 . -2) (undo-tree-id293 . -2) (undo-tree-id294 . -2) (undo-tree-id295 . -2) (undo-tree-id296 . -2) (undo-tree-id297 . -2) (undo-tree-id298 . -2) (undo-tree-id299 . -2) (undo-tree-id300 . -2) (undo-tree-id301 . -2) (undo-tree-id302 . -2) (undo-tree-id303 . -2) (undo-tree-id304 . -2) 3595) nil (25884 9308 15811 415000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -3609) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (#("/" 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -3610) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) 3611) nil (25884 9308 15757 1000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . 3725) (undo-tree-id425 . 1) (t 25884 9308 24464 748000)) nil (25884 12341 980752 692000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3725) (undo-tree-id424 . 1)) nil (25884 12341 980750 508000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3725) (undo-tree-id423 . 1)) nil (25884 12341 980748 233000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . 3765)) nil (25884 12341 980741 922000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3765)) nil (25884 12347 403650 433000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3765) (undo-tree-id432 . -1) (undo-tree-id433 . -1)) nil (25884 12354 275596 478000) 0 nil] [nil nil ((#("	" 0 1 (fontified t)) . 3767)) ((nil ws-butler-chg delete 3768 . 3769) (3767 . 3768)) (25884 12341 980735 718000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . 3953) (undo-tree-id430 . -1) (undo-tree-id431 . -1)) nil (25884 12354 275591 288000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3953) (undo-tree-id428 . -1) (undo-tree-id429 . -1)) nil (25884 12873 120154 447000) 0 nil])
([nil nil ((3554 . 3556) (3554 . 3556)) nil (25884 12891 82630 584000) 0 nil] [nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3953) (undo-tree-id427 . -1)) ((3953 . 3954) (t 25884 12354 286737 459000)) (25884 12858 577360 551000) 0 nil])
([nil nil ((3576 . 3578) (3576 . 3578)) nil (25884 12891 82629 571000) 0 nil])
([nil nil ((apply -24 3556 3634 undo--wrap-and-run-primitive-undo 3556 3634 (("  " . 3556) (3633 . 3636) (3629 . 3632) (3623 . 3626) (3609 . 3612) (3603 . 3606) (3582 . 3585) (3576 . 3579) (3556 . 3561))) (t 25884 12354 286737 459000)) ((apply 24 3556 3610 undo--wrap-and-run-primitive-undo 3556 3610 ((#("  /* " 2 3 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face c-is-sws t) 3 5 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3556) (#(" */" 0 3 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3576) (#("/* " 0 3 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3582) (#(" */" 0 3 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3603) (#("/* " 0 3 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3609) (#(" */" 0 3 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3623) (#("/* " 0 3 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3629) (#<marker at 2583 in Homework.c<Lab-5>> . -3) (#<marker at 4431 in Homework.c<Lab-5>> . -3) (#(" */" 0 3 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3633) (#<marker (moves after insertion) at 4432 in Homework.c<Lab-5>> . 3) (3556 . 3558)))) (25884 12845 640982 829000) 0 nil] [nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 3609) (t 25884 12354 286737 459000)) ((nil ws-butler-chg delete 3610 . 3611) (3609 . 3610)) (25884 12819 695321 0) 0 nil])
([nil nil ((3601 . 3603) (3601 . 3603)) nil (25884 12891 82628 401000) 0 nil])
nil
nil
([nil nil ((3619 . 3621) (3619 . 3621)) nil (25884 12891 82626 838000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 3969) 3623) nil (25884 12891 82621 841000) 0 nil])
([nil nil ((4317 . 4322) (#("else" 0 4 (fontified nil ws-butler-chg chg)) . -4317) (#("ELSE" 0 4 (fontified nil face font-lock-string-face)) . 4321) (undo-tree-id448 . -4) (undo-tree-id449 . -3) (undo-tree-id450 . -3) (4317 . 4321) 4321 (t 25884 12891 93772 829000)) nil (25884 12919 977055 43000) 0 nil])
([nil nil ((4322 . 4323) (nil syntax-table nil 4325 . 4326) (nil syntax-table (1) 4316 . 4317)) nil (25884 12919 977045 931000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4322) (undo-tree-id446 . -1) (undo-tree-id447 . -1) 4323) nil (25884 12919 977042 812000) 0 nil])
([nil nil ((4322 . 4324) (nil syntax-table nil 4325 . 4326) (nil syntax-table (1) 4316 . 4317)) nil (25884 12919 977035 934000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4323) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) 4324) nil (25884 12919 977027 610000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . 2852) (undo-tree-id482 . -4) 2856 (2851 . 2856) (2850 . 2851) (2849 . 2850) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 2850) (undo-tree-id483 . -4) (undo-tree-id484 . -4) 2854 (2849 . 2854) (2847 . 2849) (2842 . 2847) (2841 . 2842) (2837 . 2841) (2836 . 2837) (2827 . 2829) 2834 (2825 . 2826) (2824 . 2825) (#(")" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-unmatched-face))) . -2824) (undo-tree-id485 . -1) 2825 (2823 . 2824) (2815 . 2823) (2814 . 2815) (2804 . 2814) (2812 . 2813) (2811 . 2812) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -2811) (2811 . 2813) (#("while" 0 1 (fontified nil ws-butler-chg delete face font-lock-keyword-face) 1 5 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 2811) (undo-tree-id486 . -5) (undo-tree-id487 . -5) (2806 . 2811) 2811 (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2811) (undo-tree-id488 . -1) 2812 (2811 . 2812) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -2811) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 2806) (2813 . 2815) (#("while" 0 1 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1 2 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 4 5 (ws-butler-chg chg fontified nil face font-lock-keyword-face)) . 2813) (undo-tree-id489 . -2) (undo-tree-id490 . -5) (2808 . 2813) 2813 (2808 . 2813) (2805 . 2808) (2804 . 2805) (2803 . 2804) (2790 . 2803) (2788 . 2790) (t 25884 12919 989719 869000)) nil (25884 13165 579804 885000) 0 nil])
([nil nil ((3226 . 3228) (3212 . 3216) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3212) (3206 . 3210) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3206) (3198 . 3204) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 3198) (3174 . 3182) (#("      " 0 6 (ws-butler-chg chg fontified nil)) . 3174) (3146 . 3154) (#("      " 0 6 (ws-butler-chg chg fontified nil)) . 3146) (3124 . 3132) (#("      " 0 6 (ws-butler-chg chg fontified nil)) . 3124) (3066 . 3072) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 3066) (3041 . 3045) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3041) (3035 . 3039) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3035) (3027 . 3033) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 3027) (3003 . 3011) (#("      " 0 6 (ws-butler-chg chg fontified nil)) . 3003) (2980 . 2988) (#("      " 0 6 (ws-butler-chg chg fontified nil)) . 2980) (2952 . 2960) (#("      " 0 6 (ws-butler-chg chg fontified nil)) . 2952) (2930 . 2938) (#("      " 0 6 (ws-butler-chg chg fontified nil)) . 2930) (2872 . 2878) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 2872) (2852 . 2856) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 2852) (nil rear-nonsticky nil 3195 . 3196) (nil fontified nil 3195 . 3196) (nil fontified nil 3194 . 3195) (nil fontified nil 3190 . 3194) (nil fontified nil 3184 . 3190) (nil fontified nil 3181 . 3184) (nil fontified nil 3180 . 3181) (nil fontified nil 3177 . 3180) (nil fontified nil 3176 . 3177) (nil fontified nil 3170 . 3176) (nil fontified nil 3169 . 3170) (nil fontified nil 3163 . 3169) (nil fontified nil 3162 . 3163) (nil fontified nil 3148 . 3162) (nil fontified nil 3147 . 3148) (nil fontified nil 3141 . 3147) (nil fontified nil 3137 . 3141) (nil fontified nil 3136 . 3137) (nil fontified nil 3122 . 3136) (nil fontified nil 3121 . 3122) (nil fontified nil 3117 . 3121) (nil fontified nil 3116 . 3117) (nil fontified nil 3103 . 3116) (nil fontified nil 3102 . 3103) (nil fontified nil 3101 . 3102) (nil fontified nil 3100 . 3101) (nil fontified nil 3094 . 3100) (nil fontified nil 3093 . 3094) (nil fontified nil 3092 . 3093) (nil fontified nil 3075 . 3092) (nil fontified nil 3074 . 3075) (nil fontified nil 3060 . 3074) (nil fontified nil 3059 . 3060) (nil fontified nil 3058 . 3059) (nil fontified nil 3057 . 3058) (nil fontified nil 3052 . 3057) (nil fontified nil 3047 . 3052) (nil fontified nil 3046 . 3047) (nil fontified nil 3045 . 3046) (nil fontified nil 3044 . 3045) (nil fontified nil 3036 . 3044) (nil fontified nil 3035 . 3036) (nil fontified nil 3034 . 3035) (nil fontified nil 3032 . 3034) (nil fontified nil 3031 . 3032) (nil fontified nil 3027 . 3031) (nil fontified nil 3024 . 3027) (nil fontified nil 3023 . 3024) (nil fontified nil 3020 . 3023) (nil fontified nil 3019 . 3020) (nil fontified nil 3013 . 3019) (nil fontified nil 3012 . 3013) (nil fontified nil 3006 . 3012) (nil fontified nil 3005 . 3006) (nil fontified nil 2991 . 3005) (nil fontified nil 2990 . 2991) (nil fontified nil 2986 . 2990) (nil fontified nil 2985 . 2986) (nil fontified nil 2970 . 2985) (nil fontified nil 2969 . 2970) (nil fontified nil 2963 . 2969) (nil fontified nil 2959 . 2963) (nil fontified nil 2958 . 2959) (nil fontified nil 2944 . 2958) (nil fontified nil 2943 . 2944) (nil fontified nil 2939 . 2943) (nil fontified nil 2938 . 2939) (nil fontified nil 2925 . 2938) (nil fontified nil 2924 . 2925) (nil fontified nil 2923 . 2924) (nil fontified nil 2922 . 2923) (nil fontified nil 2916 . 2922) (nil fontified nil 2915 . 2916) (nil fontified nil 2914 . 2915) (nil fontified nil 2897 . 2914) (nil fontified nil 2896 . 2897) (nil fontified nil 2882 . 2896) (nil fontified nil 2881 . 2882) (nil fontified nil 2880 . 2881) (nil fontified nil 2879 . 2880) (nil fontified nil 2874 . 2879) (nil fontified nil 2869 . 2874) (nil fontified nil 2868 . 2869) (nil fontified nil 2867 . 2868) (nil fontified nil 2866 . 2867) (nil fontified nil 2858 . 2866) (nil fontified nil 2857 . 2858) (nil fontified nil 2856 . 2857) (nil fontified nil 2854 . 2856) (nil fontified nil 2852 . 2854) (2852 . 3196)) nil (25884 13165 579783 291000) 0 nil])
([nil nil ((#("    return 0;
" 0 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg delete fontified t face font-lock-keyword-face) 5 10 (ws-butler-chg chg fontified t face font-lock-keyword-face) 10 14 (ws-butler-chg chg fontified t)) . 3212) (undo-tree-id480 . -13) (undo-tree-id481 . -4) 3216) nil (25884 13165 579761 545000) 0 nil])
([nil nil ((#("  }
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 3 4 (ws-butler-chg chg rear-nonsticky t fontified t)) . 3212) (undo-tree-id478 . -3) (undo-tree-id479 . -2) 3214) nil (25884 13165 579758 975000) 0 nil])
([nil nil ((3211 . 3216)) nil (25884 13165 579756 35000) 0 nil])
([nil nil ((3212 . 3214) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 3212) (undo-tree-id461 . -4) (undo-tree-id462 . -4) (undo-tree-id463 . -4) (undo-tree-id464 . -4) (undo-tree-id465 . -4) (undo-tree-id466 . -4) (undo-tree-id467 . -4) (undo-tree-id468 . -4) (undo-tree-id469 . -4) (undo-tree-id470 . -4) (undo-tree-id471 . -4) (undo-tree-id472 . -4) (undo-tree-id473 . -4) (undo-tree-id474 . -4) (undo-tree-id475 . -4) (undo-tree-id476 . -4) (undo-tree-id477 . -4) (3216 . 3217)) nil (25884 13165 579754 177000) 0 nil])
([nil nil ((3215 . 3218)) nil (25884 13165 579739 846000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3216) (undo-tree-id451 . -2) (undo-tree-id452 . -2) (undo-tree-id453 . -2) (undo-tree-id454 . -2) (undo-tree-id455 . -2) (undo-tree-id456 . -2) (undo-tree-id457 . -2) (undo-tree-id458 . -2) (undo-tree-id459 . -2) (undo-tree-id460 . -2) (3218 . 3219)) nil (25884 13165 579735 824000) 0 nil])
([nil nil ((4757 . 4762) (t 25884 13165 593267 309000)) nil (25884 13198 913409 497000) 0 nil])
([nil nil ((4762 . 4767)) nil (25884 13198 913406 836000) 0 nil])
([nil nil ((4762 . 4771) (#("stdin" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -4762) (undo-tree-id499 . -3) (undo-tree-id500 . -5) (undo-tree-id501 . -5) 4767) nil (25884 13198 913405 160000) 0 nil])
([nil nil ((4771 . 4772)) nil (25884 13198 913394 879000) 0 nil])
([nil nil ((4772 . 4782)) nil (25884 13198 913392 317000) 0 nil])
([nil nil ((4772 . 4786) (#("opt_delay_" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg)) . -4772) (undo-tree-id497 . -10) (undo-tree-id498 . -10) 4782) nil (25884 13198 913390 989000) 0 nil])
([nil nil ((4786 . 4787)) nil (25884 13198 913388 218000) 0 nil])
([nil nil ((4787 . 4793)) nil (25884 13198 913387 106000) 0 nil])
([nil nil ((4793 . 4794)) nil (25884 13198 913386 204000) 0 nil])
([nil nil ((4788 . 4799) (#("opt_re" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg)) . -4788) (undo-tree-id494 . -2) (undo-tree-id495 . -6) (undo-tree-id496 . -6) 4794) nil (25884 13198 913384 878000) 0 nil])
([nil nil ((4799 . 4800)) nil (25884 13198 913380 749000) 0 nil])
([nil nil ((4800 . 4801)) nil (25884 13198 913379 813000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg)) . -4800) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) 4801) nil (25884 13198 913377 438000) 0 nil])
([nil nil ((4800 . 4801)) nil (25884 13198 913364 312000) 0 nil])
([nil nil ((2826 . 2829) (t 25884 13198 925205 614000)) nil (25884 13241 52784 971000) 0 nil])
([nil nil ((2829 . 2834)) nil (25884 13241 52781 271000) 0 nil])
([nil nil ((2834 . 2835)) nil (25884 13241 52778 833000) 0 nil])
([nil nil ((2835 . 2846)) nil (25884 13241 52777 719000) 0 nil])
([nil nil ((2846 . 2847)) nil (25884 13241 52776 563000) 0 nil])
([nil nil ((2847 . 2850)) nil (25884 13241 52775 539000) 0 nil])
([nil nil ((2850 . 2864)) nil (25884 13241 52774 376000) 0 nil])
([nil nil ((2864 . 2865)) nil (25884 13241 52772 549000) 0 nil])
([nil nil ((2865 . 2868)) nil (25884 13241 52771 251000) 0 nil])
([nil nil ((2868 . 2873)) nil (25884 13241 52768 481000) 0 nil])
([nil nil ((2868 . 2875) (#("ssize" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t)) . -2868) (undo-tree-id502 . -2) (undo-tree-id503 . -5) (undo-tree-id504 . -5) 2873) nil (25884 13241 52765 65000) 0 nil])
([nil nil ((2875 . 2880)) nil (25884 13241 52750 592000) 0 nil])
([nil nil ((2880 . 2881)) nil (25884 13241 52746 211000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -2969) (undo-tree-id509 . -1) (#("i" 0 1 (fontified t)) . -2970) (undo-tree-id510 . -1) (#("l" 0 1 (fontified t)) . -2971) (undo-tree-id511 . -1) (#("e" 0 1 (fontified t)) . -2972) (undo-tree-id512 . -1) 2973 (t 25884 13241 61127 549000)) nil (25884 13257 245705 850000) 0 nil])
([nil nil ((2969 . 2974)) nil (25884 13257 245701 11000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -3164) (undo-tree-id505 . -1) (#("i" 0 1 (fontified t)) . -3165) (undo-tree-id506 . -1) (#("l" 0 1 (fontified t)) . -3166) (undo-tree-id507 . -1) (#("e" 0 1 (fontified t)) . -3167) (undo-tree-id508 . -1) 3168) nil (25884 13257 245697 928000) 0 nil])
([nil nil ((3164 . 3169)) nil (25884 13257 245684 770000) 0 nil])
([nil nil ((#("printf(\"ELSE\\n\");" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-3-face)) 7 8 (fontified t face font-lock-string-face) 8 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face (rainbow-delimiters-depth-3-face)) 16 17 (fontified t)) . -4797) (undo-tree-id706 . -12) (undo-tree-id707 . -14) (undo-tree-id708 . -14) (undo-tree-id709 . -17) (undo-tree-id710 . -17) (undo-tree-id711 . -14) (undo-tree-id712 . -17) 4814 (t 25884 13257 261097 513000)) nil (25884 13304 262444 163000) 0 nil])
([nil nil ((4797 . 4798)) nil (25884 13304 262437 65000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4792) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (#(" " 0 1 (fontified t)) . -4793) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (#(" " 0 1 (fontified t)) . -4794) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (#(" " 0 1 (fontified t)) . -4795) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (#(" " 0 1 (fontified t)) . -4796) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -4797) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) 4798) nil (25884 13304 262424 598000) 0 nil])
([nil nil ((2351 . 2352) (t 25884 13304 273010 283000)) nil (25884 13779 536695 486000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2351) (undo-tree-id713 . -1) 2352 (t 25884 13779 548124 718000)) nil (25884 13931 978347 974000) 0 nil])
([nil nil ((2266 . 2267) (t 25884 13931 987839 749000)) nil (25884 14151 351898 592000) 0 nil])
([nil nil ((2267 . 2276)) nil (25884 14151 351896 242000) 0 nil])
([nil nil ((2453 . 2456)) nil (25884 14151 351894 22000) 0 nil])
([nil nil ((2454 . 2457) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 2454) (undo-tree-id724 . -2) 2456) nil (25884 14151 351890 36000) 0 nil])
([nil nil ((2457 . 2464)) nil (25884 14151 351887 313000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -2524) (undo-tree-id720 . -1) (#("i" 0 1 (fontified t)) . -2525) (undo-tree-id721 . -1) (#("l" 0 1 (fontified t)) . -2526) (undo-tree-id722 . -1) (#("e" 0 1 (fontified t)) . -2527) (undo-tree-id723 . -1) 2528) nil (25884 14151 351885 794000) 0 nil])
([nil nil ((2524 . 2534)) nil (25884 14151 351880 564000) 0 nil])
([nil nil ((2349 . 2352)) nil (25884 14151 351879 557000) 0 nil])
([nil nil ((2352 . 2354)) nil (25884 14151 351878 521000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2352) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -2353) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) 2354) nil (25884 14151 351876 53000) 0 nil])
([nil nil ((2352 . 2366)) nil (25884 14151 351864 371000) 0 nil])
([nil nil ((2366 . 2367)) nil (25884 14151 351862 899000) 0 nil])
([nil nil ((2366 . 2373)) nil (25884 14151 351858 300000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -2733) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (#("i" 0 1 (fontified t)) . -2734) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (#("l" 0 1 (fontified t)) . -2735) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (#("e" 0 1 (fontified t)) . -2736) (undo-tree-id837 . -1) (undo-tree-id838 . -1) 2737 (t 25884 14151 359388 199000)) nil (25884 14507 263077 335000) 0 nil])
([nil nil ((2733 . 2741)) nil (25884 14507 263061 214000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -2740) (undo-tree-id830 . -1) 2741) nil (25884 14507 263060 206000) 0 nil])
([nil nil ((2740 . 2741)) nil (25884 14507 263058 433000) 0 nil])
([nil nil ((2733 . 2743) (#("input_ty" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg)) . -2733) (undo-tree-id827 . -3) (undo-tree-id828 . -8) (undo-tree-id829 . -8) 2741) nil (25884 14507 263057 286000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -2487) (undo-tree-id825 . -1) (#("e" 0 1 (fontified t)) . -2488) (undo-tree-id826 . -1) 2489) nil (25884 14507 263052 853000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2484) (undo-tree-id822 . -1) (#("t" 0 1 (fontified t)) . -2485) (undo-tree-id823 . -1) (#("y" 0 1 (fontified t)) . -2486) (undo-tree-id824 . -1) 2487) nil (25884 14507 263049 376000) 0 nil])
([nil nil ((2484 . 2485)) nil (25884 14507 263045 431000) 0 nil])
([nil nil ((2485 . 2494)) nil (25884 14507 263044 431000) 0 nil])
([nil nil ((2494 . 2495)) nil (25884 14507 263043 668000) 0 nil])
([nil nil ((2495 . 2496)) nil (25884 14507 263042 867000) 0 nil])
([nil nil ((2496 . 2501)) nil (25884 14507 263042 31000) 0 nil])
([nil nil ((2501 . 2503)) nil (25884 14507 263041 291000) 0 nil])
([nil nil ((2503 . 2512)) nil (25884 14507 263040 523000) 0 nil])
([nil nil ((2374 . 2377)) nil (25884 14507 263039 775000) 0 nil])
([nil nil ((2377 . 2379)) nil (25884 14507 263038 995000) 0 nil])
([nil nil ((2379 . 2400)) nil (25884 14507 263038 196000) 0 nil])
([nil nil ((2400 . 2410)) nil (25884 14507 263037 450000) 0 nil])
([nil nil ((2410 . 2411)) nil (25884 14507 263036 652000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2410) (undo-tree-id821 . -1) 2411) nil (25884 14507 263035 579000) 0 nil])
([nil nil ((2548 . 2552)) nil (25884 14507 263033 831000) 0 nil])
([nil nil ((2552 . 2553)) nil (25884 14507 263032 968000) 0 nil])
([nil nil ((2553 . 2558)) nil (25884 14507 263032 81000) 0 nil])
([nil nil ((2554 . 2556) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 2554) (undo-tree-id820 . -4) (2558 . 2559)) nil (25884 14507 263030 715000) 0 nil])
([nil nil ((2557 . 2560)) nil (25884 14507 263028 451000) 0 nil])
([nil nil ((2560 . 2564)) nil (25884 14507 263027 497000) 0 nil])
([nil nil ((2564 . 2565) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -2564) (2564 . 2566) (#("else" 0 1 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1 2 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified nil face font-lock-keyword-face)) . 2564) (undo-tree-id817 . -2) (undo-tree-id818 . -4) (undo-tree-id819 . -4) (2560 . 2564) 2564) nil (25884 14507 263026 75000) 0 nil])
([nil nil ((2565 . 2568)) nil (25884 14507 263021 289000) 0 nil])
([nil nil ((2568 . 2569)) nil (25884 14507 263020 371000) 0 nil])
([nil nil ((2569 . 2573)) nil (25884 14507 263019 582000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg)) . -2571) (undo-tree-id815 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -2572) (undo-tree-id816 . -1) 2573) nil (25884 14507 263018 365000) 0 nil])
([nil nil ((2571 . 2578)) nil (25884 14507 263014 642000) 0 nil])
([nil nil ((2578 . 2579)) nil (25884 14507 263012 420000) 0 nil])
([nil nil ((2579 . 2580)) nil (25884 14507 263009 618000) 0 nil])
([nil nil ((2580 . 2585)) nil (25884 14507 263007 161000) 0 nil])
([nil nil ((2585 . 2597)) nil (25884 14507 263004 305000) 0 nil])
([nil nil ((2597 . 2598)) nil (25884 14507 263002 275000) 0 nil])
([nil nil ((2598 . 2603)) nil (25884 14507 263000 711000) 0 nil])
([nil nil ((2599 . 2601) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 2599) (undo-tree-id814 . -4) (2603 . 2604)) nil (25884 14507 262998 331000) 0 nil])
([nil nil ((2602 . 2605)) nil (25884 14507 262994 315000) 0 nil])
([nil nil ((2605 . 2609)) nil (25884 14507 262993 37000) 0 nil])
([nil nil ((2609 . 2610) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -2609) (2609 . 2611) (#("else" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 2609) (undo-tree-id811 . -3) (undo-tree-id812 . -4) (undo-tree-id813 . -4) (2605 . 2609) 2609) nil (25884 14507 262991 11000) 0 nil])
([nil nil ((2610 . 2611)) nil (25884 14507 262983 423000) 0 nil])
([nil nil ((2611 . 2620)) nil (25884 14507 262981 941000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2609) (undo-tree-id800 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face))) . -2610) (undo-tree-id801 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -2611) (undo-tree-id802 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2612) (undo-tree-id803 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2613) (undo-tree-id804 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2614) (undo-tree-id805 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2615) (undo-tree-id806 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2616) (undo-tree-id807 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2617) (undo-tree-id808 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2618) (undo-tree-id809 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2619) (undo-tree-id810 . -1) 2620) nil (25884 14507 262977 245000) 0 nil])
([nil nil ((2609 . 2610) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -2609) (2609 . 2611) (#("else" 0 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 2609) (undo-tree-id797 . -4) (undo-tree-id798 . -4) (undo-tree-id799 . -4) (2605 . 2609) 2609) nil (25884 14507 262956 489000) 0 nil])
([nil nil ((2610 . 2615)) nil (25884 14507 262950 260000) 0 nil])
([nil nil ((2615 . 2619)) nil (25884 14507 262949 44000) 0 nil])
([nil nil ((2619 . 2623)) nil (25884 14507 262947 735000) 0 nil])
([nil nil ((2623 . 2624)) nil (25884 14507 262946 435000) 0 nil])
([nil nil ((2624 . 2629)) nil (25884 14507 262945 261000) 0 nil])
([nil nil ((2625 . 2627) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 2625) (undo-tree-id796 . -4) (2629 . 2630)) nil (25884 14507 262943 947000) 0 nil])
([nil nil ((4970 . 4977)) nil (25884 14507 262941 265000) 0 nil])
([nil nil ((4977 . 4981)) nil (25884 14507 262940 213000) 0 nil])
([nil nil ((4977 . 4985) (#("file" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -4977) (undo-tree-id794 . -4) (undo-tree-id795 . -4) 4981) nil (25884 14507 262938 757000) 0 nil])
([nil nil ((4985 . 4986)) nil (25884 14507 262934 762000) 0 nil])
([nil nil ((4986 . 4987)) nil (25884 14507 262933 599000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg)) . -4986) (undo-tree-id792 . -1) (undo-tree-id793 . -1) 4987) nil (25884 14507 262931 669000) 0 nil])
([nil nil ((4986 . 4990)) nil (25884 14507 262927 690000) 0 nil])
([nil nil ((4990 . 4991)) nil (25884 14507 262926 554000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -4972) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4973) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4974) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4975) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4976) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -4977) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -4978) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -4979) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -4980) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -4981) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -4982) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -4983) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -4984) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-4-face))) . -4985) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (#("N" 0 1 (fontified t ws-butler-chg chg)) . -4986) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (#("U" 0 1 (fontified t ws-butler-chg chg)) . -4987) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (#("L" 0 1 (fontified t ws-butler-chg chg)) . -4988) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (#("L" 0 1 (fontified t ws-butler-chg chg face font-lock-constant-face)) . -4989) (undo-tree-id790 . -1) (#("," 0 1 (fontified t ws-butler-chg chg)) . -4990) (undo-tree-id791 . -1) 4991) nil (25884 14507 262918 486000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -4970) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4971) (undo-tree-id754 . -1) (undo-tree-id755 . -1) 4972) nil (25884 14507 262878 206000) 0 nil])
([nil nil ((apply -54 2516 2683 undo--wrap-and-run-primitive-undo 2516 2683 ((2679 . 2682) (2675 . 2678) (2669 . 2672) (2655 . 2658) (2649 . 2652) (2641 . 2644) (2635 . 2638) (2631 . 2634) (2625 . 2628) (2607 . 2610) (2601 . 2604) (2578 . 2581) (2572 . 2575) (2568 . 2571) (2562 . 2565) (2541 . 2544) (2535 . 2538) (2518 . 2521)))) nil (25884 14507 262874 228000) 0 nil])
([nil nil ((2412 . 2415) (#("  " 0 2 (c-is-sws t c-in-sws t fontified t)) . 2412) (undo-tree-id748 . -1) (undo-tree-id749 . -2) (undo-tree-id750 . -2) (undo-tree-id751 . -2) 2414) nil (25884 14507 262872 835000) 0 nil])
([nil nil ((2412 . 2414)) nil (25884 14507 262868 271000) 0 nil])
([nil nil ((2414 . 2417)) nil (25884 14507 262867 491000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2416) (undo-tree-id747 . -1) 2417) nil (25884 14507 262866 520000) 0 nil])
([nil nil ((2416 . 2417)) nil (25884 14507 262864 748000) 0 nil])
([nil nil ((2417 . 2428)) nil (25884 14507 262863 744000) 0 nil])
([nil nil ((2428 . 2429)) nil (25884 14507 262862 909000) 0 nil])
([nil nil ((2429 . 2430)) nil (25884 14507 262861 909000) 0 nil])
([nil nil ((2430 . 2435)) nil (25884 14507 262861 135000) 0 nil])
([nil nil ((2431 . 2433) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 2431) (undo-tree-id746 . -4) (2435 . 2436)) nil (25884 14507 262860 91000) 0 nil])
([nil nil ((2434 . 2437)) nil (25884 14507 262858 212000) 0 nil])
([nil nil ((2437 . 2441)) nil (25884 14507 262857 425000) 0 nil])
([nil nil ((2441 . 2442) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -2441) (2441 . 2443) (#("else" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 2441) (undo-tree-id743 . -3) (undo-tree-id744 . -4) (undo-tree-id745 . -4) (2437 . 2441) 2441) nil (25884 14507 262856 59000) 0 nil])
([nil nil ((2442 . 2447)) nil (25884 14507 262850 716000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -2442) (undo-tree-id738 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2443) (undo-tree-id739 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2444) (undo-tree-id740 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2445) (undo-tree-id741 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2446) (undo-tree-id742 . -1) 2447) nil (25884 14507 262849 55000) 0 nil])
([nil nil ((2443 . 2447) (#("  " 0 2 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t)) . 2443) 2450) nil (25884 14507 262843 669000) 0 nil])
([nil nil ((2473 . 2477) (#("  " 0 2 (fontified t)) . 2473) (undo-tree-id737 . -2) 2482) nil (25884 14507 262842 317000) 0 nil])
([nil nil ((2497 . 2503) (#("    " 0 4 (fontified t)) . 2497) 2508) nil (25884 14507 262840 337000) 0 nil])
([nil nil ((2533 . 2539) (#("    " 0 1 (fontified t c-is-sws t) 1 4 (fontified t c-in-sws t)) . 2533) 2546) nil (25884 14507 262838 581000) 0 nil])
([nil nil ((2550 . 2554) (#("  " 0 2 (fontified t)) . 2550) 2553) nil (25884 14507 262837 205000) 0 nil])
([nil nil ((2555 . 2560)) nil (25884 14507 262836 83000) 0 nil])
([nil nil ((2556 . 2558) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 2556) (undo-tree-id736 . -4) (2560 . 2561)) nil (25884 14507 262834 937000) 0 nil])
([nil nil ((2431 . 2434) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 2431) (undo-tree-id735 . -2) 2433) nil (25884 14507 262832 671000) 0 nil])
([nil nil ((2431 . 2435)) nil (25884 14507 262830 676000) 0 nil])
([nil nil ((#("type " 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t)) . -2272) (undo-tree-id734 . -5) 2277) nil (25884 14507 262829 641000) 0 nil])
([nil nil ((#("int " 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t)) . -2268) (undo-tree-id733 . -4) 2272) nil (25884 14507 262827 702000) 0 nil])
([nil nil ((#("," 0 1 (fontified t c-type c-decl-arg-start)) . -2266) (undo-tree-id731 . -1) (#(" " 0 1 (fontified t)) . -2267) (undo-tree-id732 . -1) 2268) nil (25884 14507 262825 575000) 0 nil])
([nil nil ((2266 . 2267)) nil (25884 14507 262822 749000) 0 nil])
([nil nil ((2425 . 2430)) nil (25884 14507 262822 1000) 0 nil])
([nil nil ((2425 . 2435) (#("input" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t)) . -2425) (undo-tree-id728 . -3) (undo-tree-id729 . -5) (undo-tree-id730 . -5) 2430) nil (25884 14507 262820 699000) 0 nil])
([nil nil ((2435 . 2437)) nil (25884 14507 262816 949000) 0 nil])
([nil nil ((2437 . 2438)) nil (25884 14507 262816 196000) 0 nil])
([nil nil ((2480 . 2485)) nil (25884 14507 262815 375000) 0 nil])
([nil nil ((2485 . 2491)) nil (25884 14507 262814 531000) 0 nil])
([nil nil ((2485 . 2495) (#("input_" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg)) . -2485) (undo-tree-id725 . -3) (undo-tree-id726 . -6) (undo-tree-id727 . -6) 2491) nil (25884 14507 262812 620000) 0 nil])
([nil nil ((2495 . 2500)) nil (25884 14507 262803 455000) 0 nil])
([nil nil ((2500 . 2501)) nil (25884 14507 262798 951000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -5122) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (#("t" 0 1 (fontified t)) . -5123) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (#("d" 0 1 (fontified t)) . -5124) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (#("i" 0 1 (fontified t)) . -5125) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) 5126 (t 25884 14507 274600 253000)) nil (25884 14531 355246 361000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg delete)) . 5122)) nil (25884 14531 355228 831000) 0 nil])
([nil nil ((5122 . 5126)) nil (25884 14531 355227 921000) 0 nil])
([nil nil ((5131 . 5135)) nil (25884 14531 355226 950000) 0 nil])
([nil nil ((5135 . 5136)) nil (25884 14531 355225 502000) 0 nil])
([nil nil ((5136 . 5137)) nil (25884 14531 355221 153000) 0 nil])
([nil current ((#(" " 0 1 (fontified t)) . -2356) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (#("=" 0 1 (fontified t)) . -2357) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (#(" " 0 1 (fontified t)) . -2358) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (#("N" 0 1 (fontified t)) . -2359) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (#("U" 0 1 (fontified t)) . -2360) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (#("L" 0 1 (fontified t)) . -2361) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (#("L" 0 1 (fontified t face font-lock-constant-face)) . -2362) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) 2363 (t 25884 14531 366548 930000)) nil (25884 14561 493689 260000) 0 nil])
nil
