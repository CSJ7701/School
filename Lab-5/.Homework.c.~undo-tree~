(undo-tree-save-format-version . 1)
"854a932318464cb5520ad100c3465c7be163445d"
[nil nil nil nil (25884 8328 800567 359000) 0 nil]
([nil nil ((4348 . 4349) (4341 . 4348) (4339 . 4341) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4339) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("+" 0 1 (fontified t ws-butler-chg chg)) . -4340) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("+" 0 1 (fontified t ws-butler-chg chg)) . -4341) (undo-tree-id64 . -1) (undo-tree-id65 . -1) 4342 (4333 . 4342) (4328 . 4333) (4327 . 4328) (4326 . 4327) (4325 . 4326) (nil syntax-table nil 4325 . 4326) (nil syntax-table (1) 4311 . 4312) (4324 . 4325) (nil syntax-table nil 4324 . 4325) (nil syntax-table (1) 4311 . 4312) (4323 . 4324) (nil syntax-table nil 4323 . 4324) (nil syntax-table (1) 4311 . 4312) (4322 . 4323) (nil syntax-table nil 4322 . 4323) (nil syntax-table (1) 4311 . 4312) (4321 . 4322) (nil syntax-table nil 4321 . 4322) (nil syntax-table (1) 4311 . 4312) (4320 . 4321) (nil syntax-table nil 4320 . 4321) (nil syntax-table (1) 4311 . 4312) (4319 . 4320) (nil syntax-table nil 4319 . 4320) (nil syntax-table (1) 4311 . 4312) (4318 . 4319) (nil syntax-table nil 4318 . 4319) (nil syntax-table (1) 4311 . 4312) (4317 . 4318) (nil syntax-table nil 4317 . 4318) (nil syntax-table (1) 4311 . 4312) (4316 . 4317) (nil syntax-table nil 4316 . 4317) (nil syntax-table (1) 4311 . 4312) (4315 . 4316) (nil syntax-table nil 4315 . 4316) (nil syntax-table (1) 4311 . 4312) (4314 . 4315) (nil syntax-table nil 4314 . 4315) (nil syntax-table (1) 4311 . 4312) (4313 . 4314) (nil syntax-table nil 4313 . 4314) (nil syntax-table (1) 4311 . 4312) (4312 . 4313) (nil syntax-table nil 4312 . 4313) (nil syntax-table (1) 4311 . 4312) (4311 . 4312) (4310 . 4311) (4306 . 4310) (4304 . 4306) (4300 . 4304) (#(" " 0 1 (fontified nil ws-butler-chg delete)) . 4300) (undo-tree-id66 . -1) (4299 . 4300) (4298 . 4299) (4297 . 4298) (4283 . 4297) (4278 . 4283) (4277 . 4278) (4265 . 4277) (4264 . 4265) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -4264) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 4265 (4259 . 4265) (4254 . 4256) (#(" " 0 1 (fontified nil)) . 4254) (4257 . 4258) (4255 . 4257) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -4255) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 4256 (4255 . 4256) (t 25884 8144 66689 636000)) nil (25884 8328 800561 827000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4348) (undo-tree-id56 . 1) (undo-tree-id57 . -1) (#("}" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face))) . 4348) (4348 . 4349) (#("i" 0 1 (fontified t ws-butler-chg chg)) . 4348) (undo-tree-id58 . -1) (undo-tree-id59 . -1) 4349 (#("}" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face))) . 4348) (4349 . 4350) 4348) nil (25884 8328 800536 213000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -4341) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4342) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4343) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4344) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4345) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4346) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4347) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 4348) nil (25884 8328 800527 301000) 0 nil])
([nil nil ((4341 . 4348)) nil (25884 8328 800466 994000) 0 nil])
([nil nil ((4348 . 4349)) nil (25884 8328 800462 2000) 0 nil])
([nil nil ((4341 . 4342) (t 25884 8328 814336 296000)) nil (25884 8484 231304 243000) 0 nil])
([nil nil ((3556 . 3557) (t 25884 8484 238039 128000)) nil (25884 8662 830197 94000) 0 nil])
([nil nil ((3573 . 3577) (#("  " 0 2 (fontified nil)) . 3573) (undo-tree-id77 . -2) (3575 . 3576)) nil (25884 8662 830195 930000) 0 nil])
([nil nil ((3597 . 3601) (#("  " 0 2 (fontified nil)) . 3597) (undo-tree-id76 . -2) (3599 . 3600)) nil (25884 8662 830193 941000) 0 nil])
([nil nil ((3614 . 3618) (#("  " 0 2 (fontified nil)) . 3614) (undo-tree-id75 . -2) (3616 . 3617)) nil (25884 8662 830191 747000) 0 nil])
([nil nil ((3557 . 3558)) nil (25884 8662 830189 692000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t c-is-sws t ws-butler-chg chg)) . -3556) (undo-tree-id73 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3557) (undo-tree-id74 . -1) 3558) nil (25884 8662 830188 555000) 0 nil])
([nil nil ((3556 . 3558)) nil (25884 8662 830185 679000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg delete c-is-sws t fontified t)) . 3578)) nil (25884 8662 830184 769000) 0 nil])
([nil nil ((3574 . 3576) (#("      " 0 1 (ws-butler-chg chg fontified t c-is-sws t c-in-sws t) 1 4 (ws-butler-chg chg c-in-sws t fontified t c-is-sws t) 4 5 (fontified t c-is-sws t c-in-sws t ws-butler-chg delete) 5 6 (fontified t c-is-sws t c-in-sws t)) . 3574) (undo-tree-id72 . -4) 3578) nil (25884 8662 830183 793000) 0 nil])
([nil nil ((3576 . 3578)) nil (25884 8662 830181 590000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg delete c-is-sws t fontified t)) . 3599)) nil (25884 8662 830180 693000) 0 nil])
([nil nil ((3595 . 3597) (#("      " 0 1 (ws-butler-chg chg fontified t c-is-sws t c-in-sws t) 1 4 (ws-butler-chg chg c-in-sws t fontified t c-is-sws t) 4 5 (fontified t c-is-sws t c-in-sws t ws-butler-chg delete) 5 6 (fontified t c-is-sws t c-in-sws t)) . 3595) (undo-tree-id71 . -4) 3599) nil (25884 8662 830179 458000) 0 nil])
([nil nil ((3597 . 3598)) nil (25884 8662 830172 732000) 0 nil])
([nil nil ((3598 . 3599)) nil (25884 8662 830171 627000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg delete c-is-sws t fontified t)) . 3613)) nil (25884 8662 830170 105000) 0 nil])
([nil nil ((3609 . 3611) (#("    " 0 1 (ws-butler-chg chg fontified nil c-is-sws t c-in-sws t) 1 4 (ws-butler-chg chg c-in-sws t fontified nil c-is-sws t)) . 3609) (3613 . 3615)) nil (25884 8662 830165 210000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -4270) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("=" 0 1 (fontified t)) . -4271) (undo-tree-id83 . -1) 4272 (t 25884 8662 841697 712000)) nil (25884 8684 793114 47000) 0 nil])
([nil nil ((4270 . 4271)) nil (25884 8684 793097 716000) 0 nil])
([nil nil ((#("    optind++;
" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t)) . 4332) (undo-tree-id84 . -12) (undo-tree-id85 . -8) (undo-tree-id86 . 2) (undo-tree-id87 . -12) (undo-tree-id88 . -12) (undo-tree-id89 . -11) (undo-tree-id90 . -12) (undo-tree-id91 . -13) (undo-tree-id92 . -13) (undo-tree-id93 . -13) (undo-tree-id94 . -13) (undo-tree-id95 . -13) (undo-tree-id96 . -13) (undo-tree-id97 . -13) (undo-tree-id98 . -13) (undo-tree-id99 . -12) (undo-tree-id100 . -12) (undo-tree-id101 . -12) (undo-tree-id102 . -12) (undo-tree-id103 . -12) (undo-tree-id104 . -12) (undo-tree-id105 . -12) (undo-tree-id106 . -12) (undo-tree-id107 . -12) (undo-tree-id108 . -11) (undo-tree-id109 . -11) (undo-tree-id110 . -11) (undo-tree-id111 . -11) (undo-tree-id112 . -11) (undo-tree-id113 . -11) (undo-tree-id114 . -11) (undo-tree-id115 . -11) (undo-tree-id116 . -11) (undo-tree-id117 . -11) (undo-tree-id118 . -11) (undo-tree-id119 . -11) (undo-tree-id120 . -11) (undo-tree-id121 . -11) (undo-tree-id122 . -11) (undo-tree-id123 . -11) (undo-tree-id124 . -11) (undo-tree-id125 . -11) (undo-tree-id126 . -11) (undo-tree-id127 . -14) (undo-tree-id128 . -13) 4343 (t 25884 8684 801655 738000)) nil (25884 8708 665457 880000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 4270) (t 25884 8708 677610 103000)) nil (25884 8729 830281 507000) 0 nil])
([nil nil ((4270 . 4271)) nil (25884 8729 830280 318000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t ws-butler-chg chg)) . -4270) (undo-tree-id129 . -1) 4271) nil (25884 8729 830278 82000) 0 nil])
([nil nil ((4270 . 4272)) nil (25884 8729 830268 385000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -4270) (undo-tree-id130 . -1) (#("=" 0 1 (fontified t)) . -4271) (undo-tree-id131 . -1) 4272 (t 25884 8729 837569 659000)) nil (25884 8748 737550 371000) 0 nil])
([nil nil ((4270 . 4271)) nil (25884 8748 737539 183000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -4260) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -4261) (undo-tree-id135 . -1) 4262 (t 25884 8748 745533 521000)) nil (25884 8830 359327 621000) 0 nil])
([nil nil ((4260 . 4265)) nil (25884 8830 359314 809000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -4273) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) 4274 (t 25884 8830 365377 526000)) nil (25884 8847 799364 676000) 0 nil])
([nil nil ((4273 . 4275)) nil (25884 8847 799352 8000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -4273) (undo-tree-id169 . -1) (#("=" 0 1 (fontified t)) . -4274) (undo-tree-id170 . -1) 4275 (t 25884 8847 805344 194000)) nil (25884 8949 385100 210000) 0 nil])
([nil nil ((4273 . 4274)) nil (25884 8949 385097 609000) 0 nil])
([nil nil ((4305 . 4306)) nil (25884 8949 385096 895000) 0 nil])
([nil nil ((4306 . 4308)) nil (25884 8949 385096 164000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg)) . -4306) (undo-tree-id167 . -1) (#(";" 0 1 (fontified t ws-butler-chg chg)) . -4307) (undo-tree-id168 . -1) 4308) nil (25884 8949 385095 103000) 0 nil])
([nil nil ((4306 . 4308)) nil (25884 8949 385092 39000) 0 nil])
([nil nil ((4308 . 4323)) nil (25884 8949 385091 295000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4320) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4321) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4322) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) 4323) nil (25884 8949 385089 753000) 0 nil])
([nil nil ((4320 . 4322)) nil (25884 8949 385082 450000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4319) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4320) (undo-tree-id156 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4321) (undo-tree-id157 . -1) 4322) nil (25884 8949 385081 40000) 0 nil])
([nil nil ((4319 . 4328)) nil (25884 8949 385076 374000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4326) (undo-tree-id151 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4327) (undo-tree-id152 . -1) 4328) nil (25884 8949 385075 233000) 0 nil])
([nil nil ((4326 . 4332)) nil (25884 8949 385072 293000) 0 nil])
([nil nil ((4332 . 4340)) nil (25884 8949 385071 568000) 0 nil])
([nil nil ((#("there" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 1 2 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 2 3 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 3 4 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 4 5 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -4335) (undo-tree-id148 . -2) (undo-tree-id149 . -5) (undo-tree-id150 . -5) 4340) nil (25884 8949 385070 533000) 0 nil])
([nil nil ((#("whether " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 5 6 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 6 7 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 7 8 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4327) (undo-tree-id145 . -8) (undo-tree-id146 . -8) (undo-tree-id147 . -8) 4335) nil (25884 8949 385067 438000) 0 nil])
([nil nil ((#("check " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 5 6 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4321) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -6) 4327) nil (25884 8949 385062 695000) 0 nil])
([nil nil ((4321 . 4342)) nil (25884 8949 385059 579000) 0 nil])
([nil nil ((4342 . 4352)) nil (25884 8949 385058 841000) 0 nil])
([nil nil ((4352 . 4364)) nil (25884 8949 385058 90000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -4363) (undo-tree-id141 . -1) 4364) nil (25884 8949 385057 28000) 0 nil])
([nil nil ((4363 . 4379)) nil (25884 8949 385055 25000) 0 nil])
([nil nil ((4379 . 4380)) nil (25884 8949 385054 130000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -4379) (undo-tree-id140 . -1) 4380) nil (25884 8949 385052 126000) 0 nil])
([nil nil ((4379 . 4380)) nil (25884 8949 385042 53000) 0 nil])
([nil nil ((#("  while(optind > argc && *argv[optind] != '-'){ // This should print \"no file given\" if there are no file arguments given.
    printf(\"No File Given\");
      }" 0 2 (fontified t) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t face (rainbow-delimiters-depth-2-face)) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t face (rainbow-delimiters-depth-3-face)) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-3-face)) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t face font-lock-string-face) 43 44 (fontified t face font-lock-string-face) 44 45 (fontified t face font-lock-string-face) 45 46 (fontified t face (rainbow-delimiters-depth-2-face)) 46 47 (fontified t face (rainbow-delimiters-depth-2-face)) 47 48 (fontified t c-in-sws t c-is-sws t) 48 49 (fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 49 50 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 50 51 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 51 52 (fontified t c-in-sws t face font-lock-comment-face) 52 53 (fontified t c-in-sws t face font-lock-comment-face) 53 54 (fontified t c-in-sws t face font-lock-comment-face) 54 55 (fontified t c-in-sws t face font-lock-comment-face) 55 56 (fontified t c-in-sws t face font-lock-comment-face) 56 57 (fontified t c-in-sws t face font-lock-comment-face) 57 58 (fontified t c-in-sws t face font-lock-comment-face) 58 59 (fontified t c-in-sws t face font-lock-comment-face) 59 60 (fontified t c-in-sws t face font-lock-comment-face) 60 61 (fontified t c-in-sws t face font-lock-comment-face) 61 62 (fontified t c-in-sws t face font-lock-comment-face) 62 63 (fontified t c-in-sws t face font-lock-comment-face) 63 64 (fontified t c-in-sws t face font-lock-comment-face) 64 65 (fontified t c-in-sws t face font-lock-comment-face) 65 66 (fontified t c-in-sws t face font-lock-comment-face) 66 67 (fontified t c-in-sws t face font-lock-comment-face) 67 68 (fontified t c-in-sws t face font-lock-comment-face) 68 69 (fontified t c-in-sws t face font-lock-comment-face) 69 70 (fontified t c-in-sws t face font-lock-comment-face) 70 71 (fontified t c-in-sws t face font-lock-comment-face) 71 72 (fontified t c-in-sws t face font-lock-comment-face) 72 73 (fontified t c-in-sws t face font-lock-comment-face) 73 74 (fontified t c-in-sws t face font-lock-comment-face) 74 75 (fontified t c-in-sws t face font-lock-comment-face) 75 76 (fontified t c-in-sws t face font-lock-comment-face) 76 77 (fontified t c-in-sws t face font-lock-comment-face) 77 78 (fontified t c-in-sws t face font-lock-comment-face) 78 79 (fontified t c-in-sws t face font-lock-comment-face) 79 80 (fontified t c-in-sws t face font-lock-comment-face) 80 81 (fontified t c-in-sws t face font-lock-comment-face) 81 82 (fontified t c-in-sws t face font-lock-comment-face) 82 83 (fontified t c-in-sws t face font-lock-comment-face) 83 84 (fontified t c-in-sws t face font-lock-comment-face) 84 85 (fontified t c-in-sws t face font-lock-comment-face) 85 86 (fontified t c-in-sws t face font-lock-comment-face) 86 87 (fontified t c-in-sws t face font-lock-comment-face) 87 88 (fontified t c-in-sws t face font-lock-comment-face) 88 89 (fontified t c-in-sws t face font-lock-comment-face) 89 90 (fontified t c-in-sws t face font-lock-comment-face) 90 91 (fontified t c-in-sws t face font-lock-comment-face) 91 92 (fontified t c-in-sws t face font-lock-comment-face) 92 93 (fontified t c-in-sws t face font-lock-comment-face) 93 94 (fontified t c-in-sws t face font-lock-comment-face) 94 95 (fontified t c-in-sws t face font-lock-comment-face) 95 96 (fontified t c-in-sws t face font-lock-comment-face) 96 97 (fontified t c-in-sws t face font-lock-comment-face) 97 98 (fontified t c-in-sws t face font-lock-comment-face) 98 99 (fontified t c-in-sws t face font-lock-comment-face) 99 100 (fontified t c-in-sws t face font-lock-comment-face) 100 101 (fontified t c-in-sws t face font-lock-comment-face) 101 102 (fontified t c-in-sws t face font-lock-comment-face) 102 103 (fontified t c-in-sws t face font-lock-comment-face) 103 104 (fontified t c-in-sws t face font-lock-comment-face) 104 105 (fontified t c-in-sws t face font-lock-comment-face) 105 106 (fontified t c-in-sws t face font-lock-comment-face) 106 107 (fontified t c-in-sws t face font-lock-comment-face) 107 108 (fontified t c-in-sws t face font-lock-comment-face) 108 109 (fontified t c-in-sws t face font-lock-comment-face) 109 110 (fontified t c-in-sws t face font-lock-comment-face) 110 111 (fontified t c-in-sws t face font-lock-comment-face) 111 112 (fontified t c-in-sws t face font-lock-comment-face) 112 113 (fontified t c-in-sws t face font-lock-comment-face) 113 114 (fontified t c-in-sws t face font-lock-comment-face) 114 115 (fontified t c-in-sws t face font-lock-comment-face) 115 116 (fontified t c-in-sws t face font-lock-comment-face) 116 117 (fontified t c-in-sws t face font-lock-comment-face) 117 118 (fontified t c-in-sws t face font-lock-comment-face) 118 119 (fontified t c-in-sws t face font-lock-comment-face) 119 120 (fontified t c-in-sws t face font-lock-comment-face) 120 121 (fontified t c-in-sws t face font-lock-comment-face) 121 122 (fontified t face font-lock-comment-face c-in-sws t) 122 123 (fontified t face font-lock-comment-face c-in-sws t) 123 124 (c-is-sws t c-in-sws t fontified t) 124 127 (c-is-sws t c-in-sws t fontified t) 127 128 (c-is-sws t fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 134 (fontified t face (rainbow-delimiters-depth-3-face)) 134 135 (fontified t face font-lock-string-face) 135 136 (fontified t face font-lock-string-face) 136 137 (fontified t face font-lock-string-face) 137 138 (fontified t face font-lock-string-face) 138 139 (fontified t face font-lock-string-face) 139 140 (fontified t face font-lock-string-face) 140 141 (fontified t face font-lock-string-face) 141 142 (fontified t face font-lock-string-face) 142 143 (fontified t face font-lock-string-face) 143 144 (fontified t face font-lock-string-face) 144 145 (fontified t face font-lock-string-face) 145 146 (fontified t face font-lock-string-face) 146 147 (fontified t face font-lock-string-face) 147 148 (fontified t face font-lock-string-face) 148 149 (fontified t face font-lock-string-face) 149 150 (fontified t face (rainbow-delimiters-depth-3-face)) 150 151 (fontified t) 151 152 (fontified t) 152 153 (fontified t) 153 158 (fontified t) 158 159 (fontified t face (rainbow-delimiters-depth-2-face))) . 4258) (undo-tree-id204 . -159) (undo-tree-id205 . -118) (undo-tree-id206 . 7) (undo-tree-id207 . -123) (undo-tree-id208 . -152) (undo-tree-id209 . -15) (undo-tree-id210 . -15) (undo-tree-id211 . -15) (undo-tree-id212 . -152) (undo-tree-id213 . -15) (undo-tree-id214 . -120) (undo-tree-id215 . -2) (undo-tree-id216 . -159) (undo-tree-id217 . -15) (undo-tree-id218 . -159) (undo-tree-id219 . -159) (t 25884 8949 393150 52000)) nil (25884 9271 418670 483000) 0 nil])
([nil nil ((4107 . 4110)) nil (25884 9271 418658 649000) 0 nil])
([nil nil ((4108 . 4111) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 4108) (undo-tree-id203 . -2) 4110) nil (25884 9271 418657 841000) 0 nil])
([nil nil ((4111 . 4113)) nil (25884 9271 418655 852000) 0 nil])
([nil nil ((4113 . 4114)) nil (25884 9271 418655 24000) 0 nil])
([nil nil ((4114 . 4127)) nil (25884 9271 418653 791000) 0 nil])
([nil nil ((4127 . 4128)) nil (25884 9271 418653 22000) 0 nil])
([nil nil ((4128 . 4129)) nil (25884 9271 418652 320000) 0 nil])
([nil nil ((4131 . 4135) (#("  " 0 2 (fontified t)) . 4131) 4151) nil (25884 9271 418651 289000) 0 nil])
([nil nil ((4181 . 4187) (#("    " 0 4 (fontified t)) . 4181) 4203) nil (25884 9271 418649 910000) 0 nil])
([nil nil ((4209 . 4215) (#("    " 0 4 (fontified t)) . 4209) 4233) nil (25884 9271 418648 494000) 0 nil])
([nil nil ((4268 . 4274) (#("    " 0 4 (fontified t)) . 4268) 4281) nil (25884 9271 418647 134000) 0 nil])
([nil nil ((4284 . 4288) (#("  " 0 2 (fontified t)) . 4284) 4287) nil (25884 9271 418645 613000) 0 nil])
([nil nil ((4289 . 4294)) nil (25884 9271 418644 406000) 0 nil])
([nil nil ((4290 . 4295) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 4290) (undo-tree-id202 . -4) 4294) nil (25884 9271 418643 249000) 0 nil])
([nil nil ((4291 . 4293) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 4291) (undo-tree-id201 . -4) (4295 . 4296)) nil (25884 9271 418641 275000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -4289) (undo-tree-id200 . -1) 4290) nil (25884 9271 418639 230000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . -4129) (undo-tree-id199 . -1) 4130) nil (25884 9271 418637 440000) 0 nil])
([nil nil ((4292 . 4295)) nil (25884 9271 418635 682000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -4292) (undo-tree-id196 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -4293) (undo-tree-id197 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -4294) (undo-tree-id198 . -1) 4295) nil (25884 9271 418634 170000) 0 nil])
([nil nil ((4292 . 4297)) nil (25884 9271 418630 692000) 0 nil])
([nil nil ((4297 . 4298) (#("else" 0 1 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1 2 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified nil face font-lock-keyword-face)) . 4297) (undo-tree-id193 . -3) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (4293 . 4297) 4297) nil (25884 9271 418629 529000) 0 nil])
([nil nil ((4298 . 4299)) nil (25884 9271 418626 340000) 0 nil])
([nil nil ((4299 . 4304)) nil (25884 9271 418625 484000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 4300) (undo-tree-id191 . -4) (undo-tree-id192 . -4) 4304) nil (25884 9271 418624 351000) 0 nil])
([nil nil ((4292 . 4295) (#(" " 0 1 (ws-butler-chg chg fontified t)) . 4292) (undo-tree-id190 . -1) 4293) nil (25884 9271 418621 317000) 0 nil])
([nil nil ((4301 . 4306)) nil (25884 9271 418619 385000) 0 nil])
([nil nil ((4306 . 4312)) nil (25884 9271 418618 565000) 0 nil])
([nil nil ((4312 . 4313)) nil (25884 9271 418617 715000) 0 nil])
([nil nil ((4317 . 4318) (nil syntax-table nil 4317 . 4318) (nil syntax-table (1) 4313 . 4314) (4316 . 4317) (nil syntax-table nil 4316 . 4317) (nil syntax-table (1) 4313 . 4314) (4315 . 4316) (nil syntax-table nil 4315 . 4316) (nil syntax-table (1) 4313 . 4314) (4314 . 4315) (nil syntax-table nil 4314 . 4315) (nil syntax-table (1) 4313 . 4314) (4313 . 4314)) nil (25884 9271 418616 405000) 0 nil])
([nil nil ((4318 . 4319) (nil syntax-table nil 4318 . 4319) (nil syntax-table (1) 4313 . 4314) (4314 . 4318) (#("else" 0 4 (fontified nil ws-butler-chg chg)) . -4314) (nil syntax-table nil 4318 . 4319) (nil syntax-table (1) 4313 . 4314) (#("ELSE" 0 1 (fontified nil ws-butler-chg chg face font-lock-string-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-string-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-string-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-string-face)) . 4318) (undo-tree-id188 . -1) (undo-tree-id189 . -4) (nil syntax-table nil 4322 . 4323) (nil syntax-table (1) 4313 . 4314) (4314 . 4318) (nil syntax-table nil 4318 . 4319) (nil syntax-table (1) 4313 . 4314)) nil (25884 9271 418612 836000) 0 nil])
([nil nil ((4319 . 4320)) nil (25884 9271 418606 55000) 0 nil])
([nil nil ((4320 . 4321)) nil (25884 9271 418603 781000) 0 nil])
([nil nil ((4321 . 4326)) nil (25884 9271 418601 238000) 0 nil])
([nil nil ((4322 . 4324) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 4322) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (4326 . 4327)) nil (25884 9271 418593 717000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3519) (#("/" 0 1 (fontified t ws-butler-chg delete)) . 3519) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t)) . 3519) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (t 25884 9271 428534 674000)) nil (25884 9308 15944 520000) 0 nil])
([nil nil ((3519 . 3521)) nil (25884 9308 15941 626000) 0 nil])
([nil nil ((3521 . 3522)) nil (25884 9308 15940 838000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t c-is-sws t ws-butler-chg delete)) . 3556) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (#("/" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face)) . 3556) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1)) nil (25884 9308 15939 137000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t ws-butler-chg delete)) . 3574) (#("/" 0 1 (c-in-sws t fontified t c-is-sws t face font-lock-comment-delimiter-face)) . 3574)) nil (25884 9308 15925 886000) 0 nil])
([nil nil ((3572 . 3576) (#("  " 0 1 (c-in-sws t fontified t c-is-sws t) 1 2 (fontified t)) . -3572) (undo-tree-id371 . -2) (undo-tree-id372 . -2) (undo-tree-id373 . -2) (undo-tree-id374 . -2) (undo-tree-id375 . -2) (undo-tree-id376 . -2) (undo-tree-id377 . -2) (undo-tree-id378 . -2) (undo-tree-id379 . -2) (undo-tree-id380 . -2) (undo-tree-id381 . -2) (undo-tree-id382 . -2) (undo-tree-id383 . -2) (undo-tree-id384 . -2) (undo-tree-id385 . -2) (undo-tree-id386 . -2) (undo-tree-id387 . -2) (undo-tree-id388 . -2) (undo-tree-id389 . -2) (undo-tree-id390 . -2) (undo-tree-id391 . -2) (undo-tree-id392 . -2) (undo-tree-id393 . -2) (undo-tree-id394 . -2) (undo-tree-id395 . -2) (undo-tree-id396 . -2) (undo-tree-id397 . -2) (undo-tree-id398 . -2) (undo-tree-id399 . -2) (undo-tree-id400 . -2) (undo-tree-id401 . -2) (undo-tree-id402 . -2) (undo-tree-id403 . -2) (undo-tree-id404 . -2) 3574) nil (25884 9308 15923 286000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -3595) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (#("/" 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -3596) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) 3597) nil (25884 9308 15893 40000) 0 nil])
([nil nil ((3593 . 3597) (#("  " 0 1 (c-in-sws t fontified t) 1 2 (c-in-sws t fontified t)) . -3593) (undo-tree-id248 . -2) (undo-tree-id249 . -2) (undo-tree-id250 . -2) (undo-tree-id251 . -2) (undo-tree-id252 . -2) (undo-tree-id253 . -2) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (undo-tree-id258 . -2) (undo-tree-id259 . -2) (undo-tree-id260 . -2) (undo-tree-id261 . -2) (undo-tree-id262 . -2) (undo-tree-id263 . -2) (undo-tree-id264 . -2) (undo-tree-id265 . -2) (undo-tree-id266 . -2) (undo-tree-id267 . -2) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (undo-tree-id270 . -2) (undo-tree-id271 . -2) (undo-tree-id272 . -2) (undo-tree-id273 . -2) (undo-tree-id274 . -2) (undo-tree-id275 . -2) (undo-tree-id276 . -2) (undo-tree-id277 . -2) (undo-tree-id278 . -2) (undo-tree-id279 . -2) (undo-tree-id280 . -2) (undo-tree-id281 . -2) (undo-tree-id282 . -2) (undo-tree-id283 . -2) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) (undo-tree-id289 . -2) (undo-tree-id290 . -2) (undo-tree-id291 . -2) (undo-tree-id292 . -2) (undo-tree-id293 . -2) (undo-tree-id294 . -2) (undo-tree-id295 . -2) (undo-tree-id296 . -2) (undo-tree-id297 . -2) (undo-tree-id298 . -2) (undo-tree-id299 . -2) (undo-tree-id300 . -2) (undo-tree-id301 . -2) (undo-tree-id302 . -2) (undo-tree-id303 . -2) (undo-tree-id304 . -2) 3595) nil (25884 9308 15811 415000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -3609) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (#("/" 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -3610) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) 3611) nil (25884 9308 15757 1000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . 3725) (undo-tree-id425 . 1) (t 25884 9308 24464 748000)) nil (25884 12341 980752 692000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3725) (undo-tree-id424 . 1)) nil (25884 12341 980750 508000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3725) (undo-tree-id423 . 1)) nil (25884 12341 980748 233000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . 3765)) nil (25884 12341 980741 922000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3765)) nil (25884 12347 403650 433000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3765) (undo-tree-id432 . -1) (undo-tree-id433 . -1)) nil (25884 12354 275596 478000) 0 nil] [nil nil ((#("	" 0 1 (fontified t)) . 3767)) ((nil ws-butler-chg delete 3768 . 3769) (3767 . 3768)) (25884 12341 980735 718000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . 3953) (undo-tree-id430 . -1) (undo-tree-id431 . -1)) nil (25884 12354 275591 288000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3953) (undo-tree-id428 . -1) (undo-tree-id429 . -1)) nil (25884 12873 120154 447000) 0 nil])
([nil nil ((3554 . 3556) (3554 . 3556)) nil (25884 12891 82630 584000) 0 nil] [nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3953) (undo-tree-id427 . -1)) ((3953 . 3954) (t 25884 12354 286737 459000)) (25884 12858 577360 551000) 0 nil])
([nil nil ((3576 . 3578) (3576 . 3578)) nil (25884 12891 82629 571000) 0 nil])
([nil nil ((apply -24 3556 3634 undo--wrap-and-run-primitive-undo 3556 3634 (("  " . 3556) (3633 . 3636) (3629 . 3632) (3623 . 3626) (3609 . 3612) (3603 . 3606) (3582 . 3585) (3576 . 3579) (3556 . 3561))) (t 25884 12354 286737 459000)) ((apply 24 3556 3610 undo--wrap-and-run-primitive-undo 3556 3610 ((#("  /* " 2 3 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face c-is-sws t) 3 5 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3556) (#(" */" 0 3 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3576) (#("/* " 0 3 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3582) (#(" */" 0 3 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3603) (#("/* " 0 3 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3609) (#(" */" 0 3 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3623) (#("/* " 0 3 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3629) (#<marker at 4792 in Homework.c<Lab-5>> . -3) (#<marker at 4113 in Homework.c<Lab-5>> . -3) (#(" */" 0 3 (c-in-sws t fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3633) (#<marker (moves after insertion) at 4114 in Homework.c<Lab-5>> . 3) (3556 . 3558)))) (25884 12845 640982 829000) 0 nil] [nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 3609) (t 25884 12354 286737 459000)) ((nil ws-butler-chg delete 3610 . 3611) (3609 . 3610)) (25884 12819 695321 0) 0 nil])
([nil nil ((3601 . 3603) (3601 . 3603)) nil (25884 12891 82628 401000) 0 nil])
nil
nil
([nil nil ((3619 . 3621) (3619 . 3621)) nil (25884 12891 82626 838000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 3969) 3623) nil (25884 12891 82621 841000) 0 nil])
([nil nil ((4317 . 4322) (#("else" 0 4 (fontified nil ws-butler-chg chg)) . -4317) (#("ELSE" 0 4 (fontified nil face font-lock-string-face)) . 4321) (undo-tree-id448 . -4) (undo-tree-id449 . -3) (undo-tree-id450 . -3) (4317 . 4321) 4321 (t 25884 12891 93772 829000)) nil (25884 12919 977055 43000) 0 nil])
([nil nil ((4322 . 4323) (nil syntax-table nil 4325 . 4326) (nil syntax-table (1) 4316 . 4317)) nil (25884 12919 977045 931000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4322) (undo-tree-id446 . -1) (undo-tree-id447 . -1) 4323) nil (25884 12919 977042 812000) 0 nil])
([nil nil ((4322 . 4324) (nil syntax-table nil 4325 . 4326) (nil syntax-table (1) 4316 . 4317)) nil (25884 12919 977035 934000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4323) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) 4324) nil (25884 12919 977027 610000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . 2852) (undo-tree-id482 . -4) 2856 (2851 . 2856) (2850 . 2851) (2849 . 2850) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 2850) (undo-tree-id483 . -4) (undo-tree-id484 . -4) 2854 (2849 . 2854) (2847 . 2849) (2842 . 2847) (2841 . 2842) (2837 . 2841) (2836 . 2837) (2827 . 2829) 2834 (2825 . 2826) (2824 . 2825) (#(")" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-unmatched-face))) . -2824) (undo-tree-id485 . -1) 2825 (2823 . 2824) (2815 . 2823) (2814 . 2815) (2804 . 2814) (2812 . 2813) (2811 . 2812) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -2811) (2811 . 2813) (#("while" 0 1 (fontified nil ws-butler-chg delete face font-lock-keyword-face) 1 5 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 2811) (undo-tree-id486 . -5) (undo-tree-id487 . -5) (2806 . 2811) 2811 (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2811) (undo-tree-id488 . -1) 2812 (2811 . 2812) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -2811) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 2806) (2813 . 2815) (#("while" 0 1 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1 2 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 4 5 (ws-butler-chg chg fontified nil face font-lock-keyword-face)) . 2813) (undo-tree-id489 . -2) (undo-tree-id490 . -5) (2808 . 2813) 2813 (2808 . 2813) (2805 . 2808) (2804 . 2805) (2803 . 2804) (2790 . 2803) (2788 . 2790) (t 25884 12919 989719 869000)) nil (25884 13165 579804 885000) 0 nil])
([nil nil ((3226 . 3228) (3212 . 3216) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3212) (3206 . 3210) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3206) (3198 . 3204) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 3198) (3174 . 3182) (#("      " 0 6 (ws-butler-chg chg fontified nil)) . 3174) (3146 . 3154) (#("      " 0 6 (ws-butler-chg chg fontified nil)) . 3146) (3124 . 3132) (#("      " 0 6 (ws-butler-chg chg fontified nil)) . 3124) (3066 . 3072) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 3066) (3041 . 3045) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3041) (3035 . 3039) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3035) (3027 . 3033) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 3027) (3003 . 3011) (#("      " 0 6 (ws-butler-chg chg fontified nil)) . 3003) (2980 . 2988) (#("      " 0 6 (ws-butler-chg chg fontified nil)) . 2980) (2952 . 2960) (#("      " 0 6 (ws-butler-chg chg fontified nil)) . 2952) (2930 . 2938) (#("      " 0 6 (ws-butler-chg chg fontified nil)) . 2930) (2872 . 2878) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 2872) (2852 . 2856) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 2852) (nil rear-nonsticky nil 3195 . 3196) (nil fontified nil 3195 . 3196) (nil fontified nil 3194 . 3195) (nil fontified nil 3190 . 3194) (nil fontified nil 3184 . 3190) (nil fontified nil 3181 . 3184) (nil fontified nil 3180 . 3181) (nil fontified nil 3177 . 3180) (nil fontified nil 3176 . 3177) (nil fontified nil 3170 . 3176) (nil fontified nil 3169 . 3170) (nil fontified nil 3163 . 3169) (nil fontified nil 3162 . 3163) (nil fontified nil 3148 . 3162) (nil fontified nil 3147 . 3148) (nil fontified nil 3141 . 3147) (nil fontified nil 3137 . 3141) (nil fontified nil 3136 . 3137) (nil fontified nil 3122 . 3136) (nil fontified nil 3121 . 3122) (nil fontified nil 3117 . 3121) (nil fontified nil 3116 . 3117) (nil fontified nil 3103 . 3116) (nil fontified nil 3102 . 3103) (nil fontified nil 3101 . 3102) (nil fontified nil 3100 . 3101) (nil fontified nil 3094 . 3100) (nil fontified nil 3093 . 3094) (nil fontified nil 3092 . 3093) (nil fontified nil 3075 . 3092) (nil fontified nil 3074 . 3075) (nil fontified nil 3060 . 3074) (nil fontified nil 3059 . 3060) (nil fontified nil 3058 . 3059) (nil fontified nil 3057 . 3058) (nil fontified nil 3052 . 3057) (nil fontified nil 3047 . 3052) (nil fontified nil 3046 . 3047) (nil fontified nil 3045 . 3046) (nil fontified nil 3044 . 3045) (nil fontified nil 3036 . 3044) (nil fontified nil 3035 . 3036) (nil fontified nil 3034 . 3035) (nil fontified nil 3032 . 3034) (nil fontified nil 3031 . 3032) (nil fontified nil 3027 . 3031) (nil fontified nil 3024 . 3027) (nil fontified nil 3023 . 3024) (nil fontified nil 3020 . 3023) (nil fontified nil 3019 . 3020) (nil fontified nil 3013 . 3019) (nil fontified nil 3012 . 3013) (nil fontified nil 3006 . 3012) (nil fontified nil 3005 . 3006) (nil fontified nil 2991 . 3005) (nil fontified nil 2990 . 2991) (nil fontified nil 2986 . 2990) (nil fontified nil 2985 . 2986) (nil fontified nil 2970 . 2985) (nil fontified nil 2969 . 2970) (nil fontified nil 2963 . 2969) (nil fontified nil 2959 . 2963) (nil fontified nil 2958 . 2959) (nil fontified nil 2944 . 2958) (nil fontified nil 2943 . 2944) (nil fontified nil 2939 . 2943) (nil fontified nil 2938 . 2939) (nil fontified nil 2925 . 2938) (nil fontified nil 2924 . 2925) (nil fontified nil 2923 . 2924) (nil fontified nil 2922 . 2923) (nil fontified nil 2916 . 2922) (nil fontified nil 2915 . 2916) (nil fontified nil 2914 . 2915) (nil fontified nil 2897 . 2914) (nil fontified nil 2896 . 2897) (nil fontified nil 2882 . 2896) (nil fontified nil 2881 . 2882) (nil fontified nil 2880 . 2881) (nil fontified nil 2879 . 2880) (nil fontified nil 2874 . 2879) (nil fontified nil 2869 . 2874) (nil fontified nil 2868 . 2869) (nil fontified nil 2867 . 2868) (nil fontified nil 2866 . 2867) (nil fontified nil 2858 . 2866) (nil fontified nil 2857 . 2858) (nil fontified nil 2856 . 2857) (nil fontified nil 2854 . 2856) (nil fontified nil 2852 . 2854) (2852 . 3196)) nil (25884 13165 579783 291000) 0 nil])
([nil nil ((#("    return 0;
" 0 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg delete fontified t face font-lock-keyword-face) 5 10 (ws-butler-chg chg fontified t face font-lock-keyword-face) 10 14 (ws-butler-chg chg fontified t)) . 3212) (undo-tree-id480 . -13) (undo-tree-id481 . -4) 3216) nil (25884 13165 579761 545000) 0 nil])
([nil nil ((#("  }
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 3 4 (ws-butler-chg chg rear-nonsticky t fontified t)) . 3212) (undo-tree-id478 . -3) (undo-tree-id479 . -2) 3214) nil (25884 13165 579758 975000) 0 nil])
([nil nil ((3211 . 3216)) nil (25884 13165 579756 35000) 0 nil])
([nil nil ((3212 . 3214) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 3212) (undo-tree-id461 . -4) (undo-tree-id462 . -4) (undo-tree-id463 . -4) (undo-tree-id464 . -4) (undo-tree-id465 . -4) (undo-tree-id466 . -4) (undo-tree-id467 . -4) (undo-tree-id468 . -4) (undo-tree-id469 . -4) (undo-tree-id470 . -4) (undo-tree-id471 . -4) (undo-tree-id472 . -4) (undo-tree-id473 . -4) (undo-tree-id474 . -4) (undo-tree-id475 . -4) (undo-tree-id476 . -4) (undo-tree-id477 . -4) (3216 . 3217)) nil (25884 13165 579754 177000) 0 nil])
([nil nil ((3215 . 3218)) nil (25884 13165 579739 846000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3216) (undo-tree-id451 . -2) (undo-tree-id452 . -2) (undo-tree-id453 . -2) (undo-tree-id454 . -2) (undo-tree-id455 . -2) (undo-tree-id456 . -2) (undo-tree-id457 . -2) (undo-tree-id458 . -2) (undo-tree-id459 . -2) (undo-tree-id460 . -2) (3218 . 3219)) nil (25884 13165 579735 824000) 0 nil])
([nil nil ((4757 . 4762) (t 25884 13165 593267 309000)) nil (25884 13198 913409 497000) 0 nil])
([nil nil ((4762 . 4767)) nil (25884 13198 913406 836000) 0 nil])
([nil nil ((4762 . 4771) (#("stdin" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -4762) (undo-tree-id499 . -3) (undo-tree-id500 . -5) (undo-tree-id501 . -5) 4767) nil (25884 13198 913405 160000) 0 nil])
([nil nil ((4771 . 4772)) nil (25884 13198 913394 879000) 0 nil])
([nil nil ((4772 . 4782)) nil (25884 13198 913392 317000) 0 nil])
([nil nil ((4772 . 4786) (#("opt_delay_" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg)) . -4772) (undo-tree-id497 . -10) (undo-tree-id498 . -10) 4782) nil (25884 13198 913390 989000) 0 nil])
([nil nil ((4786 . 4787)) nil (25884 13198 913388 218000) 0 nil])
([nil nil ((4787 . 4793)) nil (25884 13198 913387 106000) 0 nil])
([nil nil ((4793 . 4794)) nil (25884 13198 913386 204000) 0 nil])
([nil nil ((4788 . 4799) (#("opt_re" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg)) . -4788) (undo-tree-id494 . -2) (undo-tree-id495 . -6) (undo-tree-id496 . -6) 4794) nil (25884 13198 913384 878000) 0 nil])
([nil nil ((4799 . 4800)) nil (25884 13198 913380 749000) 0 nil])
([nil nil ((4800 . 4801)) nil (25884 13198 913379 813000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg)) . -4800) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) 4801) nil (25884 13198 913377 438000) 0 nil])
([nil nil ((4800 . 4801)) nil (25884 13198 913364 312000) 0 nil])
([nil nil ((2826 . 2829) (t 25884 13198 925205 614000)) nil (25884 13241 52784 971000) 0 nil])
([nil nil ((2829 . 2834)) nil (25884 13241 52781 271000) 0 nil])
([nil nil ((2834 . 2835)) nil (25884 13241 52778 833000) 0 nil])
([nil nil ((2835 . 2846)) nil (25884 13241 52777 719000) 0 nil])
([nil nil ((2846 . 2847)) nil (25884 13241 52776 563000) 0 nil])
([nil nil ((2847 . 2850)) nil (25884 13241 52775 539000) 0 nil])
([nil nil ((2850 . 2864)) nil (25884 13241 52774 376000) 0 nil])
([nil nil ((2864 . 2865)) nil (25884 13241 52772 549000) 0 nil])
([nil nil ((2865 . 2868)) nil (25884 13241 52771 251000) 0 nil])
([nil nil ((2868 . 2873)) nil (25884 13241 52768 481000) 0 nil])
([nil nil ((2868 . 2875) (#("ssize" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t)) . -2868) (undo-tree-id502 . -2) (undo-tree-id503 . -5) (undo-tree-id504 . -5) 2873) nil (25884 13241 52765 65000) 0 nil])
([nil nil ((2875 . 2880)) nil (25884 13241 52750 592000) 0 nil])
([nil nil ((2880 . 2881)) nil (25884 13241 52746 211000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -2969) (undo-tree-id509 . -1) (#("i" 0 1 (fontified t)) . -2970) (undo-tree-id510 . -1) (#("l" 0 1 (fontified t)) . -2971) (undo-tree-id511 . -1) (#("e" 0 1 (fontified t)) . -2972) (undo-tree-id512 . -1) 2973 (t 25884 13241 61127 549000)) nil (25884 13257 245705 850000) 0 nil])
([nil nil ((2969 . 2974)) nil (25884 13257 245701 11000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -3164) (undo-tree-id505 . -1) (#("i" 0 1 (fontified t)) . -3165) (undo-tree-id506 . -1) (#("l" 0 1 (fontified t)) . -3166) (undo-tree-id507 . -1) (#("e" 0 1 (fontified t)) . -3167) (undo-tree-id508 . -1) 3168) nil (25884 13257 245697 928000) 0 nil])
([nil nil ((3164 . 3169)) nil (25884 13257 245684 770000) 0 nil])
([nil nil ((#("printf(\"ELSE\\n\");" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-3-face)) 7 8 (fontified t face font-lock-string-face) 8 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face (rainbow-delimiters-depth-3-face)) 16 17 (fontified t)) . -4797) (undo-tree-id706 . -12) (undo-tree-id707 . -14) (undo-tree-id708 . -14) (undo-tree-id709 . -17) (undo-tree-id710 . -17) (undo-tree-id711 . -14) (undo-tree-id712 . -17) 4814 (t 25884 13257 261097 513000)) nil (25884 13304 262444 163000) 0 nil])
([nil nil ((4797 . 4798)) nil (25884 13304 262437 65000) 0 nil])
([nil current ((#("
" 0 1 (fontified t)) . -4792) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (#(" " 0 1 (fontified t)) . -4793) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (#(" " 0 1 (fontified t)) . -4794) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (#(" " 0 1 (fontified t)) . -4795) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (#(" " 0 1 (fontified t)) . -4796) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -4797) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) 4798) nil (25884 13304 262424 598000) 0 nil])
nil
