(undo-tree-save-format-version . 1)
"7f4c26194b6848176642f9fe22abc43aa62c6952"
[nil nil nil nil (25902 38484 26447 497000) 0 nil]
([nil nil ((nil rear-nonsticky nil 647 . 648) (nil fontified nil 1 . 648) (1 . 648) (t . -1)) nil (25902 38484 26446 241000) 0 nil])
([nil nil ((2103 . 2106) (nil syntax-table (1) 2103 . 2104) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-warning-face)) . -2103) (undo-tree-id93 . -1) (nil syntax-table (1) 2103 . 2104) (2104 . 2105) (nil syntax-table nil 2103 . 2104) (nil syntax-table (15) 2103 . 2104) (nil syntax-table (1) 2103 . 2104) (2103 . 2104) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-warning-face)) . -2103) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (nil syntax-table (1) 2103 . 2104) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2104) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (nil syntax-table nil 2103 . 2104) (nil syntax-table (15) 2103 . 2104) (nil syntax-table (1) 2103 . 2104) (2104 . 2105) (nil syntax-table nil 2103 . 2104) (nil syntax-table (15) 2103 . 2104) (nil syntax-table (1) 2103 . 2104) (2103 . 2104) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-warning-face)) . -2103) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (nil syntax-table (1) 2103 . 2104) (2103 . 2104) (2102 . 2103) (2096 . 2102) (2093 . 2096) (2090 . 2092) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 2090) (undo-tree-id100 . -4) (2094 . 2095) (2089 . 2094) (2088 . 2089) (2086 . 2088) (2076 . 2086) (#("rev_" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -2076) (undo-tree-id101 . -4) (undo-tree-id102 . -4) (undo-tree-id103 . -4) 2080 (2076 . 2080) (2071 . 2076) (2070 . 2071) (2069 . 2070) (2051 . 2069) (2050 . 2051) (2046 . 2047) (nil syntax-table (1) 2048 . 2049) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-warning-face)) . -2046) (undo-tree-id104 . -1) (nil syntax-table (1) 2046 . 2047) (2049 . 2050) (nil syntax-table nil 2046 . 2047) (nil syntax-table (15) 2046 . 2047) (nil syntax-table (1) 2046 . 2047) (2048 . 2049) (nil syntax-table nil 2046 . 2047) (nil syntax-table (15) 2046 . 2047) (nil syntax-table (1) 2046 . 2047) (2047 . 2048) (nil syntax-table nil 2046 . 2047) (nil syntax-table (15) 2046 . 2047) (nil syntax-table (1) 2046 . 2047) (2046 . 2047) (2045 . 2046) (2039 . 2045) (2034 . 2039) (2033 . 2034) (2032 . 2033) (2031 . 2032) (2027 . 2031) (2025 . 2027) (2015 . 2025) (#("rev_len" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg)) . -2015) (undo-tree-id105 . -7) (undo-tree-id106 . -7) (undo-tree-id107 . -7) 2022 (2015 . 2022) (2014 . 2015) (2013 . 2014) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -2013) (undo-tree-id108 . -2) (2013 . 2015) (#("while" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 4 5 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 2013) (undo-tree-id109 . -1) (undo-tree-id110 . -5) (undo-tree-id111 . -5) (2008 . 2013) 2013 (2008 . 2013) (2005 . 2008) (2004 . 2005) (2002 . 2004) (1983 . 2002) (1980 . 1983) (1977 . 1979) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 1977) (undo-tree-id112 . -4) (1981 . 1982) (1976 . 1981) (1975 . 1976) (1973 . 1975) (1967 . 1973) (1962 . 1967) (1961 . 1962) (1960 . 1961) (1959 . 1960) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1959) (undo-tree-id113 . -1) (undo-tree-id114 . -1) 1960 (1950 . 1960) (1938 . 1950) (1937 . 1938) (1936 . 1937) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -1936) (undo-tree-id115 . -2) (1936 . 1938) (#("while" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 4 5 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 1936) (undo-tree-id116 . -1) (undo-tree-id117 . -5) (undo-tree-id118 . -5) (1931 . 1936) 1936 (1931 . 1936) (1928 . 1931) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 1928) (undo-tree-id119 . -2) (undo-tree-id120 . -2) 1930 (1927 . 1930) (1926 . 1927) (1920 . 1926) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1920) (undo-tree-id121 . -1) (undo-tree-id122 . -1) 1921 (1912 . 1921) (1909 . 1912) (1908 . 1909) (1894 . 1908) (1891 . 1894) (1890 . 1891) (1889 . 1890) (1888 . 1889) (1882 . 1888) (1881 . 1882) (1875 . 1881) (1874 . 1875) (1863 . 1874) (1861 . 1863) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . 1860) (undo-tree-id123 . -2) (1862 . 1863) (1859 . 1862) (1856 . 1858) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 1856) (undo-tree-id124 . -4) (1860 . 1861) (1855 . 1860) (1854 . 1855) (1846 . 1854) (1841 . 1846) (1840 . 1841) (1839 . 1840) (1836 . 1839) (1806 . 1807) (nil syntax-table (1) 1830 . 1831) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-warning-face)) . -1806) (undo-tree-id125 . -1) (nil syntax-table (1) 1806 . 1807) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1836) (undo-tree-id126 . -1) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1837) (undo-tree-id127 . -1) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1838) (undo-tree-id128 . -1) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1838 . 1839) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1837 . 1838) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1836 . 1837) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1835 . 1836) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1834 . 1835) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1833 . 1834) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1832 . 1833) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1831 . 1832) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1830 . 1831) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1829 . 1830) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1828 . 1829) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1828) (undo-tree-id129 . -1) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (#("\\" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1829) (undo-tree-id130 . -1) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1830) (undo-tree-id131 . -1) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1830 . 1831) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1829 . 1830) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1828 . 1829) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1827 . 1828) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1826 . 1827) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1825 . 1826) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1824 . 1825) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1823 . 1824) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1822 . 1823) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1821 . 1822) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1820 . 1821) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1819 . 1820) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1818 . 1819) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1817 . 1818) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1816 . 1817) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1815 . 1816) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1814 . 1815) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1813 . 1814) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1812 . 1813) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1811 . 1812) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1810 . 1811) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1809 . 1810) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1808 . 1809) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1807 . 1808) (nil syntax-table nil 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil syntax-table (1) 1806 . 1807) (1806 . 1807) (1805 . 1806) (1799 . 1805) (1794 . 1799) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 1794) (undo-tree-id132 . -1) 1795 (1794 . 1795) (1793 . 1794) (1792 . 1793) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -1792) (1792 . 1794) (#("else" 0 1 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1 3 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified nil face font-lock-keyword-face)) . 1792) (undo-tree-id133 . -4) (undo-tree-id134 . -4) (undo-tree-id135 . -3) (1788 . 1792) 1792 (1788 . 1792) (1785 . 1788) (1782 . 1784) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 1782) (undo-tree-id136 . -4) (1786 . 1787) (1781 . 1786) (1780 . 1781) (1775 . 1780) (1772 . 1775) (1767 . 1772) (1750 . 1754) 1763 (1744 . 1745) (nil syntax-table nil 1748 . 1749) (nil syntax-table (1) 1742 . 1743) (1742 . 1743) (#("\"" 0 1 (ws-butler-chg chg fontified t face font-lock-warning-face)) . -1743) (undo-tree-id137 . -1) (nil syntax-table nil 1748 . 1749) (nil syntax-table (1) 1743 . 1744) (#("\"" 0 1 (ws-butler-chg chg fontified t face font-lock-warning-face)) . -1742) (undo-tree-id138 . -1) (nil syntax-table (1) 1742 . 1743) (1762 . 1763) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1761 . 1762) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1760 . 1761) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1759 . 1760) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1758 . 1759) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1757 . 1758) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1756 . 1757) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1750 . 1756) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (#("fclo" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face) 1 2 (ws-butler-chg chg fontified t face font-lock-string-face) 2 3 (ws-butler-chg chg fontified t face font-lock-string-face) 3 4 (ws-butler-chg chg fontified t face font-lock-string-face)) . -1750) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -1) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1753 . 1754) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1752 . 1753) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1751 . 1752) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1750 . 1751) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1749 . 1750) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1748 . 1749) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1747 . 1748) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1746 . 1747) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1745 . 1746) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1744 . 1745) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1743 . 1744) (nil syntax-table nil 1742 . 1743) (nil syntax-table (15) 1742 . 1743) (nil syntax-table (1) 1742 . 1743) (1741 . 1743) (1740 . 1741) (1735 . 1740) (1734 . 1735) (1731 . 1734) (1722 . 1731) (1721 . 1722) (1718 . 1721) (1715 . 1718) (1714 . 1715) (1710 . 1714) (1709 . 1710) (1705 . 1709) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -1705) (undo-tree-id142 . -1) 1706 (1704 . 1706) (1701 . 1704) (1700 . 1701) (1699 . 1700) (1698 . 1699) (1697 . 1698) (#(")" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-1-face))) . -1697) (undo-tree-id143 . -1) 1698 (1697 . 1698) (1692 . 1697) (1691 . 1692) (1685 . 1691) (1684 . 1685) (1674 . 1684) (1673 . 1674) (1657 . 1673) (1636 . 1657) (1635 . 1636) (1624 . 1635) (1603 . 1624) (1596 . 1603) (1575 . 1596) (1573 . 1575) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -1573) (undo-tree-id144 . -1) 1574 (1573 . 1574) (1571 . 1573) (1562 . 1571) (#("stdl" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face) 1 2 (fontified t ws-butler-chg chg face font-lock-string-face) 2 3 (fontified t ws-butler-chg chg face font-lock-string-face) 3 4 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1562) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) 1566 (1560 . 1566) (1553 . 1560) (1552 . 1553) (1551 . 1552) (1542 . 1551) (#("unist" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face) 1 2 (fontified t ws-butler-chg chg face font-lock-string-face) 2 3 (fontified t ws-butler-chg chg face font-lock-string-face) 3 4 (fontified t ws-butler-chg chg face font-lock-string-face) 4 5 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1542) (undo-tree-id148 . -5) (undo-tree-id149 . -5) (undo-tree-id150 . -5) 1547 (1533 . 1547) (1532 . 1533) (1531 . 1532) (1524 . 1531) (#("math" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face) 1 2 (fontified t ws-butler-chg chg face font-lock-string-face) 2 3 (fontified t ws-butler-chg chg face font-lock-string-face) 3 4 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1524) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -3) (undo-tree-id154 . -4) 1528 (1526 . 1528) (1515 . 1526) (1514 . 1515) (1513 . 1514) (1504 . 1513) (#("getop" 0 3 (fontified t ws-butler-chg chg face font-lock-string-face) 3 4 (fontified t ws-butler-chg chg face font-lock-string-face) 4 5 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1504) (undo-tree-id155 . -5) (undo-tree-id156 . -5) (undo-tree-id157 . -5) 1509 (1507 . 1509) (#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1507) (undo-tree-id158 . -1) (undo-tree-id159 . -1) 1508 (1504 . 1508) (#("get" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face) 1 2 (fontified t ws-butler-chg chg face font-lock-string-face) 2 3 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1504) (undo-tree-id160 . -3) (undo-tree-id161 . -3) (undo-tree-id162 . -3) 1507 (1497 . 1507) (1495 . 1497) (1494 . 1495) (1493 . 1494) (1485 . 1493) (#("stdio" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face) 1 2 (ws-butler-chg chg fontified t face font-lock-string-face) 2 3 (ws-butler-chg chg fontified t face font-lock-string-face) 3 4 (ws-butler-chg chg fontified t face font-lock-string-face) 4 5 (ws-butler-chg chg fontified t face font-lock-string-face)) . -1485) (undo-tree-id163 . -5) (undo-tree-id164 . -5) (undo-tree-id165 . -4) (undo-tree-id166 . -5) 1490 (1476 . 1490) (1475 . 1476) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -1475) (undo-tree-id167 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -1476) (undo-tree-id168 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t)) . -1477) (undo-tree-id169 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -1478) (undo-tree-id170 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -1479) (undo-tree-id171 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t)) . -1480) (undo-tree-id172 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -1481) (undo-tree-id173 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1482) (undo-tree-id174 . -1) 1483 (1475 . 1483) (1474 . 1475) (#(" " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1470) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) 1471 (1367 . 1369) (1362 . 1367) (1361 . 1362) (1358 . 1361) (1357 . 1358) (1352 . 1357) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1352) (undo-tree-id178 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1353) (undo-tree-id179 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1354) (undo-tree-id180 . -1) 1355 (1341 . 1355) (1337 . 1341) (1335 . 1337) (1316 . 1335) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1316) (undo-tree-id181 . -1) (undo-tree-id182 . -1) 1317 (1303 . 1317) (1293 . 1303) (1291 . 1293) (1289 . 1291) (1268 . 1289) (1247 . 1268) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1247) (undo-tree-id183 . -1) 1248 (1236 . 1248) (1235 . 1236) (1234 . 1235) (1229 . 1234) (#("d" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1229) (undo-tree-id184 . -1) 1230 (1220 . 1230) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1220) (undo-tree-id185 . -1) 1221 (1205 . 1221) (1184 . 1199) (1181 . 1190) (1160 . 1181) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -1160) (undo-tree-id186 . -1) 1161 (1153 . 1161) (1140 . 1153) (1139 . 1140) (1124 . 1139) (1103 . 1124) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1103) (undo-tree-id187 . -1) 1104 (1085 . 1104) (1064 . 1085) (#("D" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1064) (undo-tree-id188 . -1) (undo-tree-id189 . -1) 1065 (1061 . 1065) (1059 . 1061) (1058 . 1059) (1051 . 1058) (1049 . 1051) (1048 . 1049) (1032 . 1048) (1011 . 1032) (1010 . 1011) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -938) (undo-tree-id190 . -1) 939 (924 . 939) (995 . 996) (989 . 995) (968 . 989) (967 . 968) (966 . 967) (947 . 966) (946 . 947) (928 . 946) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -928) (undo-tree-id191 . -1) 929 (913 . 929) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -913) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -914) (undo-tree-id194 . -1) (undo-tree-id195 . -1) 915 (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -915) (undo-tree-id196 . -1) (undo-tree-id197 . -1) 916 (910 . 916) (909 . 910) (#("," 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -909) (undo-tree-id198 . -1) 910 (909 . 910) (899 . 909) (898 . 899) (886 . 898) (865 . 886) (855 . 865) (854 . 855) (846 . 854) (825 . 846) (804 . 825) (801 . 804) (799 . 801) (791 . 799) (#("N" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -791) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#("O" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -792) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) 793 (791 . 793) (789 . 791) (788 . 789) (772 . 788) (759 . 772) (738 . 759) (717 . 738) (716 . 717) (711 . 716) (707 . 711) (686 . 707) (665 . 686) (#("Homework" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 1 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 2 3 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 3 4 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 4 5 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 5 6 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 6 7 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 7 8 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -665) (undo-tree-id205 . -8) (undo-tree-id206 . -8) (undo-tree-id207 . -2) 673 (656 . 673) (655 . 656) (654 . 655) (650 . 654) (649 . 651) (747 . 750) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -747) (undo-tree-id208 . -1) 748 (737 . 748) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -737) (undo-tree-id209 . -1) (undo-tree-id210 . -1) 738 (729 . 738) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -729) (undo-tree-id211 . -1) (undo-tree-id212 . -1) 730 (724 . 730) (714 . 724) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -714) (undo-tree-id213 . -1) 715 (700 . 715) (#("
" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -700) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (#("U" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -701) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -702) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) 703 (701 . 703) (700 . 701) (699 . 700) (698 . 699) (695 . 698) (694 . 695) (681 . 694) (680 . 681) (677 . 680) (676 . 677) (657 . 676) (656 . 657) (655 . 656) (650 . 655) (649 . 651) (651 . 652) (650 . 651) (2 . 3) (1 . 2)) nil (25902 38484 26408 218000) 0 nil])
([nil nil ((2107 . 2108)) nil (25902 38484 26108 946000) 0 nil])
([nil nil ((2108 . 2124)) nil (25902 38484 26108 242000) 0 nil])
([nil nil ((2124 . 2125)) nil (25902 38484 26107 561000) 0 nil])
([nil nil ((2125 . 2126)) nil (25902 38484 26106 882000) 0 nil])
([nil nil ((2126 . 2129)) nil (25902 38484 26106 204000) 0 nil])
([nil nil ((2129 . 2135)) nil (25902 38484 26105 532000) 0 nil])
([nil nil ((2135 . 2137)) nil (25902 38484 26104 932000) 0 nil])
([nil nil ((2137 . 2138)) nil (25902 38484 26104 245000) 0 nil])
([nil nil ((2138 . 2141)) nil (25902 38484 26103 576000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil ws-butler-chg chg)) . 2139) (undo-tree-id92 . -2) (2141 . 2142)) nil (25902 38484 26102 790000) 0 nil])
([nil nil ((2140 . 2142)) nil (25902 38484 26101 158000) 0 nil])
([nil nil ((1862 . 1863)) nil (25902 38484 26100 412000) 0 nil])
([nil nil ((1863 . 1865)) nil (25902 38484 26099 608000) 0 nil])
([nil nil ((1865 . 1866)) nil (25902 38484 26098 920000) 0 nil])
([nil nil ((1866 . 1885)) nil (25902 38484 26098 112000) 0 nil])
([nil nil ((2165 . 2167)) nil (25902 38484 26097 418000) 0 nil])
([nil nil ((2167 . 2173)) nil (25902 38484 26096 676000) 0 nil])
([nil nil ((2173 . 2194)) nil (25902 38484 26095 864000) 0 nil])
([nil nil ((2194 . 2198)) nil (25902 38484 26094 932000) 0 nil])
([nil nil ((2198 . 2199)) nil (25902 38484 26094 182000) 0 nil])
([nil nil ((2199 . 2207)) nil (25902 38484 26092 993000) 0 nil])
([nil nil ((2207 . 2208)) nil (25902 38484 26092 330000) 0 nil])
([nil nil ((2208 . 2220)) nil (25902 38484 26091 436000) 0 nil])
([nil nil ((2220 . 2221)) nil (25902 38484 26090 708000) 0 nil])
([nil nil ((2221 . 2227)) nil (25902 38484 26090 48000) 0 nil])
([nil nil ((2227 . 2228)) nil (25902 38484 26089 360000) 0 nil])
([nil nil ((2228 . 2233)) nil (25902 38484 26088 691000) 0 nil])
([nil nil ((2233 . 2234)) nil (25902 38484 26087 965000) 0 nil])
([nil nil ((2234 . 2241)) nil (25902 38484 26087 285000) 0 nil])
([nil nil ((2241 . 2245)) nil (25902 38484 26086 605000) 0 nil])
([nil nil ((2245 . 2246)) nil (25902 38484 26085 933000) 0 nil])
([nil nil ((2246 . 2255)) nil (25902 38484 26085 213000) 0 nil])
([nil nil ((2255 . 2256)) nil (25902 38484 26084 456000) 0 nil])
([nil nil ((2256 . 2257)) nil (25902 38484 26083 746000) 0 nil])
([nil nil ((2257 . 2258)) nil (25902 38484 26083 72000) 0 nil])
([nil nil ((2258 . 2261)) nil (25902 38484 26082 378000) 0 nil])
([nil nil ((2261 . 2266)) nil (25902 38484 26081 623000) 0 nil])
([nil nil ((2266 . 2267)) nil (25902 38484 26080 930000) 0 nil])
([nil nil ((2267 . 2271)) nil (25902 38484 26080 198000) 0 nil])
([nil nil ((2271 . 2272)) nil (25902 38484 26079 438000) 0 nil])
([nil nil ((2272 . 2275)) nil (25902 38484 26078 721000) 0 nil])
([nil nil ((2275 . 2279)) nil (25902 38484 26078 24000) 0 nil])
([nil nil ((2279 . 2280)) nil (25902 38484 26077 251000) 0 nil])
([nil nil ((2280 . 2281)) nil (25902 38484 26076 574000) 0 nil])
([nil nil ((2281 . 2292)) nil (25902 38484 26075 908000) 0 nil])
([nil nil ((2292 . 2293)) nil (25902 38484 26075 225000) 0 nil])
([nil nil ((2293 . 2296)) nil (25902 38484 26074 544000) 0 nil])
([nil nil ((2296 . 2302)) nil (25902 38484 26073 867000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t)) . -2301) (undo-tree-id90 . -1) (undo-tree-id91 . -1) 2302) nil (25902 38484 26073 1000) 0 nil])
([nil nil ((2301 . 2310)) nil (25902 38484 26070 724000) 0 nil])
([nil nil ((2310 . 2311)) nil (25902 38484 26069 937000) 0 nil])
([nil nil ((2311 . 2314)) nil (25902 38484 26069 204000) 0 nil])
([nil nil ((2314 . 2326)) nil (25902 38484 26068 513000) 0 nil])
([nil nil ((2326 . 2327)) nil (25902 38484 26067 797000) 0 nil])
([nil nil ((2327 . 2330)) nil (25902 38484 26067 107000) 0 nil])
([nil nil ((2330 . 2340)) nil (25902 38484 26066 388000) 0 nil])
([nil nil ((2340 . 2344)) nil (25902 38484 26065 694000) 0 nil])
([nil nil ((2344 . 2345)) nil (25902 38484 26064 969000) 0 nil])
([nil nil ((2345 . 2348)) nil (25902 38484 26064 335000) 0 nil])
([nil nil ((2348 . 2364)) nil (25902 38484 26063 638000) 0 nil])
([nil nil ((2364 . 2365)) nil (25902 38484 26062 952000) 0 nil])
([nil nil ((2365 . 2368)) nil (25902 38484 26062 305000) 0 nil])
([nil nil ((2368 . 2369)) nil (25902 38484 26061 567000) 0 nil])
([nil nil ((2369 . 2373)) nil (25902 38484 26060 857000) 0 nil])
([nil nil ((2373 . 2374)) nil (25902 38484 26060 219000) 0 nil])
([nil nil ((2374 . 2381)) nil (25902 38484 26059 535000) 0 nil])
([nil nil ((2381 . 2382)) nil (25902 38484 26058 901000) 0 nil])
([nil nil ((2382 . 2385)) nil (25902 38484 26058 298000) 0 nil])
([nil nil ((2383 . 2386) (#("  " 0 2 (ws-butler-chg chg fontified t)) . 2383) (undo-tree-id88 . -2) (undo-tree-id89 . -2) 2385) nil (25902 38484 26057 370000) 0 nil])
([nil nil ((2386 . 2388)) nil (25902 38484 26054 929000) 0 nil])
([nil nil ((2388 . 2389)) nil (25902 38484 26054 5000) 0 nil])
([nil nil ((2389 . 2400)) nil (25902 38484 26053 332000) 0 nil])
([nil nil ((2400 . 2401)) nil (25902 38484 26052 687000) 0 nil])
([nil nil ((2401 . 2402)) nil (25902 38484 26051 918000) 0 nil])
([nil nil ((2402 . 2407)) nil (25902 38484 26051 145000) 0 nil])
([nil nil ((2407 . 2408)) nil (25902 38484 26050 450000) 0 nil])
([nil nil ((2408 . 2419)) nil (25902 38484 26049 764000) 0 nil])
([nil nil ((2419 . 2420)) nil (25902 38484 26049 165000) 0 nil])
([nil nil ((2420 . 2425)) nil (25902 38484 26048 520000) 0 nil])
([nil nil ((2425 . 2436)) nil (25902 38484 26047 838000) 0 nil])
([nil nil ((2436 . 2437)) nil (25902 38484 26047 216000) 0 nil])
([nil nil ((2437 . 2438)) nil (25902 38484 26046 558000) 0 nil])
([nil nil ((2438 . 2439)) nil (25902 38484 26045 846000) 0 nil])
([nil nil ((2439 . 2440)) nil (25902 38484 26045 157000) 0 nil])
([nil nil ((#("r" 0 1 (ws-butler-chg chg fontified t)) . -2439) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 2440) nil (25902 38484 26044 214000) 0 nil])
([nil nil ((2441 . 2442) (nil syntax-table (1) 2439 . 2440) (2440 . 2441) (nil syntax-table (1) 2439 . 2440) (2439 . 2440)) nil (25902 38484 26041 43000) 0 nil])
([nil nil ((2442 . 2443)) nil (25902 38484 26039 426000) 0 nil])
([nil nil ((2443 . 2444)) nil (25902 38484 26038 726000) 0 nil])
([nil nil ((2444 . 2449)) nil (25902 38484 26038 10000) 0 nil])
([nil nil ((2445 . 2447) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 2445) (undo-tree-id84 . -4) (2449 . 2450)) nil (25902 38484 26037 31000) 0 nil])
([nil nil ((2448 . 2451)) nil (25902 38484 26035 231000) 0 nil])
([nil nil ((2451 . 2455)) nil (25902 38484 26034 523000) 0 nil])
([nil nil ((2455 . 2456) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -2455) (undo-tree-id79 . -2) (2455 . 2457) (#("else" 0 1 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1 2 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified nil face font-lock-keyword-face)) . 2455) (undo-tree-id80 . -4) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (undo-tree-id83 . -4) (2451 . 2455) 2455) nil (25902 38484 26033 245000) 0 nil])
([nil nil ((2456 . 2461)) nil (25902 38484 26028 240000) 0 nil])
([nil nil ((2461 . 2473)) nil (25902 38484 26027 551000) 0 nil])
([nil nil ((2473 . 2474)) nil (25902 38484 26026 851000) 0 nil])
([nil nil ((2474 . 2479)) nil (25902 38484 26026 114000) 0 nil])
([nil nil ((2479 . 2480)) nil (25902 38484 26025 407000) 0 nil])
([nil nil ((2483 . 2484) (nil syntax-table (1) 2481 . 2482) (2482 . 2483) (nil syntax-table (1) 2481 . 2482) (2480 . 2482)) nil (25902 38484 26024 568000) 0 nil])
([nil nil ((2484 . 2485)) nil (25902 38484 26023 169000) 0 nil])
([nil nil ((2485 . 2486)) nil (25902 38484 26022 479000) 0 nil])
([nil nil ((2486 . 2491)) nil (25902 38484 26021 787000) 0 nil])
([nil nil ((2491 . 2494)) nil (25902 38484 26021 54000) 0 nil])
([nil nil ((2494 . 2495)) nil (25902 38484 26020 382000) 0 nil])
([nil nil ((2495 . 2507)) nil (25902 38484 26019 687000) 0 nil])
([nil nil ((2507 . 2508)) nil (25902 38484 26018 994000) 0 nil])
([nil nil ((2508 . 2509)) nil (25902 38484 26018 295000) 0 nil])
([nil nil ((2509 . 2510)) nil (25902 38484 26017 602000) 0 nil])
([nil nil ((2510 . 2517)) nil (25902 38484 26016 982000) 0 nil])
([nil nil ((2517 . 2524)) nil (25902 38484 26016 267000) 0 nil])
([nil nil ((2524 . 2525)) nil (25902 38484 26015 586000) 0 nil])
([nil nil ((2525 . 2526)) nil (25902 38484 26014 889000) 0 nil])
([nil nil ((2526 . 2527)) nil (25902 38484 26014 142000) 0 nil])
([nil nil ((2402 . 2403)) nil (25902 38484 26013 470000) 0 nil])
([nil nil ((2403 . 2405)) nil (25902 38484 26012 781000) 0 nil])
([nil nil ((2405 . 2426)) nil (25902 38484 26012 111000) 0 nil])
([nil nil ((2426 . 2427)) nil (25902 38484 26011 426000) 0 nil])
([nil nil ((#("w" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -2425) (undo-tree-id77 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -2426) (undo-tree-id78 . -1) 2427) nil (25902 38484 26010 501000) 0 nil])
([nil nil ((2425 . 2426)) nil (25902 38484 26008 159000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -2425) (undo-tree-id76 . -1) 2426) nil (25902 38484 26007 312000) 0 nil])
([nil nil ((2425 . 2437)) nil (25902 38484 26005 743000) 0 nil])
([nil nil ((2437 . 2451)) nil (25902 38484 26005 35000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -2450) (undo-tree-id75 . -1) 2451) nil (25902 38484 26004 216000) 0 nil])
([nil nil ((2450 . 2454)) nil (25902 38484 26002 724000) 0 nil])
([nil nil ((2454 . 2455)) nil (25902 38484 26002 27000) 0 nil])
([nil nil ((2455 . 2464)) nil (25902 38484 26001 310000) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -2463) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 2464) nil (25902 38484 25999 971000) 0 nil])
([nil nil ((2463 . 2469)) nil (25902 38484 25997 289000) 0 nil])
([nil nil ((2523 . 2524)) nil (25902 38484 25996 598000) 0 nil])
([nil nil ((2524 . 2526)) nil (25902 38484 25995 908000) 0 nil])
([nil nil ((2526 . 2547)) nil (25902 38484 25995 225000) 0 nil])
([nil nil ((2547 . 2563)) nil (25902 38484 25994 606000) 0 nil])
([nil nil ((2563 . 2564)) nil (25902 38484 25993 976000) 0 nil])
([nil nil ((2564 . 2565)) nil (25902 38484 25993 349000) 0 nil])
([nil nil ((2565 . 2573)) nil (25902 38484 25992 651000) 0 nil])
([nil nil ((2603 . 2604)) nil (25902 38484 25991 960000) 0 nil])
([nil nil ((2604 . 2606)) nil (25902 38484 25991 277000) 0 nil])
([nil nil ((2606 . 2620)) nil (25902 38484 25990 658000) 0 nil])
([nil nil ((2620 . 2622)) nil (25902 38484 25989 995000) 0 nil])
([nil nil ((2646 . 2647)) nil (25902 38484 25989 327000) 0 nil])
([nil nil ((2647 . 2649)) nil (25902 38484 25988 612000) 0 nil])
([nil nil ((2649 . 2656)) nil (25902 38484 25987 893000) 0 nil])
([nil nil ((2656 . 2677)) nil (25902 38484 25987 173000) 0 nil])
([nil nil ((2677 . 2698)) nil (25902 38484 25986 410000) 0 nil])
([nil nil ((2698 . 2704)) nil (25902 38484 25985 649000) 0 nil])
([nil nil ((2704 . 2705)) nil (25902 38484 25984 965000) 0 nil])
([nil nil ((2705 . 2706)) nil (25902 38484 25984 239000) 0 nil])
([nil nil ((#(")" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -2704) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("_" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -2705) (undo-tree-id70 . -1) (undo-tree-id71 . -1) 2706) nil (25902 38484 25983 87000) 0 nil])
([nil nil ((2704 . 2706)) nil (25902 38484 25979 268000) 0 nil])
([nil nil ((2723 . 2724)) nil (25902 38484 25978 478000) 0 nil])
([nil nil ((2724 . 2731)) nil (25902 38484 25977 773000) 0 nil])
([nil nil ((#("      " 0 6 (ws-butler-chg chg fontified t)) . 2725) (undo-tree-id66 . -6) (undo-tree-id67 . -6) 2731) nil (25902 38484 25976 813000) 0 nil])
([nil nil ((2707 . 2714) (#("      " 0 1 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 1 6 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t)) . 2707) (undo-tree-id65 . -6) 2713) nil (25902 38484 25974 326000) 0 nil])
([nil nil ((2707 . 2713)) nil (25902 38484 25971 229000) 0 nil])
([nil nil ((2713 . 2720)) nil (25902 38484 25970 206000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t)) . -2719) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 2720) nil (25902 38484 25969 258000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t c-is-sws t)) . -2713) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t)) . -2714) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t)) . -2715) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -2716) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -2717) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -2718) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) 2719) nil (25902 38484 25965 691000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2774 . 2775) (nil fontified nil 2714 . 2775) (nil fontified nil 2713 . 2714) (2713 . 2775)) nil (25902 38484 25951 931000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2755) (undo-tree-id27 . -1) (nil syntax-table nil 2758 . 2759) (nil syntax-table (1) 2753 . 2754) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2756) (undo-tree-id28 . -1) (nil syntax-table nil 2759 . 2760) (nil syntax-table (1) 2753 . 2754) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2757) (undo-tree-id29 . -1) (nil syntax-table nil 2760 . 2761) (nil syntax-table (1) 2753 . 2754) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2758) (undo-tree-id30 . -1) (nil syntax-table nil 2761 . 2762) (nil syntax-table (1) 2753 . 2754) (#("g" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2759) (undo-tree-id31 . -1) (nil syntax-table nil 2762 . 2763) (nil syntax-table (1) 2753 . 2754) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2760) (undo-tree-id32 . -1) (nil syntax-table nil 2763 . 2764) (nil syntax-table (1) 2753 . 2754) (#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2761) (undo-tree-id33 . -1) (nil syntax-table nil 2764 . 2765) (nil syntax-table (1) 2753 . 2754) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2762) (undo-tree-id34 . -1) (nil syntax-table nil 2765 . 2766) (nil syntax-table (1) 2753 . 2754) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2763) (undo-tree-id35 . -1) (nil syntax-table nil 2766 . 2767) (nil syntax-table (1) 2753 . 2754) (#("m" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2764) (undo-tree-id36 . -1) (nil syntax-table nil 2767 . 2768) (nil syntax-table (1) 2753 . 2754) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2765) (undo-tree-id37 . -1) (nil syntax-table nil 2768 . 2769) (nil syntax-table (1) 2753 . 2754) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2766) (undo-tree-id38 . -1) (nil syntax-table nil 2769 . 2770) (nil syntax-table (1) 2753 . 2754) (#("\"" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2767) (undo-tree-id39 . -1) (#("," 0 1 (ws-butler-chg chg fontified t)) . -2768) (undo-tree-id40 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2769) (undo-tree-id41 . -1) (#("3" 0 1 (ws-butler-chg chg fontified t)) . -2770) (undo-tree-id42 . -1) (#("0" 0 1 (ws-butler-chg chg fontified t)) . -2771) (undo-tree-id43 . -1) 2772) nil (25902 38484 25947 265000) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2734) (undo-tree-id6 . -1) (nil syntax-table nil 2737 . 2738) (nil syntax-table (1) 2729 . 2730) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2735) (undo-tree-id7 . -1) (nil syntax-table nil 2738 . 2739) (nil syntax-table (1) 2729 . 2730) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2736) (undo-tree-id8 . -1) (nil syntax-table nil 2739 . 2740) (nil syntax-table (1) 2729 . 2730) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2737) (undo-tree-id9 . -1) (nil syntax-table nil 2740 . 2741) (nil syntax-table (1) 2729 . 2730) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2738) (undo-tree-id10 . -1) (nil syntax-table nil 2741 . 2742) (nil syntax-table (1) 2729 . 2730) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2739) (undo-tree-id11 . -1) (nil syntax-table nil 2742 . 2743) (nil syntax-table (1) 2729 . 2730) (#("%" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2740) (undo-tree-id12 . -1) (nil syntax-table nil 2743 . 2744) (nil syntax-table (1) 2729 . 2730) (#("d" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2741) (undo-tree-id13 . -1) (nil syntax-table nil 2744 . 2745) (nil syntax-table (1) 2729 . 2730) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2742) (undo-tree-id14 . -1) (nil syntax-table nil 2745 . 2746) (nil syntax-table (1) 2729 . 2730) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2743) (undo-tree-id15 . -1) (nil syntax-table nil 2746 . 2747) (nil syntax-table (1) 2729 . 2730) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2744) (undo-tree-id16 . -1) (nil syntax-table nil 2747 . 2748) (nil syntax-table (1) 2729 . 2730) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2745) (undo-tree-id17 . -1) (nil syntax-table nil 2748 . 2749) (nil syntax-table (1) 2729 . 2730) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2746) (undo-tree-id18 . -1) (nil syntax-table nil 2749 . 2750) (nil syntax-table (1) 2729 . 2730) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2747) (undo-tree-id19 . -1) (nil syntax-table nil 2750 . 2751) (nil syntax-table (1) 2729 . 2730) (#("\\" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2748) (undo-tree-id20 . -1) (nil syntax-table nil 2751 . 2752) (nil syntax-table (1) 2729 . 2730) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2749) (undo-tree-id21 . -1) (nil syntax-table nil 2752 . 2753) (nil syntax-table (1) 2729 . 2730) (#("\"" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2750) (undo-tree-id22 . -1) (#("," 0 1 (ws-butler-chg chg fontified t)) . -2751) (undo-tree-id23 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2752) (undo-tree-id24 . -1) (#("\"" 0 1 (ws-butler-chg chg fontified t face font-lock-warning-face)) . -2753) (undo-tree-id25 . -1) (nil syntax-table nil 2756 . 2757) (nil syntax-table (1) 2753 . 2754) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2754) (undo-tree-id26 . -1) (nil syntax-table nil 2757 . 2758) (nil syntax-table (1) 2753 . 2754)) nil (25902 38484 25923 685000) 0 nil])
([nil nil ((#("\"" 0 1 (ws-butler-chg chg fontified t face font-lock-warning-face)) . -2729) (undo-tree-id1 . -1) (nil syntax-table nil 2732 . 2733) (nil syntax-table (1) 2729 . 2730) (#("m" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2730) (undo-tree-id2 . -1) (nil syntax-table nil 2733 . 2734) (nil syntax-table (1) 2729 . 2730) (#("y" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2731) (undo-tree-id3 . -1) (nil syntax-table nil 2734 . 2735) (nil syntax-table (1) 2729 . 2730) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2732) (undo-tree-id4 . -1) (nil syntax-table nil 2735 . 2736) (nil syntax-table (1) 2729 . 2730) (#("%" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2733) (undo-tree-id5 . -1) (nil syntax-table nil 2736 . 2737) (nil syntax-table (1) 2729 . 2730)) nil (25902 38484 25898 458000) 0 nil])
([nil nil ((2739 . 2740) (nil syntax-table nil 2741 . 2742) (nil syntax-table (1) 2729 . 2730) (2738 . 2739) (nil syntax-table nil 2740 . 2741) (nil syntax-table (1) 2729 . 2730) (2737 . 2738) (nil syntax-table nil 2739 . 2740) (nil syntax-table (1) 2729 . 2730) (2736 . 2737) (nil syntax-table nil 2738 . 2739) (nil syntax-table (1) 2729 . 2730) (2735 . 2736) (nil syntax-table nil 2737 . 2738) (nil syntax-table (1) 2729 . 2730) (2734 . 2735) (nil syntax-table nil 2736 . 2737) (nil syntax-table (1) 2729 . 2730) (2733 . 2734) (nil syntax-table nil 2735 . 2736) (nil syntax-table (1) 2729 . 2730) (2732 . 2733) (nil syntax-table nil 2734 . 2735) (nil syntax-table (1) 2729 . 2730) (2731 . 2732) (nil syntax-table nil 2733 . 2734) (nil syntax-table (1) 2729 . 2730) (2730 . 2731) (nil syntax-table nil 2732 . 2733) (nil syntax-table (1) 2729 . 2730) (2729 . 2730)) nil (25902 38484 25890 165000) 0 nil])
([nil nil ((2748 . 2749) (nil syntax-table nil 2750 . 2751) (nil syntax-table (1) 2729 . 2730) (2747 . 2748) (nil syntax-table nil 2749 . 2750) (nil syntax-table (1) 2729 . 2730) (2746 . 2747) (nil syntax-table nil 2748 . 2749) (nil syntax-table (1) 2729 . 2730) (2745 . 2746) (nil syntax-table nil 2747 . 2748) (nil syntax-table (1) 2729 . 2730) (2744 . 2745) (nil syntax-table nil 2746 . 2747) (nil syntax-table (1) 2729 . 2730) (2743 . 2744) (nil syntax-table nil 2745 . 2746) (nil syntax-table (1) 2729 . 2730) (2742 . 2743) (nil syntax-table nil 2744 . 2745) (nil syntax-table (1) 2729 . 2730) (2741 . 2742) (nil syntax-table nil 2743 . 2744) (nil syntax-table (1) 2729 . 2730) (2740 . 2741) (nil syntax-table nil 2742 . 2743) (nil syntax-table (1) 2729 . 2730)) nil (25902 38484 25883 285000) 0 nil])
([nil nil ((2749 . 2750) (nil syntax-table nil 2752 . 2753) (nil syntax-table (1) 2729 . 2730) (2748 . 2749)) nil (25902 38484 25877 664000) 0 nil])
([nil nil ((2735 . 2737)) nil (25902 38484 25876 266000) 0 nil])
([nil nil ((2739 . 2740)) nil (25902 38484 25875 530000) 0 nil])
([nil nil ((2740 . 2741)) nil (25902 38484 25874 816000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2740) (undo-tree-id0 . -1) 2741) nil (25902 38484 25873 327000) 0 nil])
([nil nil ((2740 . 2741)) nil (25902 38484 25853 864000) 0 nil])
([nil nil ((2755 . 2756)) nil (25902 38484 25853 86000) 0 nil])
([nil nil ((2756 . 2757)) nil (25902 38484 25852 138000) 0 nil])
([nil nil ((2757 . 2762)) nil (25902 38484 25850 822000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 2468) 2762) nil (25902 38484 25846 215000) 0 nil])
([nil nil ((2763 . 2770) (t 25902 38484 35430 603000)) nil (25902 38633 117848 207000) 0 nil])
([nil nil ((#(" " 0 1 (c-is-sws t c-in-sws t fontified t ws-butler-chg delete)) . 2770) (#(" " 0 1 (c-is-sws t c-in-sws t fontified t ws-butler-chg delete)) . 2770) (#(" " 0 1 (c-is-sws t c-in-sws t fontified t ws-butler-chg delete)) . 2770) (#(" " 0 1 (c-is-sws t c-in-sws t fontified t ws-butler-chg delete)) . 2770) (#(" " 0 1 (c-is-sws t c-in-sws t fontified t ws-butler-chg delete)) . 2770) (#(" " 0 1 (c-is-sws t c-in-sws t fontified t ws-butler-chg delete)) . 2770) (#("
" 0 1 (fontified t ws-butler-chg delete)) . 2770) (#("
" 0 1 (rear-nonsticky t fontified t)) . 2770)) nil (25902 38633 117846 388000) 0 nil])
([nil nil ((2781 . 2788)) nil (25902 38633 117844 257000) 0 nil])
([nil nil ((2782 . 2786) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . 2782) (undo-tree-id250 . -6) (2788 . 2789)) nil (25902 38633 117843 291000) 0 nil])
([nil nil ((2787 . 2792)) nil (25902 38633 117841 396000) 0 nil])
([nil nil ((2788 . 2790) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 2788) (undo-tree-id249 . -4) (2792 . 2793)) nil (25902 38633 117840 440000) 0 nil])
([nil nil ((2791 . 2794)) nil (25902 38633 117838 502000) 0 nil])
([nil nil ((2792 . 2795) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 2792) (undo-tree-id248 . -2) 2794) nil (25902 38633 117837 413000) 0 nil])
([nil nil ((2795 . 2798)) nil (25902 38633 117835 303000) 0 nil])
([nil nil ((2798 . 2799)) nil (25902 38633 117834 423000) 0 nil])
([nil nil ((2799 . 2803)) nil (25902 38633 117833 518000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg)) . -2801) (undo-tree-id246 . -1) (#("v" 0 1 (fontified t ws-butler-chg chg)) . -2802) (undo-tree-id247 . -1) 2803) nil (25902 38633 117832 175000) 0 nil])
([nil nil ((2801 . 2802)) nil (25902 38633 117829 509000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg)) . -2801) (undo-tree-id245 . -1) 2802) nil (25902 38633 117828 479000) 0 nil])
([nil nil ((2801 . 2807)) nil (25902 38633 117826 896000) 0 nil])
([nil nil ((2807 . 2808)) nil (25902 38633 117826 52000) 0 nil])
([nil nil ((2808 . 2809)) nil (25902 38633 117825 284000) 0 nil])
([nil nil ((2809 . 2810)) nil (25902 38633 117824 412000) 0 nil])
([nil nil ((2810 . 2815)) nil (25902 38633 117823 639000) 0 nil])
([nil nil ((2815 . 2820)) nil (25902 38633 117822 675000) 0 nil])
([nil nil ((2820 . 2821) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -2820) (2820 . 2822) (#("while" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 5 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 2820) (undo-tree-id243 . -3) (undo-tree-id244 . -5) (2815 . 2820) 2820) nil (25902 38633 117821 345000) 0 nil])
([nil nil ((2821 . 2823)) nil (25902 38633 117818 165000) 0 nil])
([nil nil ((2823 . 2837)) nil (25902 38633 117817 313000) 0 nil])
([nil nil ((2837 . 2838)) nil (25902 38633 117816 288000) 0 nil])
([nil nil ((2838 . 2843)) nil (25902 38633 117815 381000) 0 nil])
([nil nil ((2843 . 2844)) nil (25902 38633 117814 624000) 0 nil])
([nil nil ((2844 . 2849)) nil (25902 38633 117813 844000) 0 nil])
([nil nil ((2849 . 2850)) nil (25902 38633 117812 763000) 0 nil])
([nil nil ((2850 . 2855)) nil (25902 38633 117811 945000) 0 nil])
([nil nil ((2855 . 2857)) nil (25902 38633 117811 85000) 0 nil])
([nil nil ((2857 . 2859)) nil (25902 38633 117810 290000) 0 nil])
([nil nil ((2859 . 2863)) nil (25902 38633 117809 474000) 0 nil])
([nil nil ((2863 . 2864)) nil (25902 38633 117808 651000) 0 nil])
([nil nil ((2864 . 2865)) nil (25902 38633 117807 669000) 0 nil])
([nil nil ((2865 . 2866)) nil (25902 38633 117806 622000) 0 nil])
([nil nil ((2866 . 2873)) nil (25902 38633 117805 739000) 0 nil])
([nil nil ((2873 . 2879)) nil (25902 38633 117805 85000) 0 nil])
([nil nil ((2879 . 2880)) nil (25902 38633 117804 329000) 0 nil])
([nil nil ((2880 . 2889)) nil (25902 38633 117803 584000) 0 nil])
([nil nil ((2889 . 2890)) nil (25902 38633 117802 713000) 0 nil])
([nil nil ((2890 . 2891)) nil (25902 38633 117802 73000) 0 nil])
([nil nil ((2891 . 2898)) nil (25902 38633 117801 265000) 0 nil])
([nil nil ((2898 . 2904)) nil (25902 38633 117800 265000) 0 nil])
([nil nil ((2904 . 2905)) nil (25902 38633 117799 476000) 0 nil])
([nil nil ((2908 . 2909) (nil syntax-table nil 2908 . 2909) (nil syntax-table (1) 2905 . 2906) (2907 . 2908) (nil syntax-table nil 2907 . 2908) (nil syntax-table (1) 2905 . 2906) (2906 . 2907) (nil syntax-table nil 2906 . 2907) (nil syntax-table (1) 2905 . 2906) (2905 . 2906)) nil (25902 38633 117798 238000) 0 nil])
([nil nil ((2909 . 2910)) nil (25902 38633 117795 904000) 0 nil])
([nil nil ((2910 . 2914)) nil (25902 38633 117795 125000) 0 nil])
([nil nil ((2914 . 2915)) nil (25902 38633 117794 245000) 0 nil])
([nil nil ((2915 . 2916)) nil (25902 38633 117793 392000) 0 nil])
([nil nil ((2916 . 2917)) nil (25902 38633 117792 637000) 0 nil])
([nil nil ((2917 . 2924)) nil (25902 38633 117791 928000) 0 nil])
([nil nil ((2924 . 2931)) nil (25902 38633 117791 79000) 0 nil])
([nil nil ((2931 . 2932)) nil (25902 38633 117790 269000) 0 nil])
([nil nil ((2932 . 2936)) nil (25902 38633 117789 498000) 0 nil])
([nil nil ((2936 . 2937)) nil (25902 38633 117788 750000) 0 nil])
([nil nil ((2937 . 2938)) nil (25902 38633 117787 969000) 0 nil])
([nil nil ((2938 . 2945)) nil (25902 38633 117787 261000) 0 nil])
([nil nil ((2945 . 2948)) nil (25902 38633 117786 576000) 0 nil])
([nil nil ((2948 . 2951)) nil (25902 38633 117785 878000) 0 nil])
([nil nil ((2951 . 2952)) nil (25902 38633 117784 995000) 0 nil])
([nil nil ((2952 . 2958)) nil (25902 38633 117784 75000) 0 nil])
([nil nil ((2958 . 2959)) nil (25902 38633 117782 996000) 0 nil])
([nil nil ((2959 . 2960)) nil (25902 38633 117782 231000) 0 nil])
([nil nil ((2960 . 2967)) nil (25902 38633 117781 337000) 0 nil])
([nil nil ((2961 . 2965) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . 2961) (undo-tree-id242 . -6) (2967 . 2968)) nil (25902 38633 117780 411000) 0 nil])
([nil nil ((2966 . 2971)) nil (25902 38633 117778 473000) 0 nil])
([nil nil ((2967 . 2969) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 2967) (undo-tree-id241 . -4) (2971 . 2972)) nil (25902 38633 117777 385000) 0 nil])
([nil nil ((2970 . 2973)) nil (25902 38633 117775 93000) 0 nil])
([nil nil ((2971 . 2974) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 2971) (undo-tree-id240 . -2) 2973) nil (25902 38633 117773 940000) 0 nil])
([nil nil ((2974 . 2976)) nil (25902 38633 117772 114000) 0 nil])
([nil nil ((2976 . 2978)) nil (25902 38633 117771 391000) 0 nil])
([nil nil ((2978 . 2979) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -2978) (2978 . 2980) (#("else" 0 1 (fontified nil ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg) 2 3 (fontified nil ws-butler-chg chg) 3 4 (fontified nil ws-butler-chg chg)) . 2978) (undo-tree-id238 . -2) (undo-tree-id239 . -3) (2974 . 2978) 2978) nil (25902 38633 117770 34000) 0 nil])
([nil nil ((2979 . 2982)) nil (25902 38633 117767 126000) 0 nil])
([nil nil ((2982 . 2983)) nil (25902 38633 117766 351000) 0 nil])
([nil nil ((2983 . 2991)) nil (25902 38633 117765 586000) 0 nil])
([nil nil ((2991 . 2992)) nil (25902 38633 117764 885000) 0 nil])
([nil nil ((2992 . 2993)) nil (25902 38633 117764 179000) 0 nil])
([nil nil ((2993 . 2994)) nil (25902 38633 117763 160000) 0 nil])
([nil nil ((2994 . 2999)) nil (25902 38633 117762 313000) 0 nil])
([nil nil ((2999 . 3004)) nil (25902 38633 117761 474000) 0 nil])
([nil nil ((3004 . 3005) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -3004) (3004 . 3006) (#("while" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 5 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 3004) (undo-tree-id236 . -3) (undo-tree-id237 . -5) (2999 . 3004) 3004) nil (25902 38633 117760 39000) 0 nil])
([nil nil ((3005 . 3007)) nil (25902 38633 117756 470000) 0 nil])
([nil nil ((3007 . 3021)) nil (25902 38633 117755 618000) 0 nil])
([nil nil ((3021 . 3022)) nil (25902 38633 117754 909000) 0 nil])
([nil nil ((3022 . 3027)) nil (25902 38633 117754 170000) 0 nil])
([nil nil ((3027 . 3028)) nil (25902 38633 117753 438000) 0 nil])
([nil nil ((3028 . 3033)) nil (25902 38633 117752 536000) 0 nil])
([nil nil ((3033 . 3034)) nil (25902 38633 117751 435000) 0 nil])
([nil nil ((3034 . 3035)) nil (25902 38633 117750 346000) 0 nil])
([nil nil ((3035 . 3039)) nil (25902 38633 117749 652000) 0 nil])
([nil nil ((3039 . 3041)) nil (25902 38633 117748 785000) 0 nil])
([nil nil ((3041 . 3047)) nil (25902 38633 117748 61000) 0 nil])
([nil nil ((3047 . 3048)) nil (25902 38633 117747 291000) 0 nil])
([nil nil ((3048 . 3049)) nil (25902 38633 117746 437000) 0 nil])
([nil nil ((3049 . 3050)) nil (25902 38633 117745 712000) 0 nil])
([nil nil ((3050 . 3057)) nil (25902 38633 117745 24000) 0 nil])
([nil nil ((3057 . 3063)) nil (25902 38633 117744 351000) 0 nil])
([nil nil ((3063 . 3064)) nil (25902 38633 117743 673000) 0 nil])
([nil nil ((3064 . 3074)) nil (25902 38633 117742 963000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg chg)) . -3073) (undo-tree-id235 . -1) 3074) nil (25902 38633 117741 932000) 0 nil])
([nil nil ((3073 . 3074)) nil (25902 38633 117740 301000) 0 nil])
([nil nil ((3074 . 3075)) nil (25902 38633 117739 530000) 0 nil])
([nil nil ((3075 . 3082)) nil (25902 38633 117738 698000) 0 nil])
([nil nil ((3082 . 3088)) nil (25902 38633 117737 804000) 0 nil])
([nil nil ((3088 . 3089)) nil (25902 38633 117737 168000) 0 nil])
([nil nil ((3092 . 3093) (nil syntax-table nil 3092 . 3093) (nil syntax-table (1) 3089 . 3090) (3091 . 3092) (nil syntax-table nil 3091 . 3092) (nil syntax-table (1) 3089 . 3090) (3090 . 3091) (nil syntax-table nil 3090 . 3091) (nil syntax-table (1) 3089 . 3090) (3089 . 3090)) nil (25902 38633 117736 73000) 0 nil])
([nil nil ((3093 . 3094)) nil (25902 38633 117733 764000) 0 nil])
([nil nil ((3094 . 3099)) nil (25902 38633 117733 44000) 0 nil])
([nil nil ((3099 . 3100)) nil (25902 38633 117732 348000) 0 nil])
([nil nil ((3100 . 3101)) nil (25902 38633 117731 668000) 0 nil])
([nil nil ((3101 . 3108)) nil (25902 38633 117730 917000) 0 nil])
([nil nil ((3108 . 3114)) nil (25902 38633 117730 130000) 0 nil])
([nil nil ((3114 . 3115)) nil (25902 38633 117729 341000) 0 nil])
([nil nil ((3115 . 3121)) nil (25902 38633 117728 556000) 0 nil])
([nil nil ((3121 . 3122)) nil (25902 38633 117727 596000) 0 nil])
([nil nil ((3122 . 3123)) nil (25902 38633 117726 849000) 0 nil])
([nil nil ((3123 . 3130)) nil (25902 38633 117725 983000) 0 nil])
([nil nil ((3124 . 3128) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . 3124) (undo-tree-id234 . -6) (3130 . 3131)) nil (25902 38633 117724 771000) 0 nil])
([nil nil ((3129 . 3134)) nil (25902 38633 117722 555000) 0 nil])
([nil nil ((3130 . 3132) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 3130) (undo-tree-id233 . -4) (3134 . 3135)) nil (25902 38633 117721 314000) 0 nil])
([nil nil ((3133 . 3136)) nil (25902 38633 117718 715000) 0 nil])
([nil nil ((3136 . 3144)) nil (25902 38633 117717 698000) 0 nil])
([nil nil ((3144 . 3145)) nil (25902 38633 117716 579000) 0 nil])
([nil nil ((3145 . 3148)) nil (25902 38633 117715 262000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil ws-butler-chg chg)) . 3146) (undo-tree-id223 . -2) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (3148 . 3149)) nil (25902 38633 117711 0) 0 nil])
([nil nil ((3147 . 3149) (t 25902 38633 135311 995000)) nil (25902 39839 827516 284000) 0 nil])
([nil nil ((3149 . 3154)) nil (25902 39839 827515 189000) 0 nil])
([nil nil ((3154 . 3163)) nil (25902 39839 827514 501000) 0 nil])
([nil nil ((3163 . 3164)) nil (25902 39839 827513 833000) 0 nil])
([nil nil ((3164 . 3169)) nil (25902 39839 827513 141000) 0 nil])
([nil nil ((3169 . 3171)) nil (25902 39839 827512 434000) 0 nil])
([nil nil ((3171 . 3175)) nil (25902 39839 827511 662000) 0 nil])
([nil nil ((3175 . 3176)) nil (25902 39839 827510 912000) 0 nil])
([nil nil ((3176 . 3177)) nil (25902 39839 827510 173000) 0 nil])
([nil nil ((3177 . 3178)) nil (25902 39839 827509 462000) 0 nil])
([nil nil ((#("argv) {" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 1 2 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 2 3 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 3 4 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 4 5 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face)) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face))) . -3171) (undo-tree-id502 . -1) (undo-tree-id503 . -7) 3178) nil (25902 39839 827508 409000) 0 nil])
([nil nil ((#("char **" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face) 1 2 (ws-butler-chg chg fontified t face font-lock-type-face) 2 3 (ws-butler-chg chg fontified t face font-lock-type-face) 3 4 (ws-butler-chg chg fontified t face font-lock-type-face) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t)) . -3164) (undo-tree-id500 . -7) (undo-tree-id501 . -7) 3171) nil (25902 39839 827505 931000) 0 nil])
([nil nil ((#("printHelp(" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face) 1 2 (ws-butler-chg chg fontified t face font-lock-function-name-face) 2 3 (ws-butler-chg chg fontified t face font-lock-function-name-face) 3 4 (ws-butler-chg chg fontified t face font-lock-function-name-face) 4 5 (ws-butler-chg chg fontified t face font-lock-function-name-face) 5 6 (ws-butler-chg chg fontified t face font-lock-function-name-face) 6 7 (ws-butler-chg chg fontified t face font-lock-function-name-face) 7 8 (ws-butler-chg chg fontified t face font-lock-function-name-face) 8 9 (ws-butler-chg chg fontified t face font-lock-function-name-face) 9 10 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-1-face))) . -3154) (undo-tree-id497 . -2) (undo-tree-id498 . -10) (undo-tree-id499 . -10) 3164) nil (25902 39839 827503 606000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t ws-butler-chg chg)) . -3149) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -3150) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -3151) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -3152) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -3153) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) 3154) nil (25902 39839 827499 601000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3605 . 3606) (nil fontified nil 3605 . 3606) (nil fontified nil 3604 . 3605) (nil fontified nil 3602 . 3604) (nil fontified nil 3601 . 3602) (nil fontified nil 3537 . 3601) (nil fontified nil 3536 . 3537) (nil fontified nil 3526 . 3536) (nil fontified nil 3525 . 3526) (nil fontified nil 3458 . 3525) (nil fontified nil 3457 . 3458) (nil fontified nil 3447 . 3457) (nil fontified nil 3446 . 3447) (nil fontified nil 3409 . 3446) (nil fontified nil 3408 . 3409) (nil fontified nil 3398 . 3408) (nil fontified nil 3397 . 3398) (nil fontified nil 3352 . 3397) (nil fontified nil 3351 . 3352) (nil fontified nil 3341 . 3351) (nil fontified nil 3340 . 3341) (nil fontified nil 3328 . 3340) (nil fontified nil 3327 . 3328) (nil fontified nil 3319 . 3327) (nil fontified nil 3315 . 3319) (nil fontified nil 3314 . 3315) (nil fontified nil 3264 . 3314) (nil fontified nil 3237 . 3264) (nil fontified nil 3236 . 3237) (nil fontified nil 3226 . 3236) (nil fontified nil 3225 . 3226) (nil fontified nil 3224 . 3225) (nil fontified nil 3223 . 3224) (nil fontified nil 3222 . 3223) (nil fontified nil 3216 . 3222) (nil fontified nil 3188 . 3216) (nil fontified nil 3187 . 3188) (nil fontified nil 3178 . 3187) (nil fontified nil 3177 . 3178) (nil fontified nil 3176 . 3177) (nil fontified nil 3175 . 3176) (nil fontified nil 3171 . 3175) (nil fontified nil 3168 . 3171) (nil fontified nil 3164 . 3168) (nil fontified nil 3163 . 3164) (nil fontified nil 3154 . 3163) (nil fontified nil 3153 . 3154) (nil fontified nil 3152 . 3153) (nil fontified nil 3149 . 3152) (3149 . 3606)) nil (25902 39839 827486 324000) 0 nil])
([nil nil ((3606 . 3607)) nil (25902 39839 827477 54000) 0 nil])
([nil nil ((3607 . 3615)) nil (25902 39839 827476 361000) 0 nil])
([nil nil ((3615 . 3616)) nil (25902 39839 827475 682000) 0 nil])
([nil nil ((3616 . 3625)) nil (25902 39839 827475 2000) 0 nil])
([nil nil ((3625 . 3626)) nil (25902 39839 827474 352000) 0 nil])
([nil nil ((3626 . 3630)) nil (25902 39839 827473 642000) 0 nil])
([nil nil ((3630 . 3632)) nil (25902 39839 827472 968000) 0 nil])
([nil nil ((3632 . 3634)) nil (25902 39839 827472 290000) 0 nil])
([nil nil ((3634 . 3639)) nil (25902 39839 827471 589000) 0 nil])
([nil nil ((3639 . 3640)) nil (25902 39839 827470 894000) 0 nil])
([nil nil ((3640 . 3641)) nil (25902 39839 827470 202000) 0 nil])
([nil nil ((3641 . 3642)) nil (25902 39839 827469 502000) 0 nil])
([nil nil ((3642 . 3645)) nil (25902 39839 827468 813000) 0 nil])
([nil nil ((3645 . 3651)) nil (25902 39839 827468 124000) 0 nil])
([nil nil ((3651 . 3653)) nil (25902 39839 827467 417000) 0 nil])
([nil nil ((3653 . 3654)) nil (25902 39839 827466 741000) 0 nil])
([nil nil ((3654 . 3657)) nil (25902 39839 827466 11000) 0 nil])
([nil nil ((3657 . 3664)) nil (25902 39839 827465 176000) 0 nil])
([nil nil ((3664 . 3665)) nil (25902 39839 827464 441000) 0 nil])
([nil nil ((3665 . 3668)) nil (25902 39839 827463 764000) 0 nil])
([nil nil ((3668 . 3682)) nil (25902 39839 827463 2000) 0 nil])
([nil nil ((3683 . 3688)) nil (25902 39839 827462 321000) 0 nil])
([nil nil ((3688 . 3689)) nil (25902 39839 827461 643000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t ws-butler-chg chg)) . -3688) (undo-tree-id480 . -1) (undo-tree-id481 . -1) 3689) nil (25902 39839 827460 695000) 0 nil])
([nil nil ((3688 . 3700)) nil (25902 39839 827458 591000) 0 nil])
([nil nil ((3700 . 3702)) nil (25902 39839 827457 946000) 0 nil])
([nil nil ((3702 . 3703)) nil (25902 39839 827457 253000) 0 nil])
([nil nil ((3703 . 3706)) nil (25902 39839 827456 581000) 0 nil])
([nil nil ((3706 . 3715)) nil (25902 39839 827455 881000) 0 nil])
([nil nil ((3715 . 3720)) nil (25902 39839 827455 41000) 0 nil])
([nil nil ((3720 . 3731)) nil (25902 39839 827454 297000) 0 nil])
([nil nil ((3731 . 3732)) nil (25902 39839 827453 547000) 0 nil])
([nil nil ((3732 . 3738)) nil (25902 39839 827452 841000) 0 nil])
([nil nil ((3738 . 3739)) nil (25902 39839 827452 156000) 0 nil])
([nil nil ((#("parent" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg)) . -3732) (undo-tree-id477 . -2) (undo-tree-id478 . -2) (undo-tree-id479 . -6) 3738) nil (25902 39839 827451 230000) 0 nil])
([nil nil ((3732 . 3737)) nil (25902 39839 827448 396000) 0 nil])
([nil nil ((3738 . 3743)) nil (25902 39839 827447 705000) 0 nil])
([nil nil ((3743 . 3744)) nil (25902 39839 827447 4000) 0 nil])
([nil nil ((3744 . 3747)) nil (25902 39839 827446 287000) 0 nil])
([nil nil ((3747 . 3748)) nil (25902 39839 827445 561000) 0 nil])
([nil nil ((3743 . 3745)) nil (25902 39839 827444 797000) 0 nil])
([nil nil ((3750 . 3755)) nil (25902 39839 827444 1000) 0 nil])
([nil nil ((3751 . 3756) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 3751) (undo-tree-id476 . -4) 3755) nil (25902 39839 827443 99000) 0 nil])
([nil nil ((3756 . 3766)) nil (25902 39839 827441 366000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t ws-butler-chg chg)) . -3765) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) 3766) nil (25902 39839 827440 346000) 0 nil])
([nil nil ((#("a - " 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -3761) (undo-tree-id470 . -4) (undo-tree-id471 . -4) (undo-tree-id472 . -4) 3765) nil (25902 39839 827437 243000) 0 nil])
([nil nil ((#("echo " 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -3756) (undo-tree-id467 . -5) (undo-tree-id468 . -5) (undo-tree-id469 . -5) 3761) nil (25902 39839 827434 262000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -3754) (undo-tree-id464 . -2) (undo-tree-id465 . -2) (undo-tree-id466 . -2) 3756) nil (25902 39839 827431 283000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -3752) (undo-tree-id461 . -2) (undo-tree-id462 . -2) (undo-tree-id463 . -2) 3754) nil (25902 39839 827428 259000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -3750) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -3751) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) 3752) nil (25902 39839 827424 848000) 0 nil])
([nil nil ((#("1)" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face))) . -3748) (undo-tree-id452 . -2) (undo-tree-id453 . -2) (undo-tree-id454 . -2) 3750) nil (25902 39839 827419 720000) 0 nil])
([nil nil ((#("1+" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg)) . -3746) (undo-tree-id449 . -2) (undo-tree-id450 . -2) (undo-tree-id451 . -2) 3748) nil (25902 39839 827416 769000) 0 nil])
([nil nil ((#("a=(" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face))) . -3743) (undo-tree-id446 . -3) (undo-tree-id447 . -3) (undo-tree-id448 . -3) 3746) nil (25902 39839 827413 806000) 0 nil])
([nil nil ((3739 . 3744) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 3739) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) 3743) nil (25902 39839 827410 463000) 0 nil])
([nil nil ((3744 . 3750)) nil (25902 39839 827407 542000) 0 nil])
([nil nil ((3750 . 3751)) nil (25902 39839 827406 847000) 0 nil])
([nil nil ((3751 . 3754)) nil (25902 39839 827406 148000) 0 nil])
([nil nil ((3754 . 3761)) nil (25902 39839 827405 448000) 0 nil])
([nil nil ((3761 . 3770)) nil (25902 39839 827404 750000) 0 nil])
([nil nil ((3770 . 3771)) nil (25902 39839 827404 80000) 0 nil])
([nil nil ((3771 . 3776)) nil (25902 39839 827403 178000) 0 nil])
([nil nil ((3776 . 3777)) nil (25902 39839 827402 477000) 0 nil])
([nil nil ((3777 . 3782)) nil (25902 39839 827401 773000) 0 nil])
([nil nil ((3778 . 3783) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 3778) (undo-tree-id442 . -4) 3782) nil (25902 39839 827400 873000) 0 nil])
([nil nil ((3783 . 3788)) nil (25902 39839 827399 105000) 0 nil])
([nil nil ((3788 . 3789)) nil (25902 39839 827398 422000) 0 nil])
([nil nil ((3789 . 3790)) nil (25902 39839 827397 579000) 0 nil])
([nil nil ((3789 . 3792) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 3789) (undo-tree-id441 . -1) 3790) nil (25902 39839 827396 621000) 0 nil])
([nil nil ((3792 . 3797)) nil (25902 39839 827394 855000) 0 nil])
([nil nil ((3797 . 3806)) nil (25902 39839 827394 151000) 0 nil])
([nil nil ((3806 . 3811)) nil (25902 39839 827393 374000) 0 nil])
([nil nil ((3807 . 3812) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 3807) (undo-tree-id440 . -4) 3811) nil (25902 39839 827392 459000) 0 nil])
([nil nil ((3812 . 3816)) nil (25902 39839 827390 427000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg)) . -3812) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -3813) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (#("b" 0 1 (fontified t ws-butler-chg chg)) . -3814) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3815) (undo-tree-id438 . -1) (undo-tree-id439 . -1) 3816) nil (25902 39839 827388 892000) 0 nil])
([nil nil ((3812 . 3822)) nil (25902 39839 827382 107000) 0 nil])
([nil nil ((3822 . 3824)) nil (25902 39839 827381 339000) 0 nil])
([nil nil ((3824 . 3829)) nil (25902 39839 827380 636000) 0 nil])
([nil nil ((3829 . 3832)) nil (25902 39839 827380 11000) 0 nil])
([nil nil ((3832 . 3833)) nil (25902 39839 827379 321000) 0 nil])
([nil nil ((3833 . 3834)) nil (25902 39839 827378 701000) 0 nil])
([nil nil ((3834 . 3841)) nil (25902 39839 827378 15000) 0 nil])
([nil nil ((3841 . 3842)) nil (25902 39839 827377 346000) 0 nil])
([nil nil ((3842 . 3843)) nil (25902 39839 827376 609000) 0 nil])
([nil nil ((3843 . 3844)) nil (25902 39839 827375 905000) 0 nil])
([nil nil ((3844 . 3851)) nil (25902 39839 827375 217000) 0 nil])
([nil nil ((3851 . 3871)) nil (25902 39839 827374 508000) 0 nil])
([nil nil ((3871 . 3883)) nil (25902 39839 827373 806000) 0 nil])
([nil nil ((3883 . 3884)) nil (25902 39839 827373 93000) 0 nil])
([nil nil ((3884 . 3885)) nil (25902 39839 827372 355000) 0 nil])
([nil nil ((3884 . 3887) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 3884) (undo-tree-id431 . -1) 3885) nil (25902 39839 827371 445000) 0 nil])
([nil nil ((3887 . 3891)) nil (25902 39839 827369 606000) 0 nil])
([nil nil ((3893 . 3894) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -3893) (3885 . 3889) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . 3885) (3891 . 3893) (#("else" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 3891) (undo-tree-id429 . -1) (undo-tree-id430 . -4) (3887 . 3891) 3891) nil (25902 39839 827368 188000) 0 nil])
([nil nil ((3894 . 3897)) nil (25902 39839 827364 590000) 0 nil])
([nil nil ((3897 . 3898)) nil (25902 39839 827363 860000) 0 nil])
([nil nil ((3898 . 3901)) nil (25902 39839 827363 60000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -3898) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -3899) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -3900) (undo-tree-id428 . -1) 3901) nil (25902 39839 827361 409000) 0 nil])
([nil nil ((3898 . 3905)) nil (25902 39839 827352 986000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg)) . -3894) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -3895) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3896) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face))) . -3897) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (#("v" 0 1 (fontified t ws-butler-chg chg)) . -3898) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -3899) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -3900) (undo-tree-id419 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3901) (undo-tree-id420 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -3902) (undo-tree-id421 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -3903) (undo-tree-id422 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3904) (undo-tree-id423 . -1) 3905) nil (25902 39839 827127 1000) 0 nil])
([nil nil ((3894 . 3895)) nil (25902 39839 827109 514000) 0 nil])
([nil nil ((3895 . 3902)) nil (25902 39839 827106 581000) 0 nil])
([nil nil ((3902 . 3923)) nil (25902 39839 826872 733000) 0 nil])
([nil nil ((3923 . 3927)) nil (25902 39839 826872 10000) 0 nil])
([nil nil ((3927 . 3928)) nil (25902 39839 826871 274000) 0 nil])
([nil nil ((3928 . 3936)) nil (25902 39839 826870 579000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg)) . -3934) (undo-tree-id404 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -3935) (undo-tree-id405 . -1) 3936) nil (25902 39839 826869 502000) 0 nil])
([nil nil ((3934 . 3940)) nil (25902 39839 826866 981000) 0 nil])
([nil nil ((3940 . 3941)) nil (25902 39839 826866 315000) 0 nil])
([nil nil ((3941 . 3950)) nil (25902 39839 826865 262000) 0 nil])
([nil nil ((3950 . 3951)) nil (25902 39839 826864 438000) 0 nil])
([nil nil ((3951 . 3952)) nil (25902 39839 826863 653000) 0 nil])
([nil nil ((3952 . 3959)) nil (25902 39839 826862 877000) 0 nil])
([nil nil ((3953 . 3957) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . 3953) (undo-tree-id403 . -6) (3959 . 3960)) nil (25902 39839 826861 997000) 0 nil])
([nil nil ((#("    billy = fork();
  billy = 0
    billy = PID(child)

    Parent:
  echo billy - PID(child)

    Child:
  echo billy - 0

    var = fork()
    if (var == 0) {
      do shit in the child
           }
    else {
      assume were in the parent, and waitpid(something);
    }" 0 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg chg) 11 12 (fontified t ws-butler-chg chg) 12 13 (fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg chg) 14 15 (fontified t ws-butler-chg chg) 15 16 (fontified t ws-butler-chg chg) 16 17 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face)) 17 18 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face)) 18 19 (fontified t ws-butler-chg chg) 19 20 (fontified t ws-butler-chg chg) 20 22 (fontified t ws-butler-chg chg) 22 23 (fontified t ws-butler-chg chg) 23 24 (fontified t ws-butler-chg chg) 24 25 (fontified t ws-butler-chg chg) 25 26 (fontified t ws-butler-chg chg) 26 27 (fontified t ws-butler-chg chg) 27 28 (fontified t ws-butler-chg chg) 28 29 (fontified t ws-butler-chg chg) 29 30 (fontified t ws-butler-chg chg) 30 31 (fontified t ws-butler-chg chg) 31 36 (fontified t ws-butler-chg chg) 36 37 (fontified t ws-butler-chg chg) 37 38 (fontified t ws-butler-chg chg) 38 39 (fontified t ws-butler-chg chg) 39 40 (fontified t ws-butler-chg chg) 40 41 (fontified t ws-butler-chg chg) 41 42 (fontified t ws-butler-chg chg) 42 43 (fontified t ws-butler-chg chg) 43 44 (fontified t ws-butler-chg chg) 44 45 (fontified t ws-butler-chg chg) 45 46 (fontified t ws-butler-chg chg) 46 47 (fontified t ws-butler-chg chg) 47 48 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face)) 48 49 (fontified t ws-butler-chg chg) 49 50 (fontified t ws-butler-chg chg) 50 51 (fontified t ws-butler-chg chg) 51 52 (fontified t ws-butler-chg chg) 52 53 (fontified t ws-butler-chg chg) 53 54 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-2-face)) 54 60 (fontified t ws-butler-chg chg) 60 61 (fontified t ws-butler-chg chg) 61 62 (fontified t ws-butler-chg chg) 62 63 (fontified t ws-butler-chg chg) 63 64 (fontified t ws-butler-chg chg) 64 66 (fontified t ws-butler-chg chg) 66 67 (fontified t ws-butler-chg chg) 67 70 (fontified t ws-butler-chg chg) 70 71 (fontified t ws-butler-chg chg) 71 72 (fontified t ws-butler-chg chg) 72 73 (fontified t ws-butler-chg chg) 73 74 (fontified t ws-butler-chg chg) 74 75 (fontified t ws-butler-chg chg) 75 76 (fontified t ws-butler-chg chg) 76 77 (fontified t ws-butler-chg chg) 77 80 (fontified t ws-butler-chg chg) 80 81 (fontified t ws-butler-chg chg) 81 82 (fontified t ws-butler-chg chg) 82 83 (fontified t ws-butler-chg chg) 83 84 (fontified t ws-butler-chg chg) 84 85 (fontified t ws-butler-chg chg) 85 86 (fontified t ws-butler-chg chg) 86 87 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face)) 87 88 (fontified t ws-butler-chg chg) 88 89 (fontified t ws-butler-chg chg) 89 90 (fontified t ws-butler-chg chg) 90 91 (fontified t ws-butler-chg chg) 91 92 (fontified t ws-butler-chg chg) 92 93 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face)) 93 99 (fontified t ws-butler-chg chg) 99 100 (fontified t ws-butler-chg chg) 100 102 (fontified t ws-butler-chg chg) 102 104 (fontified t ws-butler-chg chg) 104 108 (fontified t ws-butler-chg chg) 108 109 (fontified t ws-butler-chg chg) 109 110 (fontified t ws-butler-chg chg) 110 112 (fontified t ws-butler-chg chg) 112 113 (fontified t ws-butler-chg chg) 113 114 (fontified t ws-butler-chg chg) 114 115 (fontified t ws-butler-chg chg) 115 116 (fontified t ws-butler-chg chg) 116 118 (fontified t ws-butler-chg chg) 118 119 (fontified t ws-butler-chg chg) 119 120 (fontified t ws-butler-chg chg) 120 121 (fontified t ws-butler-chg chg) 121 122 (fontified t ws-butler-chg chg) 122 128 (fontified t ws-butler-chg chg) 128 129 (fontified t ws-butler-chg chg) 129 130 (fontified t ws-butler-chg chg) 130 131 (fontified t ws-butler-chg chg) 131 132 (fontified t ws-butler-chg chg) 132 134 (fontified t ws-butler-chg chg) 134 135 (fontified t ws-butler-chg chg) 135 136 (fontified t ws-butler-chg chg) 136 137 (fontified t ws-butler-chg chg) 137 138 (fontified t ws-butler-chg chg) 138 139 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face)) 139 140 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face)) 140 145 (fontified t ws-butler-chg chg) 145 146 (fontified t ws-butler-chg chg face font-lock-keyword-face) 146 147 (fontified t ws-butler-chg chg face font-lock-keyword-face) 147 148 (fontified t ws-butler-chg chg) 148 149 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face)) 149 150 (fontified t ws-butler-chg chg) 150 151 (fontified t ws-butler-chg chg) 151 152 (fontified t ws-butler-chg chg) 152 153 (fontified t ws-butler-chg chg) 153 154 (fontified t ws-butler-chg chg) 154 155 (fontified t ws-butler-chg chg) 155 156 (fontified t ws-butler-chg chg) 156 157 (fontified t ws-butler-chg chg) 157 158 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face)) 158 159 (fontified t ws-butler-chg chg) 159 160 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face)) 160 161 (fontified t ws-butler-chg chg) 161 167 (fontified t ws-butler-chg chg) 167 168 (fontified t ws-butler-chg chg face font-lock-keyword-face) 168 169 (fontified t ws-butler-chg chg face font-lock-keyword-face) 169 172 (fontified t ws-butler-chg chg) 172 173 (fontified t ws-butler-chg chg) 173 175 (fontified t ws-butler-chg chg) 175 176 (fontified t ws-butler-chg chg) 176 177 (fontified t ws-butler-chg chg) 177 181 (fontified t ws-butler-chg chg) 181 182 (fontified t ws-butler-chg chg) 182 183 (fontified t ws-butler-chg chg) 183 184 (fontified t ws-butler-chg chg) 184 186 (fontified t ws-butler-chg chg) 186 187 (fontified t ws-butler-chg chg) 187 199 (fontified t ws-butler-chg chg) 199 200 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face)) 200 201 (fontified t ws-butler-chg chg) 201 205 (fontified t ws-butler-chg chg) 205 206 (fontified t ws-butler-chg delete face font-lock-keyword-face) 206 209 (fontified t ws-butler-chg chg face font-lock-keyword-face) 209 210 (fontified t ws-butler-chg chg) 210 211 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face)) 211 212 (fontified t ws-butler-chg chg) 212 218 (fontified t ws-butler-chg chg) 218 219 (fontified t ws-butler-chg chg) 219 220 (fontified t ws-butler-chg chg) 220 221 (fontified t ws-butler-chg chg) 221 222 (fontified t ws-butler-chg chg) 222 223 (fontified t ws-butler-chg chg) 223 224 (fontified t ws-butler-chg chg) 224 225 (fontified t ws-butler-chg chg) 225 226 (fontified t ws-butler-chg chg) 226 227 (fontified t ws-butler-chg chg) 227 228 (fontified t ws-butler-chg chg) 228 229 (fontified t ws-butler-chg chg) 229 230 (fontified t ws-butler-chg chg) 230 231 (fontified t ws-butler-chg chg) 231 232 (fontified t ws-butler-chg chg) 232 233 (fontified t ws-butler-chg chg) 233 235 (fontified t ws-butler-chg chg face font-lock-type-face) 235 236 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face) 236 237 (fontified t ws-butler-chg chg) 237 238 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 238 239 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 239 242 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 242 243 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 243 244 (fontified t ws-butler-chg chg c-type c-decl-id-start) 244 245 (fontified t ws-butler-chg chg) 245 246 (fontified t ws-butler-chg chg face font-lock-function-name-face) 246 247 (fontified t ws-butler-chg chg face font-lock-function-name-face) 247 248 (fontified t ws-butler-chg chg face font-lock-function-name-face) 248 249 (fontified t ws-butler-chg chg) 249 250 (fontified t ws-butler-chg chg) 250 251 (fontified t ws-butler-chg chg) 251 252 (fontified t ws-butler-chg chg) 252 253 (fontified t ws-butler-chg chg) 253 254 (fontified t ws-butler-chg chg) 254 255 (fontified t ws-butler-chg chg) 255 256 (fontified t ws-butler-chg chg) 256 257 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-3-face)) 257 258 (fontified t ws-butler-chg chg) 258 259 (fontified t ws-butler-chg chg) 259 261 (fontified t ws-butler-chg chg) 261 263 (fontified t ws-butler-chg chg) 263 264 (fontified t ws-butler-chg chg) 264 266 (fontified t ws-butler-chg chg) 266 267 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-3-face)) 267 268 (fontified t ws-butler-chg chg) 268 269 (fontified t ws-butler-chg chg) 269 273 (fontified t ws-butler-chg chg) 273 274 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-2-face))) . 3684) (undo-tree-id399 . -274) (undo-tree-id400 . -250) (undo-tree-id401 . -261) (undo-tree-id402 . -274)) nil (25902 39839 826859 846000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -3683) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) 3684) nil (25902 39839 826856 88000) 0 nil])
([nil nil ((3683 . 3686)) nil (25902 39839 826852 560000) 0 nil])
([nil nil ((3683 . 3689) (#("int" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face) 1 2 (fontified t ws-butler-chg chg face font-lock-type-face) 2 3 (fontified t ws-butler-chg chg face font-lock-type-face)) . -3683) (undo-tree-id393 . -3) (undo-tree-id394 . -3) 3686) nil (25902 39839 826851 521000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . -3682) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -3683) (undo-tree-id387 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -3684) (undo-tree-id388 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -3685) (undo-tree-id389 . -1) (#("8" 0 1 (fontified t ws-butler-chg chg)) . -3686) (undo-tree-id390 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -3687) (undo-tree-id391 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -3688) (undo-tree-id392 . -1) 3689) nil (25902 39839 826847 701000) 0 nil])
([nil nil ((3682 . 3683)) nil (25902 39839 826838 859000) 0 nil])
([nil nil ((3683 . 3686)) nil (25902 39839 826838 166000) 0 nil])
([nil nil ((3686 . 3702)) nil (25902 39839 826837 438000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3699) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -3700) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3701) (undo-tree-id381 . -1) (undo-tree-id382 . -1) 3702) nil (25902 39839 826835 909000) 0 nil])
([nil nil ((3699 . 3700)) nil (25902 39839 826830 864000) 0 nil])
([nil nil ((3700 . 3701)) nil (25902 39839 826830 159000) 0 nil])
([nil nil ((3701 . 3702)) nil (25902 39839 826829 451000) 0 nil])
([nil nil ((3702 . 3705)) nil (25902 39839 826828 743000) 0 nil])
([nil nil ((3705 . 3708)) nil (25902 39839 826828 23000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg)) . -3705) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -3706) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -3707) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) 3708) nil (25902 39839 826826 536000) 0 nil])
([nil nil ((3705 . 3726)) nil (25902 39839 826819 376000) 0 nil])
([nil nil ((3726 . 3727)) nil (25902 39839 826818 701000) 0 nil])
([nil nil ((3727 . 3728)) nil (25902 39839 826817 642000) 0 nil])
([nil nil ((3728 . 3731)) nil (25902 39839 826816 969000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 3729) (undo-tree-id367 . -2) 3731) nil (25902 39839 826816 36000) 0 nil])
([nil nil ((3728 . 3731)) nil (25902 39839 826814 388000) 0 nil])
([nil nil ((3731 . 3748)) nil (25902 39839 826813 704000) 0 nil])
([nil nil ((3748 . 3749)) nil (25902 39839 826812 975000) 0 nil])
([nil nil ((3749 . 3752)) nil (25902 39839 826812 232000) 0 nil])
([nil nil ((3750 . 3753) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 3750) (undo-tree-id366 . -2) 3752) nil (25902 39839 826811 313000) 0 nil])
([nil nil ((3753 . 3757)) nil (25902 39839 826809 618000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -3756) (undo-tree-id365 . -1) 3757) nil (25902 39839 826808 764000) 0 nil])
([nil nil ((3756 . 3759)) nil (25902 39839 826807 265000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t ws-butler-chg chg)) . -3756) (undo-tree-id362 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -3757) (undo-tree-id363 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -3758) (undo-tree-id364 . -1) 3759) nil (25902 39839 826806 55000) 0 nil])
([nil nil ((3756 . 3758)) nil (25902 39839 826802 831000) 0 nil])
([nil nil ((3758 . 3759) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -3758) (3758 . 3760) (#("while" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 4 5 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 3758) (undo-tree-id360 . -3) (undo-tree-id361 . -5) (3753 . 3758) 3758) nil (25902 39839 826801 519000) 0 nil])
([nil nil ((3759 . 3760)) nil (25902 39839 826798 491000) 0 nil])
([nil nil ((3760 . 3769)) nil (25902 39839 826797 782000) 0 nil])
([nil nil ((3769 . 3772)) nil (25902 39839 826797 7000) 0 nil])
([nil nil ((3772 . 3773)) nil (25902 39839 826796 318000) 0 nil])
([nil nil ((3773 . 3777)) nil (25902 39839 826795 605000) 0 nil])
([nil nil ((3777 . 3778)) nil (25902 39839 826794 864000) 0 nil])
([nil nil ((3778 . 3783)) nil (25902 39839 826794 146000) 0 nil])
([nil nil ((3783 . 3784)) nil (25902 39839 826793 420000) 0 nil])
([nil nil ((3788 . 3789) (nil syntax-table nil 3788 . 3789) (nil syntax-table (1) 3785 . 3786) (3787 . 3788) (nil syntax-table nil 3787 . 3788) (nil syntax-table (1) 3785 . 3786) (3786 . 3787) (nil syntax-table nil 3786 . 3787) (nil syntax-table (1) 3785 . 3786) (3784 . 3786)) nil (25902 39839 826792 337000) 0 nil])
([nil nil ((3789 . 3790) (nil syntax-table nil 3789 . 3790) (nil syntax-table (1) 3785 . 3786)) nil (25902 39839 826789 992000) 0 nil])
([nil nil ((3790 . 3791) (nil syntax-table nil 3790 . 3791) (nil syntax-table (1) 3785 . 3786)) nil (25902 39839 826788 738000) 0 nil])
([nil nil ((3791 . 3793)) nil (25902 39839 826787 668000) 0 nil])
([nil nil ((3793 . 3799)) nil (25902 39839 826786 899000) 0 nil])
([nil nil ((3799 . 3800)) nil (25902 39839 826786 155000) 0 nil])
([nil nil ((3800 . 3805)) nil (25902 39839 826785 493000) 0 nil])
([nil nil ((3805 . 3806)) nil (25902 39839 826784 769000) 0 nil])
([nil nil ((3806 . 3813)) nil (25902 39839 826784 81000) 0 nil])
([nil nil ((3813 . 3819)) nil (25902 39839 826783 316000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -3818) (undo-tree-id359 . -1) 3819) nil (25902 39839 826782 355000) 0 nil])
([nil nil ((3818 . 3819)) nil (25902 39839 826780 753000) 0 nil])
([nil nil ((3819 . 3822)) nil (25902 39839 826779 966000) 0 nil])
([nil nil ((3822 . 3823)) nil (25902 39839 826779 233000) 0 nil])
([nil nil ((3823 . 3832)) nil (25902 39839 826778 494000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t ws-butler-chg chg)) . 3824) (undo-tree-id358 . -8) 3832) nil (25902 39839 826777 576000) 0 nil])
([nil nil ((3818 . 3819)) nil (25902 39839 826775 637000) 0 nil])
([nil nil ((3825 . 3833)) nil (25902 39839 826774 952000) 0 nil])
([nil nil ((3833 . 3834)) nil (25902 39839 826774 102000) 0 nil])
([nil nil ((3834 . 3845)) nil (25902 39839 826773 403000) 0 nil])
([nil nil ((3845 . 3853)) nil (25902 39839 826772 724000) 0 nil])
([nil nil ((3835 . 3843) (#("          " 0 10 (fontified nil ws-butler-chg chg)) . 3835) (3853 . 3854)) nil (25902 39839 826771 861000) 0 nil])
([nil nil ((3852 . 3863)) nil (25902 39839 826770 769000) 0 nil])
([nil nil ((3863 . 3873)) nil (25902 39839 826770 89000) 0 nil])
([nil nil ((3873 . 3874)) nil (25902 39839 826769 355000) 0 nil])
([nil nil ((3874 . 3885)) nil (25902 39839 826768 599000) 0 nil])
([nil nil ((3885 . 3890)) nil (25902 39839 826767 870000) 0 nil])
([nil nil ((3890 . 3891)) nil (25902 39839 826767 93000) 0 nil])
([nil nil ((3891 . 3902)) nil (25902 39839 826765 851000) 0 nil])
([nil nil ((3892 . 3903) (#("          " 0 10 (ws-butler-chg chg fontified t)) . 3892) (undo-tree-id357 . -10) 3902) nil (25902 39839 826762 609000) 0 nil])
([nil nil ((3903 . 3906)) nil (25902 39839 826757 87000) 0 nil])
([nil nil ((3906 . 3907)) nil (25902 39839 826755 887000) 0 nil])
([nil nil ((3893 . 3901) (#("          " 0 10 (ws-butler-chg chg fontified t)) . 3893) 3907) nil (25902 39839 826753 415000) 0 nil])
([nil nil ((3905 . 3909)) nil (25902 39839 826751 484000) 0 nil])
([nil nil ((3909 . 3910)) nil (25902 39839 826750 146000) 0 nil])
([nil nil ((3910 . 3921)) nil (25902 39839 826748 783000) 0 nil])
([nil nil ((3921 . 3934)) nil (25902 39839 826747 561000) 0 nil])
([nil nil ((3934 . 3935)) nil (25902 39839 826745 237000) 0 nil])
([nil nil ((3935 . 3946)) nil (25902 39839 826743 999000) 0 nil])
([nil nil ((3946 . 3951)) nil (25902 39839 826742 738000) 0 nil])
([nil nil ((3951 . 3952)) nil (25902 39839 826741 343000) 0 nil])
([nil nil ((3952 . 3963)) nil (25902 39839 826739 948000) 0 nil])
([nil nil ((3953 . 3964) (#("          " 0 10 (ws-butler-chg chg fontified t)) . 3953) (undo-tree-id356 . -10) 3963) nil (25902 39839 826738 93000) 0 nil])
([nil nil ((3964 . 3972)) nil (25902 39839 826733 139000) 0 nil])
([nil nil ((3954 . 3962) (#("          " 0 10 (ws-butler-chg chg fontified nil)) . 3954) (3972 . 3973)) nil (25902 39839 826731 427000) 0 nil])
([nil nil ((3971 . 3982)) nil (25902 39839 826728 974000) 0 nil])
([nil nil ((3982 . 3985)) nil (25902 39839 826727 516000) 0 nil])
([nil nil ((3985 . 3986)) nil (25902 39839 826726 252000) 0 nil])
([nil nil ((3986 . 3995)) nil (25902 39839 826725 22000) 0 nil])
([nil nil ((3995 . 4000)) nil (25902 39839 826723 878000) 0 nil])
([nil nil ((4000 . 4001)) nil (25902 39839 826722 338000) 0 nil])
([nil nil ((4001 . 4002)) nil (25902 39839 826720 513000) 0 nil])
([nil nil ((4002 . 4003)) nil (25902 39839 826719 363000) 0 nil])
([nil nil ((4003 . 4016)) nil (25902 39839 826718 59000) 0 nil])
([nil nil ((4016 . 4023)) nil (25902 39839 826715 252000) 0 nil])
([nil nil ((4023 . 4024)) nil (25902 39839 826713 753000) 0 nil])
([nil nil ((4024 . 4030)) nil (25902 39839 826712 754000) 0 nil])
([nil nil ((4030 . 4031)) nil (25902 39839 826711 563000) 0 nil])
([nil nil ((4051 . 4052) (nil syntax-table nil 4051 . 4052) (nil syntax-table (1) 4032 . 4033) (4050 . 4051) (nil syntax-table nil 4050 . 4051) (nil syntax-table (1) 4032 . 4033) (4049 . 4050) (nil syntax-table nil 4049 . 4050) (nil syntax-table (1) 4032 . 4033) (4048 . 4049) (nil syntax-table nil 4048 . 4049) (nil syntax-table (1) 4032 . 4033) (4047 . 4048) (nil syntax-table nil 4047 . 4048) (nil syntax-table (1) 4032 . 4033) (4046 . 4047) (nil syntax-table nil 4046 . 4047) (nil syntax-table (1) 4032 . 4033) (4045 . 4046) (nil syntax-table nil 4045 . 4046) (nil syntax-table (1) 4032 . 4033) (4044 . 4045) (nil syntax-table nil 4044 . 4045) (nil syntax-table (1) 4032 . 4033) (4043 . 4044) (nil syntax-table nil 4043 . 4044) (nil syntax-table (1) 4032 . 4033) (4042 . 4043) (nil syntax-table nil 4042 . 4043) (nil syntax-table (1) 4032 . 4033) (4041 . 4042) (nil syntax-table nil 4041 . 4042) (nil syntax-table (1) 4032 . 4033) (4040 . 4041) (nil syntax-table nil 4040 . 4041) (nil syntax-table (1) 4032 . 4033) (4039 . 4040) (nil syntax-table nil 4039 . 4040) (nil syntax-table (1) 4032 . 4033) (4038 . 4039) (nil syntax-table nil 4038 . 4039) (nil syntax-table (1) 4032 . 4033) (4037 . 4038) (nil syntax-table nil 4037 . 4038) (nil syntax-table (1) 4032 . 4033) (4036 . 4037) (nil syntax-table nil 4036 . 4037) (nil syntax-table (1) 4032 . 4033) (4035 . 4036) (nil syntax-table nil 4035 . 4036) (nil syntax-table (1) 4032 . 4033) (4034 . 4035) (nil syntax-table nil 4034 . 4035) (nil syntax-table (1) 4032 . 4033) (4033 . 4034) (nil syntax-table nil 4033 . 4034) (nil syntax-table (1) 4032 . 4033) (4031 . 4033)) nil (25902 39839 826705 848000) 0 nil])
([nil nil ((4061 . 4062) (nil syntax-table nil 4061 . 4062) (nil syntax-table (1) 4032 . 4033) (4060 . 4061) (nil syntax-table (1) 4032 . 4033) (4059 . 4060) (nil syntax-table nil 4059 . 4060) (nil syntax-table (1) 4032 . 4033) (4058 . 4059) (nil syntax-table nil 4058 . 4059) (nil syntax-table (1) 4032 . 4033) (4057 . 4058) (nil syntax-table nil 4057 . 4058) (nil syntax-table (1) 4032 . 4033) (4056 . 4057) (nil syntax-table nil 4056 . 4057) (nil syntax-table (1) 4032 . 4033) (4055 . 4056) (nil syntax-table nil 4055 . 4056) (nil syntax-table (1) 4032 . 4033) (4054 . 4055) (nil syntax-table nil 4054 . 4055) (nil syntax-table (1) 4032 . 4033) (4053 . 4054) (nil syntax-table nil 4053 . 4054) (nil syntax-table (1) 4032 . 4033) (4052 . 4053) (nil syntax-table nil 4052 . 4053) (nil syntax-table (1) 4032 . 4033)) nil (25902 39839 826682 149000) 0 nil])
([nil nil ((4062 . 4063)) nil (25902 39839 826664 767000) 0 nil])
([nil nil ((4063 . 4064)) nil (25902 39839 826663 273000) 0 nil])
([nil nil ((4064 . 4077)) nil (25902 39839 826661 878000) 0 nil])
([nil nil ((4077 . 4085)) nil (25902 39839 826660 139000) 0 nil])
([nil nil ((4085 . 4086)) nil (25902 39839 826658 997000) 0 nil])
([nil nil ((4086 . 4099)) nil (25902 39839 826657 701000) 0 nil])
([nil nil ((4087 . 4097) (#("            " 0 12 (ws-butler-chg chg fontified nil)) . 4087) (undo-tree-id355 . -12) (4099 . 4100)) nil (25902 39839 826655 653000) 0 nil])
([nil nil ((4098 . 4109)) nil (25902 39839 826651 569000) 0 nil])
([nil nil ((4109 . 4113)) nil (25902 39839 826649 547000) 0 nil])
([nil nil ((4113 . 4114) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -4113) (4113 . 4115) (#("else" 0 1 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1 2 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified nil face font-lock-keyword-face)) . 4113) (undo-tree-id352 . -4) (undo-tree-id353 . -4) (undo-tree-id354 . -4) (4109 . 4113) 4113) nil (25902 39839 826647 224000) 0 nil])
([nil nil ((4114 . 4115)) nil (25902 39839 826640 69000) 0 nil])
([nil nil ((4115 . 4128)) nil (25902 39839 826638 942000) 0 nil])
([nil nil ((4128 . 4139)) nil (25902 39839 826637 527000) 0 nil])
([nil nil ((4139 . 4140)) nil (25902 39839 826636 202000) 0 nil])
([nil nil ((4140 . 4153)) nil (25902 39839 826634 830000) 0 nil])
([nil nil ((4153 . 4172)) nil (25902 39839 826633 580000) 0 nil])
([nil nil ((4172 . 4173)) nil (25902 39839 826632 309000) 0 nil])
([nil nil ((4173 . 4179)) nil (25902 39839 826631 85000) 0 nil])
([nil nil ((4179 . 4180)) nil (25902 39839 826629 882000) 0 nil])
([nil nil ((4180 . 4181)) nil (25902 39839 826627 547000) 0 nil])
([nil nil ((4181 . 4194)) nil (25902 39839 826626 172000) 0 nil])
([nil nil ((4182 . 4192) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 4182) (undo-tree-id351 . -12) (4194 . 4195)) nil (25902 39839 826624 370000) 0 nil])
([nil nil ((4193 . 4204)) nil (25902 39839 826619 253000) 0 nil])
([nil nil ((4204 . 4210)) nil (25902 39839 826617 49000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg)) . -4209) (undo-tree-id349 . -1) (undo-tree-id350 . -1) 4210) nil (25902 39839 826615 290000) 0 nil])
([nil nil ((4209 . 4210)) nil (25902 39839 826609 862000) 0 nil])
([nil nil ((4210 . 4221)) nil (25902 39839 826608 686000) 0 nil])
([nil nil ((4211 . 4222) (#("          " 0 10 (fontified t ws-butler-chg chg)) . 4211) (undo-tree-id348 . -10) 4221) nil (25902 39839 826606 719000) 0 nil])
([nil nil ((4222 . 4230)) nil (25902 39839 826600 945000) 0 nil])
([nil nil ((4212 . 4220) (#("          " 0 10 (fontified nil ws-butler-chg chg)) . 4212) (4230 . 4231)) nil (25902 39839 826599 162000) 0 nil])
([nil nil ((4229 . 4240)) nil (25902 39839 826597 270000) 0 nil])
([nil nil ((4240 . 4247)) nil (25902 39839 826596 65000) 0 nil])
([nil nil ((4247 . 4248)) nil (25902 39839 826594 859000) 0 nil])
([nil nil ((4248 . 4254)) nil (25902 39839 826593 702000) 0 nil])
([nil nil ((4254 . 4255)) nil (25902 39839 826592 245000) 0 nil])
([nil nil ((4275 . 4276) (nil syntax-table nil 4275 . 4276) (nil syntax-table (1) 4256 . 4257) (4274 . 4275) (nil syntax-table nil 4274 . 4275) (nil syntax-table (1) 4256 . 4257) (4273 . 4274) (nil syntax-table nil 4273 . 4274) (nil syntax-table (1) 4256 . 4257) (4272 . 4273) (nil syntax-table nil 4272 . 4273) (nil syntax-table (1) 4256 . 4257) (4271 . 4272) (nil syntax-table nil 4271 . 4272) (nil syntax-table (1) 4256 . 4257) (4270 . 4271) (nil syntax-table nil 4270 . 4271) (nil syntax-table (1) 4256 . 4257) (4269 . 4270) (nil syntax-table nil 4269 . 4270) (nil syntax-table (1) 4256 . 4257) (4268 . 4269) (nil syntax-table nil 4268 . 4269) (nil syntax-table (1) 4256 . 4257) (4267 . 4268) (nil syntax-table nil 4267 . 4268) (nil syntax-table (1) 4256 . 4257) (4266 . 4267) (nil syntax-table nil 4266 . 4267) (nil syntax-table (1) 4256 . 4257) (4265 . 4266) (nil syntax-table nil 4265 . 4266) (nil syntax-table (1) 4256 . 4257) (4264 . 4265) (nil syntax-table nil 4264 . 4265) (nil syntax-table (1) 4256 . 4257) (4263 . 4264) (nil syntax-table nil 4263 . 4264) (nil syntax-table (1) 4256 . 4257) (4262 . 4263) (nil syntax-table nil 4262 . 4263) (nil syntax-table (1) 4256 . 4257) (4261 . 4262) (nil syntax-table nil 4261 . 4262) (nil syntax-table (1) 4256 . 4257) (4260 . 4261) (nil syntax-table nil 4260 . 4261) (nil syntax-table (1) 4256 . 4257) (4259 . 4260) (nil syntax-table nil 4259 . 4260) (nil syntax-table (1) 4256 . 4257) (4258 . 4259) (nil syntax-table nil 4258 . 4259) (nil syntax-table (1) 4256 . 4257) (4257 . 4258) (nil syntax-table nil 4257 . 4258) (nil syntax-table (1) 4256 . 4257) (4255 . 4257)) nil (25902 39839 826586 977000) 0 nil])
([nil nil ((4277 . 4278) (nil syntax-table nil 4277 . 4278) (nil syntax-table (1) 4256 . 4257) (4276 . 4277) (nil syntax-table nil 4276 . 4277) (nil syntax-table (1) 4256 . 4257)) nil (25902 39839 826564 30000) 0 nil])
([nil nil ((4278 . 4279) (nil syntax-table nil 4278 . 4279) (nil syntax-table (1) 4256 . 4257)) nil (25902 39839 826560 436000) 0 nil])
([nil nil ((4283 . 4284) (nil syntax-table (1) 4256 . 4257) (4282 . 4283) (nil syntax-table nil 4282 . 4283) (nil syntax-table (1) 4256 . 4257) (4281 . 4282) (nil syntax-table nil 4281 . 4282) (nil syntax-table (1) 4256 . 4257) (4280 . 4281) (nil syntax-table nil 4280 . 4281) (nil syntax-table (1) 4256 . 4257) (4279 . 4280) (nil syntax-table nil 4279 . 4280) (nil syntax-table (1) 4256 . 4257)) nil (25902 39839 826556 650000) 0 nil])
([nil nil ((#("x" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -4281) (undo-tree-id345 . -1) (nil syntax-table nil 4282 . 4283) (nil syntax-table (1) 4256 . 4257) (#("\\" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -4282) (undo-tree-id346 . -1) (nil syntax-table (1) 4256 . 4257) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -4283) (undo-tree-id347 . -1) (nil syntax-table nil 4284 . 4285) (nil syntax-table (1) 4256 . 4257)) nil (25902 39839 826546 190000) 0 nil])
([nil nil ((4284 . 4285) (nil syntax-table nil 4284 . 4285) (nil syntax-table (1) 4256 . 4257) (4283 . 4284) (nil syntax-table (1) 4256 . 4257) (4282 . 4283) (nil syntax-table nil 4282 . 4283) (nil syntax-table (1) 4256 . 4257) (4281 . 4282) (nil syntax-table nil 4281 . 4282) (nil syntax-table (1) 4256 . 4257)) nil (25902 39839 826479 794000) 0 nil])
([nil nil ((4285 . 4286)) nil (25902 39839 826477 87000) 0 nil])
([nil nil ((4286 . 4293)) nil (25902 39839 826476 358000) 0 nil])
([nil nil ((4293 . 4294)) nil (25902 39839 826475 718000) 0 nil])
([nil nil ((4294 . 4295)) nil (25902 39839 826475 59000) 0 nil])
([nil nil ((4295 . 4306)) nil (25902 39839 826474 437000) 0 nil])
([nil nil ((4306 . 4312)) nil (25902 39839 826473 730000) 0 nil])
([nil nil ((4312 . 4314)) nil (25902 39839 826473 42000) 0 nil])
([nil nil ((4314 . 4315)) nil (25902 39839 826472 411000) 0 nil])
([nil nil ((4315 . 4326)) nil (25902 39839 826471 707000) 0 nil])
([nil nil ((4316 . 4324) (#("          " 0 10 (ws-butler-chg chg fontified nil)) . 4316) (undo-tree-id344 . -10) (4326 . 4327)) nil (25902 39839 826470 822000) 0 nil])
([nil nil ((4325 . 4332)) nil (25902 39839 826469 196000) 0 nil])
([nil nil ((4326 . 4330) (#("      " 0 6 (ws-butler-chg chg fontified nil)) . 4326) (undo-tree-id343 . -6) (4332 . 4333)) nil (25902 39839 826468 245000) 0 nil])
([nil nil ((4331 . 4334)) nil (25902 39839 826466 504000) 0 nil])
([nil nil ((4332 . 4335) (#("  " 0 2 (ws-butler-chg chg fontified t)) . 4332) (undo-tree-id342 . -2) 4334) nil (25902 39839 826465 597000) 0 nil])
([nil nil ((4335 . 4338)) nil (25902 39839 826463 891000) 0 nil])
([nil nil ((4338 . 4339)) nil (25902 39839 826463 217000) 0 nil])
([nil nil ((4339 . 4343)) nil (25902 39839 826462 552000) 0 nil])
([nil nil ((4343 . 4352)) nil (25902 39839 826461 791000) 0 nil])
([nil nil ((4352 . 4353)) nil (25902 39839 826461 49000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -4351) (undo-tree-id340 . -1) (#(")" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face))) . -4352) (undo-tree-id341 . -1) 4353) nil (25902 39839 826460 95000) 0 nil])
([nil nil ((4351 . 4352)) nil (25902 39839 826457 779000) 0 nil])
([nil nil ((4352 . 4353)) nil (25902 39839 826457 70000) 0 nil])
([nil nil ((4353 . 4354)) nil (25902 39839 826456 389000) 0 nil])
([nil nil ((4354 . 4359)) nil (25902 39839 826455 713000) 0 nil])
([nil nil ((4359 . 4368)) nil (25902 39839 826454 678000) 0 nil])
([nil nil ((4368 . 4369)) nil (25902 39839 826453 922000) 0 nil])
([nil nil ((4369 . 4373)) nil (25902 39839 826453 159000) 0 nil])
([nil nil ((4373 . 4374)) nil (25902 39839 826452 442000) 0 nil])
([nil nil ((4374 . 4375)) nil (25902 39839 826451 743000) 0 nil])
([nil nil ((4375 . 4380)) nil (25902 39839 826451 36000) 0 nil])
([nil nil ((4376 . 4378) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 4376) (undo-tree-id339 . -4) (4380 . 4381)) nil (25902 39839 826450 93000) 0 nil])
([nil nil ((4379 . 4382)) nil (25902 39839 826448 282000) 0 nil])
([nil nil ((4380 . 4383) (#("  " 0 2 (ws-butler-chg chg fontified t)) . 4380) (undo-tree-id337 . -2) (undo-tree-id338 . -2) 4382) nil (25902 39839 826447 336000) 0 nil])
([nil nil ((4383 . 4385)) nil (25902 39839 826445 34000) 0 nil])
([nil nil ((4385 . 4386)) nil (25902 39839 826444 311000) 0 nil])
([nil nil ((4386 . 4399)) nil (25902 39839 826443 556000) 0 nil])
([nil nil ((4399 . 4400)) nil (25902 39839 826442 806000) 0 nil])
([nil nil ((4400 . 4401)) nil (25902 39839 826441 987000) 0 nil])
([nil nil ((4401 . 4406)) nil (25902 39839 826441 168000) 0 nil])
([nil nil ((4406 . 4411)) nil (25902 39839 826440 463000) 0 nil])
([nil nil ((4411 . 4412) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -4411) (4411 . 4413) (#("while" 0 1 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1 3 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 4 5 (ws-butler-chg chg fontified nil face font-lock-keyword-face)) . 4411) (undo-tree-id335 . -3) (undo-tree-id336 . -5) (4406 . 4411) 4411) nil (25902 39839 826439 289000) 0 nil])
([nil nil ((4412 . 4421)) nil (25902 39839 826436 316000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg)) . -4420) (undo-tree-id333 . -1) (undo-tree-id334 . -1) 4421) nil (25902 39839 826435 370000) 0 nil])
([nil nil ((4420 . 4425)) nil (25902 39839 826433 73000) 0 nil])
([nil nil ((4425 . 4429)) nil (25902 39839 826432 18000) 0 nil])
([nil nil ((4429 . 4430)) nil (25902 39839 826431 194000) 0 nil])
([nil nil ((4430 . 4441)) nil (25902 39839 826430 506000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg)) . -4440) (undo-tree-id332 . -1) 4441) nil (25902 39839 826429 546000) 0 nil])
([nil nil ((4440 . 4443)) nil (25902 39839 826428 8000) 0 nil])
([nil nil ((4443 . 4449)) nil (25902 39839 826427 260000) 0 nil])
([nil nil ((4449 . 4450)) nil (25902 39839 826426 555000) 0 nil])
([nil nil ((4450 . 4451)) nil (25902 39839 826425 834000) 0 nil])
([nil nil ((4451 . 4458)) nil (25902 39839 826425 147000) 0 nil])
([nil nil ((4458 . 4466)) nil (25902 39839 826424 482000) 0 nil])
([nil nil ((4466 . 4467)) nil (25902 39839 826423 727000) 0 nil])
([nil nil ((4467 . 4471)) nil (25902 39839 826422 875000) 0 nil])
([nil nil ((4471 . 4479)) nil (25902 39839 826422 12000) 0 nil])
([nil nil ((#("optind]" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-5-face))) . -4472) (undo-tree-id330 . -5) (undo-tree-id331 . -7) 4479) nil (25902 39839 826421 43000) 0 nil])
([nil nil ((#("argv[" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-5-face))) . -4467) (undo-tree-id327 . -3) (undo-tree-id328 . -5) (undo-tree-id329 . -5) 4472) nil (25902 39839 826418 700000) 0 nil])
([nil nil ((#("ops(" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-4-face))) . -4463) (undo-tree-id324 . -4) (undo-tree-id325 . -4) (undo-tree-id326 . -4) 4467) nil (25902 39839 826415 339000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg)) . -4458) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -4459) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -4460) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -4461) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -4462) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) 4463) nil (25902 39839 826411 16000) 0 nil])
([nil nil ((4458 . 4460)) nil (25902 39839 826400 133000) 0 nil])
([nil nil ((4460 . 4479)) nil (25902 39839 826399 422000) 0 nil])
([nil nil ((4479 . 4492)) nil (25902 39839 826398 740000) 0 nil])
([nil nil ((4492 . 4499)) nil (25902 39839 826397 973000) 0 nil])
([nil nil ((4499 . 4505)) nil (25902 39839 826397 240000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -4492) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . -4493) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . -4494) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . -4495) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . -4496) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . -4497) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . -4498) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg c-is-sws t)) . -4499) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -4500) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -4501) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -4502) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -4503) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -4504) (undo-tree-id308 . -1) 4505) nil (25902 39839 826393 984000) 0 nil])
([nil nil ((4492 . 4493)) nil (25902 39839 826374 57000) 0 nil])
([nil nil ((4493 . 4494)) nil (25902 39839 826373 371000) 0 nil])
([nil nil ((4494 . 4505)) nil (25902 39839 826372 544000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4504) (undo-tree-id283 . -1) 4505) nil (25902 39839 826371 309000) 0 nil])
([nil nil ((4504 . 4514)) nil (25902 39839 826369 680000) 0 nil])
([nil nil ((4514 . 4521)) nil (25902 39839 826368 667000) 0 nil])
([nil nil ((4515 . 4519) (#("      " 0 1 (fontified nil ws-butler-chg chg c-is-sws t c-in-sws t) 1 6 (fontified nil ws-butler-chg chg c-is-sws t c-in-sws t)) . 4515) (undo-tree-id282 . -6) (4521 . 4522)) nil (25902 39839 826367 632000) 0 nil])
([nil nil ((4520 . 4525)) nil (25902 39839 826365 798000) 0 nil])
([nil nil ((4521 . 4523) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 4521) (undo-tree-id281 . -4) (4525 . 4526)) nil (25902 39839 826364 728000) 0 nil])
([nil nil ((4524 . 4527)) nil (25902 39839 826362 812000) 0 nil])
([nil nil ((4527 . 4531)) nil (25902 39839 826361 969000) 0 nil])
([nil nil ((4531 . 4532) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -4531) (4531 . 4533) (#("else" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 4531) (undo-tree-id278 . -4) (undo-tree-id279 . -4) (undo-tree-id280 . -4) (4527 . 4531) 4531) nil (25902 39839 826360 629000) 0 nil])
([nil nil ((4532 . 4533)) nil (25902 39839 826356 967000) 0 nil])
([nil nil ((4533 . 4538)) nil (25902 39839 826356 294000) 0 nil])
([nil nil ((4538 . 4540)) nil (25902 39839 826355 662000) 0 nil])
([nil nil ((4540 . 4560)) nil (25902 39839 826355 36000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4559) (undo-tree-id277 . -1) 4560) nil (25902 39839 826354 229000) 0 nil])
([nil nil ((4559 . 4560)) nil (25902 39839 826352 745000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4559) (undo-tree-id276 . -1) 4560) nil (25902 39839 826351 911000) 0 nil])
([nil nil ((4514 . 4521)) nil (25902 39839 826350 283000) 0 nil])
([nil nil ((4521 . 4523)) nil (25902 39839 826349 449000) 0 nil])
([nil nil ((4523 . 4532)) nil (25902 39839 826348 782000) 0 nil])
([nil nil ((1009 . 1010)) nil (25902 39839 826348 109000) 0 nil])
([nil nil ((1010 . 1012)) nil (25902 39839 826347 392000) 0 nil])
([nil nil ((1012 . 1018)) nil (25902 39839 826346 294000) 0 nil])
([nil nil ((1018 . 1020)) nil (25902 39839 826345 622000) 0 nil])
([nil nil ((#("(" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1018) (undo-tree-id274 . -1) (#("(" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1019) (undo-tree-id275 . -1) 1020) nil (25902 39839 826344 525000) 0 nil])
([nil nil ((1018 . 1020)) nil (25902 39839 826342 175000) 0 nil])
([nil nil ((1020 . 1025)) nil (25902 39839 826341 449000) 0 nil])
([nil nil ((1021 . 1023)) nil (25902 39839 826340 735000) 0 nil])
([nil nil ((1024 . 1025)) nil (25902 39839 826340 11000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t face font-lock-comment-face)) . 1025) (#(" " 0 1 (ws-butler-chg delete fontified t face font-lock-comment-face)) . 1025) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 1025)) nil (25902 39839 826338 823000) 0 nil])
([nil nil ((1025 . 1039)) nil (25902 39839 826337 633000) 0 nil])
([nil nil ((1039 . 1049)) nil (25902 39839 826336 906000) 0 nil])
([nil nil ((1049 . 1050)) nil (25902 39839 826336 113000) 0 nil])
([nil nil ((1050 . 1066)) nil (25902 39839 826335 302000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1063) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1064) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1065) (undo-tree-id273 . -1) 1066) nil (25902 39839 826333 912000) 0 nil])
([nil nil ((#("al " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1060) (undo-tree-id266 . -2) (undo-tree-id267 . -3) (undo-tree-id268 . -3) 1063) nil (25902 39839 826329 140000) 0 nil])
([nil nil ((#("for " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1056) (undo-tree-id263 . -4) (undo-tree-id264 . -4) (undo-tree-id265 . -4) 1060) nil (25902 39839 826325 326000) 0 nil])
([nil nil ((#("wait " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1051) (undo-tree-id260 . -5) (undo-tree-id261 . -5) (undo-tree-id262 . -5) 1056) nil (25902 39839 826321 657000) 0 nil])
([nil nil ((#("children, " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 1 2 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 2 3 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 3 4 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face) 4 5 (ws-butler-chg chg fontified t face font-lock-comment-face) 5 6 (ws-butler-chg chg fontified t face font-lock-comment-face) 6 7 (ws-butler-chg chg fontified t face font-lock-comment-face) 7 8 (ws-butler-chg chg fontified t face font-lock-comment-face) 8 9 (ws-butler-chg chg fontified t face font-lock-comment-face) 9 10 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1041) (undo-tree-id257 . -10) (undo-tree-id258 . -10) (undo-tree-id259 . -10) 1051) nil (25902 39839 826317 908000) 0 nil])
([nil nil ((1041 . 1051)) nil (25902 39839 826314 699000) 0 nil])
([nil nil ((#("i" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -1049) (undo-tree-id255 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -1050) (undo-tree-id256 . -1) 1051) nil (25902 39839 826313 486000) 0 nil])
([nil nil ((1049 . 1070)) nil (25902 39839 826310 431000) 0 nil])
([nil nil ((1070 . 1071)) nil (25902 39839 826309 637000) 0 nil])
([nil nil ((1353 . 1354)) nil (25902 39839 826308 886000) 0 nil])
([nil nil ((1354 . 1356)) nil (25902 39839 826307 774000) 0 nil])
([nil nil ((1356 . 1362)) nil (25902 39839 826306 933000) 0 nil])
([nil nil ((1362 . 1364)) nil (25902 39839 826306 188000) 0 nil])
([nil nil ((1364 . 1365)) nil (25902 39839 826305 348000) 0 nil])
([nil nil ((1365 . 1371)) nil (25902 39839 826304 609000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1369) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -1370) (undo-tree-id253 . -1) (undo-tree-id254 . -1) 1371) nil (25902 39839 826302 683000) 0 nil])
([nil nil ((1369 . 1389)) nil (25902 39839 826290 243000) 0 nil])
([nil nil ((1389 . 1398)) nil (25902 39839 826288 900000) 0 nil])
([nil nil ((1398 . 1399)) nil (25902 39839 826286 470000) 0 nil])
([nil nil ((1399 . 1400)) nil (25902 39839 826284 992000) 0 nil])
([nil nil ((1400 . 1421)) nil (25902 39839 826283 627000) 0 nil])
([nil nil ((1421 . 1424)) nil (25902 39839 826281 765000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg)) . 3449) 1424) nil (25902 39839 826275 354000) 0 nil])
([nil nil ((4663 . 4664) (t 25902 39839 848640 379000)) nil (25902 39887 869416 452000) 0 nil])
([nil nil ((4664 . 4676)) nil (25902 39887 869415 535000) 0 nil])
([nil nil ((4676 . 4677)) nil (25902 39887 869414 741000) 0 nil])
([nil nil ((4677 . 4692)) nil (25902 39887 869413 378000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4687) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4688) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4689) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4690) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -4691) (undo-tree-id527 . -1) (undo-tree-id528 . -1) 4692) nil (25902 39887 869411 10000) 0 nil])
([nil nil ((4687 . 4692)) nil (25902 39887 869400 263000) 0 nil])
([nil nil ((4692 . 4693)) nil (25902 39887 869399 409000) 0 nil])
([nil nil ((4693 . 4705)) nil (25902 39887 869398 580000) 0 nil])
([nil nil ((4705 . 4706)) nil (25902 39887 869397 635000) 0 nil])
([nil nil ((4706 . 4707)) nil (25902 39887 869396 721000) 0 nil])
([nil nil ((4752 . 4757)) nil (25902 39887 869395 806000) 0 nil])
([nil nil ((4757 . 4759)) nil (25902 39887 869394 800000) 0 nil])
([nil nil ((4759 . 4766)) nil (25902 39887 869393 862000) 0 nil])
([nil nil ((4766 . 4768)) nil (25902 39887 869392 938000) 0 nil])
([nil nil ((4768 . 4769)) nil (25902 39887 869392 62000) 0 nil])
([nil nil ((4769 . 4773)) nil (25902 39887 869391 118000) 0 nil])
([nil nil ((4773 . 4774)) nil (25902 39887 869390 289000) 0 nil])
([nil nil ((4774 . 4789)) nil (25902 39887 869389 165000) 0 nil])
([nil nil ((4789 . 4790)) nil (25902 39887 869388 464000) 0 nil])
([nil nil ((4790 . 4798)) nil (25902 39887 869387 485000) 0 nil])
([nil nil ((4798 . 4802)) nil (25902 39887 869386 694000) 0 nil])
([nil nil ((4802 . 4803)) nil (25902 39887 869385 864000) 0 nil])
([nil nil ((4803 . 4804)) nil (25902 39887 869384 931000) 0 nil])
([nil nil ((4804 . 4809)) nil (25902 39887 869383 919000) 0 nil])
([nil nil ((4805 . 4807) (#("    " 0 1 (fontified nil ws-butler-chg chg c-is-sws t c-in-sws t) 1 4 (fontified nil ws-butler-chg chg c-is-sws t c-in-sws t)) . 4805) (undo-tree-id515 . -4) (4809 . 4810)) nil (25902 39887 869382 848000) 0 nil])
([nil nil ((4808 . 4811)) nil (25902 39887 869380 725000) 0 nil])
([nil nil ((4809 . 4812) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 4809) (undo-tree-id514 . -2) 4811) nil (25902 39887 869379 410000) 0 nil])
([nil nil ((4812 . 4820)) nil (25902 39887 869376 992000) 0 nil])
([nil nil ((4820 . 4821)) nil (25902 39887 869375 910000) 0 nil])
([nil nil ((4821 . 4824)) nil (25902 39887 869374 454000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil ws-butler-chg chg)) . 4822) (undo-tree-id504 . -2) (undo-tree-id505 . -2) (undo-tree-id506 . -2) (undo-tree-id507 . -2) (undo-tree-id508 . -2) (undo-tree-id509 . -2) (undo-tree-id510 . -2) (undo-tree-id511 . -2) (undo-tree-id512 . -2) (undo-tree-id513 . -2) (4824 . 4825)) nil (25902 39887 869370 273000) 0 nil])
([nil nil ((3734 . 3737) (t 25902 39887 888550 495000)) nil (25902 39905 846739 952000) 0 nil])
([nil nil ((3737 . 3745)) nil (25902 39905 846738 274000) 0 nil])
([nil nil ((3745 . 3746)) nil (25902 39905 846733 731000) 0 nil])
([nil nil ((1 . 2) (t 25902 39905 868517 339000)) nil (25902 40045 98905 150000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t ws-butler-chg chg)) . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) 2) nil (25902 40045 98903 346000) 0 nil])
([nil nil ((#("// Run code for stdi" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 2 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 4 (c-in-sws t fontified t face font-lock-comment-face) 4 5 (c-in-sws t fontified t face font-lock-comment-face) 5 6 (c-in-sws t fontified t face font-lock-comment-face) 6 7 (c-in-sws t fontified t face font-lock-comment-face) 7 8 (c-in-sws t fontified t face font-lock-comment-face) 8 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (c-in-sws t fontified t face font-lock-comment-face) 10 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 13 (c-in-sws t fontified t face font-lock-comment-face) 13 14 (c-in-sws t fontified t face font-lock-comment-face) 14 15 (c-in-sws t fontified t face font-lock-comment-face) 15 16 (c-in-sws t fontified t face font-lock-comment-face) 16 17 (c-in-sws t fontified t face font-lock-comment-face) 17 18 (c-in-sws t fontified t face font-lock-comment-face) 18 19 (c-in-sws t fontified t face font-lock-comment-face) 19 20 (c-in-sws t fontified t face font-lock-comment-face)) . 4743) (undo-tree-id531 . -20) (undo-tree-id532 . -20) (undo-tree-id533 . -20) (undo-tree-id534 . -20)) nil (25902 40045 98899 621000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 4743) (#("/" 0 1 (fontified t ws-butler-chg delete)) . 4743) (#("/" 0 1 (c-in-sws t fontified t c-is-sws t ws-butler-chg delete face font-lock-comment-delimiter-face)) . 4743) (#(" " 0 1 (c-in-sws t fontified t ws-butler-chg delete)) . 4743) (#(" " 0 1 (c-in-sws t fontified t ws-butler-chg delete)) . 4743) (#(" " 0 1 (c-in-sws t fontified t ws-butler-chg delete)) . 4743) (#(" " 0 1 (c-in-sws t fontified t ws-butler-chg delete)) . 4743) (#("
" 0 1 (fontified t ws-butler-chg delete)) . 4743) (undo-tree-id529 . -1) (#("n" 0 1 (fontified t ws-butler-chg delete)) . 4743) (undo-tree-id530 . -1)) nil (25902 40045 98891 651000) 0 nil])
([nil nil ((4594 . 4601) (t 25902 40045 116268 489000)) nil (25902 40362 542548 986000) 0 nil])
([nil nil ((4595 . 4602) (#("      " 0 6 (fontified t ws-butler-chg chg)) . 4595) (undo-tree-id651 . -6) 4601) nil (25902 40362 542547 794000) 0 nil])
([nil nil ((4596 . 4603) (#("      " 0 6 (fontified t ws-butler-chg chg)) . 4596) (undo-tree-id650 . -6) 4602) nil (25902 40362 542545 690000) 0 nil])
([nil nil ((4597 . 4604) (#("      " 0 6 (fontified t ws-butler-chg chg)) . 4597) (undo-tree-id649 . -6) 4603) nil (25902 40362 542543 771000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t ws-butler-chg chg)) . 4598) (undo-tree-id648 . -6) 4604) nil (25902 40362 542541 846000) 0 nil])
([nil nil ((4595 . 4601)) nil (25902 40362 542540 25000) 0 nil])
([nil nil ((4595 . 4602) (#("      " 0 6 (fontified t ws-butler-chg chg)) . 4595) (undo-tree-id647 . -6) 4601) nil (25902 40362 542538 951000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t ws-butler-chg chg)) . 4596) (undo-tree-id646 . -6) 4602) nil (25902 40362 542536 509000) 0 nil])
([nil nil ((4595 . 4601)) nil (25902 40362 542534 699000) 0 nil])
([nil nil ((4595 . 4602) (#("      " 0 6 (fontified t ws-butler-chg chg)) . 4595) (undo-tree-id645 . -6) 4601) nil (25902 40362 542533 456000) 0 nil])
([nil nil ((4602 . 4606)) nil (25902 40362 542531 823000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t ws-butler-chg chg)) . -4602) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -4603) (undo-tree-id642 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -4604) (undo-tree-id643 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -4605) (undo-tree-id644 . -1) 4606) nil (25902 40362 542530 324000) 0 nil])
([nil nil ((4602 . 4610)) nil (25902 40362 542524 543000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg)) . -4602) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -4603) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -4604) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4605) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -4606) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -4607) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -4608) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -4609) (undo-tree-id639 . -1) 4610) nil (25902 40362 542522 78000) 0 nil])
([nil nil ((3892 . 3895)) nil (25902 40362 542504 672000) 0 nil])
([nil nil ((3895 . 3904)) nil (25902 40362 542503 957000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -3903) (undo-tree-id618 . -1) 3904) nil (25902 40362 542503 30000) 0 nil])
([nil nil ((3903 . 3904)) nil (25902 40362 542501 332000) 0 nil])
([nil nil ((3904 . 3905)) nil (25902 40362 542500 479000) 0 nil])
([nil nil ((3904 . 3906)) nil (25902 40362 542499 657000) 0 nil])
([nil nil ((4617 . 4629)) nil (25902 40362 542498 885000) 0 nil])
([nil nil ((4629 . 4631)) nil (25902 40362 542498 194000) 0 nil])
([nil nil ((4631 . 4640)) nil (25902 40362 542497 549000) 0 nil])
([nil nil ((4632 . 4641) (#("        " 0 8 (ws-butler-chg chg fontified t)) . 4632) (undo-tree-id617 . -8) 4640) nil (25902 40362 542496 646000) 0 nil])
([nil nil ((4641 . 4642)) nil (25902 40362 542494 920000) 0 nil])
([nil nil ((4631 . 4632)) nil (25902 40362 542494 242000) 0 nil])
([nil nil ((4634 . 4638) (#("        " 0 8 (ws-butler-chg chg fontified t)) . 4634) 4643) nil (25902 40362 542493 282000) 0 nil])
([nil nil ((4639 . 4640)) nil (25902 40362 542492 166000) 0 nil])
([nil nil ((4640 . 4642)) nil (25902 40362 542491 484000) 0 nil])
([nil nil ((4642 . 4644)) nil (25902 40362 542490 788000) 0 nil])
([nil nil ((#("C" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -4643) (undo-tree-id615 . -1) (undo-tree-id616 . -1) 4644) nil (25902 40362 542489 764000) 0 nil])
([nil nil ((4643 . 4664)) nil (25902 40362 542487 532000) 0 nil])
([nil nil ((4664 . 4680)) nil (25902 40362 542486 866000) 0 nil])
([nil nil ((4680 . 4701)) nil (25902 40362 542486 178000) 0 nil])
([nil nil ((4701 . 4712)) nil (25902 40362 542485 490000) 0 nil])
([nil nil ((#("m" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -4709) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (#("y" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -4710) (undo-tree-id613 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -4711) (undo-tree-id614 . -1) 4712) nil (25902 40362 542484 268000) 0 nil])
([nil nil ((4709 . 4711)) nil (25902 40362 542480 661000) 0 nil])
([nil nil ((4709 . 4717) (#("fi" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t) 1 2 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -4709) (undo-tree-id608 . -2) (undo-tree-id609 . -2) (undo-tree-id610 . -2) 4711) nil (25902 40362 542479 659000) 0 nil])
([nil nil ((4717 . 4729)) nil (25902 40362 542476 814000) 0 nil])
([nil nil ((4729 . 4730)) nil (25902 40362 542476 100000) 0 nil])
([nil nil ((4730 . 4731) (#("while" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-comment-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-comment-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-comment-face) 4 5 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . 4730) (undo-tree-id605 . -1) (undo-tree-id606 . -4) (undo-tree-id607 . -5) (4725 . 4730) 4730) nil (25902 40362 542474 906000) 0 nil])
([nil nil ((4731 . 4742)) nil (25902 40362 542471 601000) 0 nil])
([nil nil ((4742 . 4753)) nil (25902 40362 542470 884000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4750) (undo-tree-id602 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4751) (undo-tree-id603 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4752) (undo-tree-id604 . -1) 4753) nil (25902 40362 542469 698000) 0 nil])
([nil nil ((4750 . 4751)) nil (25902 40362 542466 513000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -4750) (undo-tree-id601 . -1) 4751) nil (25902 40362 542465 510000) 0 nil])
([nil nil ((4750 . 4771)) nil (25902 40362 542463 900000) 0 nil])
([nil nil ((4771 . 4778)) nil (25902 40362 542462 847000) 0 nil])
([nil nil ((#("variable" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 1 2 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 2 3 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 3 4 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 4 5 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 5 6 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 6 7 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 7 8 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -4770) (undo-tree-id598 . -2) (undo-tree-id599 . -2) (undo-tree-id600 . -8) 4778) nil (25902 40362 542461 854000) 0 nil])
([nil nil ((#("the " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4766) (undo-tree-id595 . -4) (undo-tree-id596 . -4) (undo-tree-id597 . -4) 4770) nil (25902 40362 542457 218000) 0 nil])
([nil nil ((#("inherit " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 5 6 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 6 7 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 7 8 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4758) (undo-tree-id592 . -8) (undo-tree-id593 . -8) (undo-tree-id594 . -8) 4766) nil (25902 40362 542454 119000) 0 nil])
([nil nil ((4758 . 4776)) nil (25902 40362 542451 209000) 0 nil])
([nil nil ((#("variables." 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 1 2 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 2 3 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 3 4 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 4 5 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 5 6 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 6 7 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 7 8 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 8 9 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 9 10 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -4766) (undo-tree-id589 . -2) (undo-tree-id590 . -2) (undo-tree-id591 . -10) 4776) nil (25902 40362 542449 935000) 0 nil])
([nil nil ((#("inherit " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 5 6 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 6 7 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 7 8 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4758) (undo-tree-id586 . -8) (undo-tree-id587 . -8) (undo-tree-id588 . -8) 4766) nil (25902 40362 542446 643000) 0 nil])
([nil nil ((#("will " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4753) (undo-tree-id583 . -5) (undo-tree-id584 . -5) (undo-tree-id585 . -5) 4758) nil (25902 40362 542443 542000) 0 nil])
([nil nil ((#("child " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 5 6 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4747) (undo-tree-id580 . -6) (undo-tree-id581 . -6) (undo-tree-id582 . -6) 4753) nil (25902 40362 542440 278000) 0 nil])
([nil nil ((#("each " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4742) (undo-tree-id577 . -5) (undo-tree-id578 . -5) (undo-tree-id579 . -5) 4747) nil (25902 40362 542436 897000) 0 nil])
([nil nil ((#("since " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 5 6 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4736) (undo-tree-id574 . -6) (undo-tree-id575 . -6) (undo-tree-id576 . -6) 4742) nil (25902 40362 542432 24000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4735) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) 4736) nil (25902 40362 542428 643000) 0 nil])
([nil nil ((4735 . 4736)) nil (25902 40362 542425 373000) 0 nil])
([nil nil ((4610 . 4617)) nil (25902 40362 542424 489000) 0 nil])
([nil nil ((#("      " 0 6 (ws-butler-chg chg fontified t)) . 4611) (undo-tree-id570 . -6) 4617) nil (25902 40362 542423 552000) 0 nil])
([nil nil ((4634 . 4641)) nil (25902 40362 542421 975000) 0 nil])
([nil nil ((#("      " 0 6 (ws-butler-chg chg fontified t)) . 4635) (undo-tree-id569 . -6) 4641) nil (25902 40362 542421 88000) 0 nil])
([nil nil ((4634 . 4640)) nil (25902 40362 542419 390000) 0 nil])
([nil nil ((4640 . 4643)) nil (25902 40362 542418 701000) 0 nil])
([nil nil ((4643 . 4644)) nil (25902 40362 542417 924000) 0 nil])
([nil nil ((4644 . 4654)) nil (25902 40362 542417 241000) 0 nil])
([nil nil ((4654 . 4655)) nil (25902 40362 542416 547000) 0 nil])
([nil nil ((4655 . 4656)) nil (25902 40362 542415 728000) 0 nil])
([nil nil ((4656 . 4657)) nil (25902 40362 542414 914000) 0 nil])
([nil nil ((4657 . 4666)) nil (25902 40362 542414 169000) 0 nil])
([nil nil ((4666 . 4672)) nil (25902 40362 542413 324000) 0 nil])
([nil nil ((4672 . 4673)) nil (25902 40362 542412 361000) 0 nil])
([nil nil ((4673 . 4675)) nil (25902 40362 542411 363000) 0 nil])
([nil nil ((#("o" 0 1 (ws-butler-chg chg fontified t)) . -4673) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -4674) (undo-tree-id567 . -1) (undo-tree-id568 . -1) 4675) nil (25902 40362 542409 940000) 0 nil])
([nil nil ((4675 . 4676) (nil syntax-table nil 4675 . 4676) (nil syntax-table (1) 4673 . 4674) (4674 . 4675) (nil syntax-table nil 4674 . 4675) (nil syntax-table (1) 4673 . 4674) (4673 . 4674)) nil (25902 40362 542404 843000) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -4675) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (nil syntax-table nil 4676 . 4677) (nil syntax-table (1) 4673 . 4674)) nil (25902 40362 542402 668000) 0 nil])
([nil nil ((4675 . 4676) (nil syntax-table nil 4675 . 4676) (nil syntax-table (1) 4673 . 4674)) nil (25902 40362 542399 134000) 0 nil])
([nil nil ((4676 . 4677) (nil syntax-table nil 4676 . 4677) (nil syntax-table (1) 4673 . 4674)) nil (25902 40362 542397 838000) 0 nil])
([nil nil ((4679 . 4680) (nil syntax-table nil 4679 . 4680) (nil syntax-table (1) 4673 . 4674) (4678 . 4679) (nil syntax-table nil 4678 . 4679) (nil syntax-table (1) 4673 . 4674) (4677 . 4678) (nil syntax-table nil 4677 . 4678) (nil syntax-table (1) 4673 . 4674)) nil (25902 40362 542396 246000) 0 nil])
([nil nil ((4680 . 4681) (nil syntax-table nil 4680 . 4681) (nil syntax-table (1) 4673 . 4674)) nil (25902 40362 542393 816000) 0 nil])
([nil nil ((4681 . 4682) (nil syntax-table nil 4681 . 4682) (nil syntax-table (1) 4673 . 4674)) nil (25902 40362 542392 403000) 0 nil])
([nil nil ((4683 . 4684) (nil syntax-table nil 4683 . 4684) (nil syntax-table (1) 4673 . 4674) (4682 . 4683) (nil syntax-table nil 4682 . 4683) (nil syntax-table (1) 4673 . 4674)) nil (25902 40362 542390 712000) 0 nil])
([nil nil ((4684 . 4685) (nil syntax-table nil 4684 . 4685) (nil syntax-table (1) 4673 . 4674)) nil (25902 40362 542388 393000) 0 nil])
([nil nil ((4685 . 4686) (nil syntax-table nil 4685 . 4686) (nil syntax-table (1) 4673 . 4674)) nil (25902 40362 542387 66000) 0 nil])
([nil nil ((4688 . 4690) (nil syntax-table nil 4688 . 4689) (nil syntax-table (1) 4673 . 4674) (4687 . 4688) (nil syntax-table nil 4687 . 4688) (nil syntax-table (1) 4673 . 4674) (4686 . 4687) (nil syntax-table nil 4686 . 4687) (nil syntax-table (1) 4673 . 4674)) nil (25902 40362 542385 266000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -4689) (undo-tree-id559 . -1) (undo-tree-id560 . -1) 4690) nil (25902 40362 542382 246000) 0 nil])
([nil nil ((4689 . 4690)) nil (25902 40362 542379 655000) 0 nil])
([nil nil ((4690 . 4691)) nil (25902 40362 542378 788000) 0 nil])
([nil nil ((4691 . 4699)) nil (25902 40362 542378 112000) 0 nil])
([nil nil ((4699 . 4700)) nil (25902 40362 542377 413000) 0 nil])
([nil nil ((4700 . 4701)) nil (25902 40362 542376 690000) 0 nil])
([nil nil ((4701 . 4710)) nil (25902 40362 542375 900000) 0 nil])
([nil nil ((4710 . 4711)) nil (25902 40362 542375 122000) 0 nil])
([nil nil ((4711 . 4712)) nil (25902 40362 542374 129000) 0 nil])
([nil nil ((#("O" 0 1 (ws-butler-chg chg fontified t)) . -4701) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (#("P" 0 1 (ws-butler-chg chg fontified t)) . -4702) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -4703) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (#("_" 0 1 (ws-butler-chg chg fontified t)) . -4704) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t)) . -4705) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -4706) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -4707) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -4708) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (#("y" 0 1 (ws-butler-chg chg fontified t)) . -4709) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (#("," 0 1 (ws-butler-chg chg fontified t)) . -4710) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -4711) (undo-tree-id557 . -1) (undo-tree-id558 . -1) 4712) nil (25902 40362 542370 102000) 0 nil])
([nil nil ((4701 . 4710)) nil (25902 40362 542347 720000) 0 nil])
([nil nil ((4710 . 4711)) nil (25902 40362 542346 770000) 0 nil])
([nil nil ((4711 . 4718)) nil (25902 40362 542345 799000) 0 nil])
([nil nil ((4718 . 4723)) nil (25902 40362 542344 999000) 0 nil])
([nil nil ((4723 . 4724)) nil (25902 40362 542344 185000) 0 nil])
([nil nil ((4724 . 4729)) nil (25902 40362 542343 433000) 0 nil])
([nil nil ((4729 . 4737)) nil (25902 40362 542342 406000) 0 nil])
([nil nil ((4737 . 4738)) nil (25902 40362 542341 43000) 0 nil])
([nil nil ((4738 . 4739)) nil (25902 40362 542336 775000) 0 nil])
([nil nil ((4739 . 4748) (t 25902 40362 559740 103000)) nil (25902 40365 405288 434000) 0 nil])
([nil nil ((4740 . 4746) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 4740) (undo-tree-id652 . -8) (undo-tree-id653 . -8) (undo-tree-id654 . -8) (undo-tree-id655 . -8) (undo-tree-id656 . -8) (undo-tree-id657 . -8) (undo-tree-id658 . -8) (undo-tree-id659 . -8) (undo-tree-id660 . -8) (undo-tree-id661 . -8) (undo-tree-id662 . -8) (undo-tree-id663 . -8) (undo-tree-id664 . -8) (undo-tree-id665 . -8) (undo-tree-id666 . -8) (undo-tree-id667 . -8) (undo-tree-id668 . -8) (4748 . 4749)) nil (25902 40365 405283 365000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -3282) (undo-tree-id669 . -1) (#("o" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -3283) (undo-tree-id670 . -1) (#("i" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -3284) (undo-tree-id671 . -1) (#("d" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -3285) (undo-tree-id672 . -1) 3286 (t 25902 40365 423735 517000)) nil (25902 40838 333845 70000) 0 nil])
([nil nil ((3282 . 3285)) nil (25902 40838 333829 317000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -4686) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) 4687 (t 25902 40838 363005 159000)) nil (25902 40853 569746 662000) 0 nil])
([nil nil ((4686 . 4687)) nil (25902 40853 569732 774000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4986) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (#(" " 0 1 (fontified t)) . -4987) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -4988) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) 4989 (t 25902 40853 590982 288000)) nil (25902 40957 574966 575000) 0 nil])
([nil nil ((4507 . 4508) (t 25902 40957 598826 797000)) nil (25902 41018 752453 177000) 0 nil])
([nil nil ((4747 . 4754) (t 25902 41018 994491 551000)) nil (25902 41084 640888 481000) 0 nil])
([nil nil ((4754 . 4758)) nil (25902 41084 640887 580000) 0 nil])
([nil nil ((4758 . 4759) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -4758) (4758 . 4760) (#("else" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 4758) (undo-tree-id937 . -3) (undo-tree-id938 . -4) (undo-tree-id939 . -4) (4754 . 4758) 4758) nil (25902 41084 640886 199000) 0 nil])
([nil nil ((4759 . 4762)) nil (25902 41084 640882 436000) 0 nil])
([nil nil ((4762 . 4763)) nil (25902 41084 640881 667000) 0 nil])
([nil nil ((4763 . 4768)) nil (25902 41084 640880 777000) 0 nil])
([nil nil ((4768 . 4769)) nil (25902 41084 640879 905000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -4767) (undo-tree-id935 . -1) (#(")" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-4-face))) . -4768) (undo-tree-id936 . -1) 4769) nil (25902 41084 640878 490000) 0 nil])
([nil nil ((4767 . 4768)) nil (25902 41084 640875 174000) 0 nil])
([nil nil ((4768 . 4769)) nil (25902 41084 640874 295000) 0 nil])
([nil nil ((4769 . 4770)) nil (25902 41084 640873 317000) 0 nil])
([nil nil ((4770 . 4771)) nil (25902 41084 640872 224000) 0 nil])
([nil nil ((4771 . 4780)) nil (25902 41084 640871 263000) 0 nil])
([nil nil ((4780 . 4786)) nil (25902 41084 640870 291000) 0 nil])
([nil nil ((4786 . 4787)) nil (25902 41084 640869 318000) 0 nil])
([nil nil ((4794 . 4795) (nil syntax-table nil 4794 . 4795) (nil syntax-table (1) 4787 . 4788) (4793 . 4794) (nil syntax-table nil 4793 . 4794) (nil syntax-table (1) 4787 . 4788) (4792 . 4793) (nil syntax-table nil 4792 . 4793) (nil syntax-table (1) 4787 . 4788) (4791 . 4792) (nil syntax-table nil 4791 . 4792) (nil syntax-table (1) 4787 . 4788) (4790 . 4791) (nil syntax-table nil 4790 . 4791) (nil syntax-table (1) 4787 . 4788) (4789 . 4790) (nil syntax-table nil 4789 . 4790) (nil syntax-table (1) 4787 . 4788) (4788 . 4789) (nil syntax-table nil 4788 . 4789) (nil syntax-table (1) 4787 . 4788) (4787 . 4788)) nil (25902 41084 640867 482000) 0 nil])
([nil nil ((4795 . 4796)) nil (25902 41084 640862 770000) 0 nil])
([nil nil ((4796 . 4797)) nil (25902 41084 640861 830000) 0 nil])
([nil nil ((4797 . 4806)) nil (25902 41084 640860 451000) 0 nil])
([nil nil ((4798 . 4804) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 4798) (undo-tree-id932 . -8) (undo-tree-id933 . -8) (undo-tree-id934 . -8) (4806 . 4807)) nil (25902 41084 640856 302000) 0 nil])
([nil nil ((#("optind] != '-'" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-4-face)) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face)) . -4593) (undo-tree-id1293 . -14) (undo-tree-id1294 . -14) (undo-tree-id1295 . -14) (undo-tree-id1296 . -14) (undo-tree-id1297 . -14) (undo-tree-id1298 . -14) (undo-tree-id1299 . -14) (undo-tree-id1300 . -14) (undo-tree-id1301 . -14) (undo-tree-id1302 . -14) (undo-tree-id1303 . -14) (undo-tree-id1304 . -14) (undo-tree-id1305 . -14) (undo-tree-id1306 . -14) (undo-tree-id1307 . -14) (undo-tree-id1308 . -14) (undo-tree-id1309 . -14) (undo-tree-id1310 . -14) (undo-tree-id1311 . -14) (undo-tree-id1312 . -14) (undo-tree-id1313 . -14) (undo-tree-id1314 . -14) (undo-tree-id1315 . -14) 4607 (t 25902 41084 869799 997000)) nil (25902 41179 318683 819000) 0 nil])
([nil nil ((#("argv[" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-4-face))) . -4588) (undo-tree-id1260 . -5) (undo-tree-id1261 . -5) (undo-tree-id1262 . -5) (undo-tree-id1263 . -5) (undo-tree-id1264 . -5) (undo-tree-id1265 . -5) (undo-tree-id1266 . -5) (undo-tree-id1267 . -5) (undo-tree-id1268 . -5) (undo-tree-id1269 . -5) (undo-tree-id1270 . -5) (undo-tree-id1271 . -5) (undo-tree-id1272 . -5) (undo-tree-id1273 . -5) (undo-tree-id1274 . -5) (undo-tree-id1275 . -5) (undo-tree-id1276 . -5) (undo-tree-id1277 . -5) (undo-tree-id1278 . -5) (undo-tree-id1279 . -5) (undo-tree-id1280 . -5) (undo-tree-id1281 . -5) (undo-tree-id1282 . -5) (undo-tree-id1283 . -5) (undo-tree-id1284 . -5) (undo-tree-id1285 . -5) (undo-tree-id1286 . -5) (undo-tree-id1287 . -5) (undo-tree-id1288 . -5) (undo-tree-id1289 . -5) (undo-tree-id1290 . -5) (undo-tree-id1291 . -5) (undo-tree-id1292 . -5) 4593) nil (25902 41179 318626 507000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4583) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (#("&" 0 1 (fontified t)) . -4584) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (#("&" 0 1 (fontified t)) . -4585) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (#(" " 0 1 (fontified t)) . -4586) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (#("*" 0 1 (fontified t)) . -4587) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) 4588) nil (25902 41179 318487 647000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -3903) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (#("0" 0 1 (fontified t)) . -3904) (undo-tree-id1321 . -1) 3905 (t 25902 41179 348910 386000)) nil (25902 41207 906708 246000) 0 nil])
([nil nil ((3903 . 3908) (t 25902 41207 928662 246000)) nil (25902 41241 111949 424000) 0 nil])
([nil nil ((4612 . 4619) (t 25902 41241 132384 991000)) nil (25902 41301 681968 925000) 0 nil])
([nil nil ((4619 . 4625)) nil (25902 41301 681967 788000) 0 nil])
([nil nil ((4625 . 4626)) nil (25902 41301 681966 801000) 0 nil])
([nil nil ((4626 . 4631)) nil (25902 41301 681965 475000) 0 nil])
([nil nil ((4631 . 4632)) nil (25902 41301 681964 602000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -4626) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -4627) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -4628) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -4629) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -4630) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (#(")" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-4-face))) . -4631) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) 4632) nil (25902 41301 681961 656000) 0 nil])
([nil nil ((4629 . 4630) (nil syntax-table nil 4629 . 4630) (nil syntax-table (1) 4626 . 4627) (4628 . 4629) (nil syntax-table nil 4628 . 4629) (nil syntax-table (1) 4626 . 4627) (4627 . 4628) (nil syntax-table nil 4627 . 4628) (nil syntax-table (1) 4626 . 4627) (4626 . 4627)) nil (25902 41301 681940 443000) 0 nil])
([nil nil ((4630 . 4631)) nil (25902 41301 681937 540000) 0 nil])
([nil nil ((4631 . 4633)) nil (25902 41301 681936 598000) 0 nil])
([nil nil ((4633 . 4637)) nil (25902 41301 681935 420000) 0 nil])
([nil nil ((4637 . 4638)) nil (25902 41301 681933 726000) 0 nil])
([nil nil ((4638 . 4639)) nil (25902 41301 681928 680000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -4682) (undo-tree-id1340 . -1) 4683 (t 25902 41301 703907 429000)) nil (25902 41354 758971 183000) 0 nil])
([nil nil ((4682 . 4684)) nil (25902 41354 758968 626000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -4687) (undo-tree-id1339 . -1) 4688) nil (25902 41354 758967 361000) 0 nil])
([nil nil ((4687 . 4689)) nil (25902 41354 758964 370000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -4692) (undo-tree-id1338 . -1) 4693) nil (25902 41354 758962 150000) 0 nil])
([nil nil ((4692 . 4694)) nil (25902 41354 758952 570000) 0 nil])
([nil nil ((4698 . 4699) (nil syntax-table nil 4749 . 4750) (nil syntax-table (1) 4679 . 4680) (4697 . 4698)) nil (25902 41354 758947 170000) 0 nil])
([nil nil ((4816 . 4823) (t 25902 41354 779516 213000)) nil (25902 41403 66158 756000) 0 nil])
([nil nil ((4817 . 4824) (#("      " 0 6 (fontified t ws-butler-chg chg)) . 4817) (undo-tree-id1341 . -6) 4823) nil (25902 41403 66156 753000) 0 nil])
([nil nil ((4824 . 4832)) nil (25902 41403 66149 821000) 0 nil])
([nil nil ((4832 . 4833)) nil (25902 41403 66144 875000) 0 nil])
([nil nil ((4619 . 4621) (t 25902 41403 87180 44000)) nil (25902 41441 4764 83000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t face font-lock-string-face)) . -4684) (undo-tree-id1360 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -4685) (undo-tree-id1361 . -1) 4686 (t 25902 41441 26928 156000)) nil (25902 41483 777723 863000) 0 nil])
([nil nil ((4684 . 4685)) nil (25902 41483 777721 241000) 0 nil])
([nil nil ((4682 . 4691)) nil (25902 41483 777720 580000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4690) (undo-tree-id1359 . -1) 4691) nil (25902 41483 777719 666000) 0 nil])
([nil nil ((4690 . 4691)) nil (25902 41483 777718 31000) 0 nil])
([nil nil ((4695 . 4703)) nil (25902 41483 777717 382000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4702) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) 4703) nil (25902 41483 777715 826000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4698) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4699) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4700) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4701) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) 4702) nil (25902 41483 777705 398000) 0 nil])
([nil nil ((4698 . 4705)) nil (25902 41483 777687 637000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t face font-lock-string-face)) . -4707) (undo-tree-id1344 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -4708) (undo-tree-id1345 . -1) 4709) nil (25902 41483 777683 844000) 0 nil])
([nil nil ((4707 . 4708)) nil (25902 41483 777677 76000) 0 nil])
([nil nil ((4708 . 4718)) nil (25902 41483 777676 413000) 0 nil])
([nil nil ((4718 . 4720)) nil (25902 41483 777675 646000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t face font-lock-string-face)) . -4723) (undo-tree-id1342 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -4724) (undo-tree-id1343 . -1) 4725) nil (25902 41483 777673 852000) 0 nil])
([nil nil ((4723 . 4724)) nil (25902 41483 777666 127000) 0 nil])
([nil nil ((4724 . 4737)) nil (25902 41483 777661 800000) 0 nil])
([nil nil ((4849 . 4850) (nil syntax-table nil 4852 . 4853) (nil syntax-table (1) 4841 . 4842) (4848 . 4849) (t 25902 41483 798655 962000)) nil (25902 41489 603066 841000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4878) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) 4879 (t 25902 41489 838618 475000)) nil (25902 41634 295581 945000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4861) (undo-tree-id1369 . -1) 4862) nil (25902 41634 295578 671000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4588) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (#("
" 0 1 (fontified t)) . -4589) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) 4590) nil (25902 41634 295576 562000) 0 nil])
([nil nil ((4978 . 4983)) nil (25902 41634 295572 243000) 0 nil])
([nil nil ((4979 . 4984) (#("    " 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t) 1 4 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . 4979) (undo-tree-id1364 . -4) 4983) nil (25902 41634 295571 207000) 0 nil])
([nil nil ((4984 . 4987)) nil (25902 41634 295569 134000) 0 nil])
([nil nil ((4987 . 4988)) nil (25902 41634 295568 398000) 0 nil])
([nil nil ((4988 . 4998)) nil (25902 41634 295567 643000) 0 nil])
([nil nil ((4998 . 4999)) nil (25902 41634 295566 885000) 0 nil])
([nil nil ((4999 . 5000)) nil (25902 41634 295566 230000) 0 nil])
([nil nil ((5000 . 5001)) nil (25902 41634 295565 437000) 0 nil])
([nil nil ((5001 . 5008)) nil (25902 41634 295564 592000) 0 nil])
([nil nil ((5008 . 5016)) nil (25902 41634 295563 790000) 0 nil])
([nil nil ((5016 . 5017)) nil (25902 41634 295563 9000) 0 nil])
([nil nil ((5017 . 5021)) nil (25902 41634 295562 195000) 0 nil])
([nil nil ((5021 . 5029)) nil (25902 41634 295561 358000) 0 nil])
([nil nil ((5029 . 5030)) nil (25902 41634 295560 524000) 0 nil])
([nil nil ((5030 . 5044)) nil (25902 41634 295559 803000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -5043) (undo-tree-id1363 . -1) 5044) nil (25902 41634 295558 700000) 0 nil])
([nil nil ((5043 . 5045)) nil (25902 41634 295556 382000) 0 nil])
([nil nil ((5045 . 5046)) nil (25902 41634 295555 496000) 0 nil])
([nil nil ((5046 . 5050)) nil (25902 41634 295554 562000) 0 nil])
([nil nil ((5050 . 5058)) nil (25902 41634 295553 806000) 0 nil])
([nil nil ((5058 . 5059)) nil (25902 41634 295553 84000) 0 nil])
([nil nil ((5059 . 5060)) nil (25902 41634 295552 290000) 0 nil])
([nil nil ((5060 . 5067)) nil (25902 41634 295551 382000) 0 nil])
([nil nil ((5061 . 5065) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . 5061) (undo-tree-id1362 . -6) (5067 . 5068)) nil (25902 41634 295550 334000) 0 nil])
([nil nil ((4645 . 4646)) nil (25902 41634 295541 714000) 0 nil])
([nil nil ((4640 . 4646) (#("     " 0 1 (c-is-sws t c-in-sws t fontified nil) 1 5 (c-is-sws t c-in-sws t fontified nil)) . 4640) (4646 . 4647)) nil (25902 41634 295540 647000) 0 nil])
([nil nil ((4862 . 4863)) nil (25902 41634 295539 224000) 0 nil])
([nil nil ((4863 . 4864)) nil (25902 41634 295537 813000) 0 nil])
([nil nil ((4855 . 4863) (#("      " 0 6 (fontified nil face font-lock-comment-face c-in-sws t)) . 4855) (4864 . 4865)) nil (25902 41634 295532 811000) 0 nil])
([nil nil ((#("    if (child == 0) {
      file_ops(argv[optind], opt_delay_time, opt_reverse);
    }" 0 4 (fontified t c-is-sws t c-in-sws t) 4 5 (fontified t face font-lock-keyword-face c-is-sws t) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-3-face)) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t face (rainbow-delimiters-depth-3-face)) 19 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-3-face)) 21 22 (fontified t) 22 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t face (rainbow-delimiters-depth-4-face)) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-5-face)) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t face (rainbow-delimiters-depth-5-face)) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t face (rainbow-delimiters-depth-4-face)) 79 80 (fontified t) 80 81 (fontified t) 81 85 (fontified t) 85 86 (fontified t face (rainbow-delimiters-depth-3-face))) . 4988) (undo-tree-id1377 . -86) (undo-tree-id1378 . -69) (undo-tree-id1379 . -77) (undo-tree-id1380 . -86) (t 25902 41634 317783 656000)) nil (25902 42086 606919 877000) 0 nil])
([nil nil ((4867 . 4874)) nil (25902 42086 606915 311000) 0 nil])
([nil nil ((4953 . 4959) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 4953) (4892 . 4900) (#("      " 0 6 (ws-butler-chg chg fontified nil)) . 4892) (4868 . 4874) (#("          " 0 1 (fontified nil ws-butler-chg chg c-is-sws t c-in-sws t) 1 6 (fontified nil ws-butler-chg chg c-is-sws t c-in-sws t) 6 10 (c-is-sws t c-in-sws t ws-butler-chg chg fontified nil)) . 4868) (undo-tree-id1373 . -6) (undo-tree-id1374 . -6) (undo-tree-id1375 . -6) (undo-tree-id1376 . -6) (nil rear-nonsticky nil 4959 . 4960) (nil fontified nil 4959 . 4960) (nil fontified nil 4955 . 4959) (nil fontified nil 4954 . 4955) (nil fontified nil 4953 . 4954) (nil fontified nil 4952 . 4953) (nil fontified nil 4951 . 4952) (nil fontified nil 4950 . 4951) (nil fontified nil 4949 . 4950) (nil fontified nil 4948 . 4949) (nil fontified nil 4947 . 4948) (nil fontified nil 4946 . 4947) (nil fontified nil 4945 . 4946) (nil fontified nil 4944 . 4945) (nil fontified nil 4943 . 4944) (nil fontified nil 4942 . 4943) (nil fontified nil 4941 . 4942) (nil fontified nil 4940 . 4941) (nil fontified nil 4939 . 4940) (nil fontified nil 4938 . 4939) (nil fontified nil 4937 . 4938) (nil fontified nil 4936 . 4937) (nil fontified nil 4935 . 4936) (nil fontified nil 4934 . 4935) (nil fontified nil 4933 . 4934) (nil fontified nil 4932 . 4933) (nil fontified nil 4931 . 4932) (nil fontified nil 4930 . 4931) (nil fontified nil 4929 . 4930) (nil fontified nil 4928 . 4929) (nil fontified nil 4927 . 4928) (nil fontified nil 4926 . 4927) (nil fontified nil 4925 . 4926) (nil fontified nil 4924 . 4925) (nil fontified nil 4923 . 4924) (nil fontified nil 4922 . 4923) (nil fontified nil 4921 . 4922) (nil fontified nil 4920 . 4921) (nil fontified nil 4919 . 4920) (nil fontified nil 4918 . 4919) (nil fontified nil 4917 . 4918) (nil fontified nil 4916 . 4917) (nil fontified nil 4915 . 4916) (nil fontified nil 4914 . 4915) (nil fontified nil 4913 . 4914) (nil fontified nil 4912 . 4913) (nil fontified nil 4911 . 4912) (nil fontified nil 4910 . 4911) (nil fontified nil 4909 . 4910) (nil fontified nil 4908 . 4909) (nil fontified nil 4907 . 4908) (nil fontified nil 4906 . 4907) (nil fontified nil 4905 . 4906) (nil fontified nil 4904 . 4905) (nil fontified nil 4903 . 4904) (nil fontified nil 4902 . 4903) (nil fontified nil 4896 . 4902) (nil fontified nil 4895 . 4896) (nil fontified nil 4894 . 4895) (nil fontified nil 4893 . 4894) (nil fontified nil 4892 . 4893) (nil fontified nil 4891 . 4892) (nil fontified nil 4890 . 4891) (nil fontified nil 4889 . 4890) (nil fontified nil 4888 . 4889) (nil fontified nil 4887 . 4888) (nil fontified nil 4886 . 4887) (nil fontified nil 4885 . 4886) (nil fontified nil 4884 . 4885) (nil fontified nil 4883 . 4884) (nil fontified nil 4882 . 4883) (nil fontified nil 4881 . 4882) (nil fontified nil 4880 . 4881) (nil fontified nil 4879 . 4880) (nil fontified nil 4878 . 4879) (nil fontified nil 4874 . 4878) (4874 . 4960)) nil (25902 42086 606908 137000) 0 nil])
([nil nil ((4952 . 4961) (t 25902 42086 623703 285000)) nil (25902 42123 719467 961000) 0 nil])
([nil nil ((4961 . 4969)) nil (25902 42123 719466 314000) 0 nil])
([nil nil ((4969 . 4970)) nil (25902 42123 719462 110000) 0 nil])
([nil nil ((#("        return 0;
" 0 8 (fontified t) 8 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t)) . 4953) (undo-tree-id1381 . -12) (undo-tree-id1382 . 1) (undo-tree-id1383 . -13) (undo-tree-id1384 . -16) (undo-tree-id1385 . -17) (undo-tree-id1386 . -17) (undo-tree-id1387 . -17) (undo-tree-id1388 . -17) (undo-tree-id1389 . -17) (undo-tree-id1390 . -17) (undo-tree-id1391 . -17) (undo-tree-id1392 . -17) (undo-tree-id1393 . -17) (undo-tree-id1394 . -17) (undo-tree-id1395 . -17) (undo-tree-id1396 . -17) (undo-tree-id1397 . -17) (undo-tree-id1398 . -17) (undo-tree-id1399 . -17) (undo-tree-id1400 . -17) (undo-tree-id1401 . -17) (undo-tree-id1402 . -17) (undo-tree-id1403 . -17) (undo-tree-id1404 . -17) (undo-tree-id1405 . -17) (undo-tree-id1406 . -17) (undo-tree-id1407 . -17) (undo-tree-id1408 . -17) (undo-tree-id1409 . -17) (undo-tree-id1410 . -17) (undo-tree-id1411 . -17) (undo-tree-id1412 . -17) (undo-tree-id1413 . -17) (undo-tree-id1414 . -17) (undo-tree-id1415 . -17) (undo-tree-id1416 . -17) (undo-tree-id1417 . -17) (undo-tree-id1418 . -17) (undo-tree-id1419 . -17) (undo-tree-id1420 . -17) (undo-tree-id1421 . -17) (undo-tree-id1422 . -17) (undo-tree-id1423 . -17) (undo-tree-id1424 . -17) (undo-tree-id1425 . -17) (undo-tree-id1426 . -17) (undo-tree-id1427 . -17) (undo-tree-id1428 . -17) (undo-tree-id1429 . -17) (undo-tree-id1430 . -17) (undo-tree-id1431 . -17) (undo-tree-id1432 . -17) (undo-tree-id1433 . -17) (undo-tree-id1434 . -17) (undo-tree-id1435 . -17) (undo-tree-id1436 . -17) (undo-tree-id1437 . -17) (undo-tree-id1438 . -17) (undo-tree-id1439 . -17) (undo-tree-id1440 . -17) (undo-tree-id1441 . -17) (undo-tree-id1442 . -17) (undo-tree-id1443 . -17) (undo-tree-id1444 . -17) (undo-tree-id1445 . -17) (undo-tree-id1446 . -17) (undo-tree-id1447 . -17) (undo-tree-id1448 . -17) (undo-tree-id1449 . -17) (undo-tree-id1450 . -17) (undo-tree-id1451 . -17) (undo-tree-id1452 . -17) (undo-tree-id1453 . -17) (undo-tree-id1454 . -17) (undo-tree-id1455 . -17) (undo-tree-id1456 . -17) (undo-tree-id1457 . -17) (undo-tree-id1458 . -17) (undo-tree-id1459 . -17) (undo-tree-id1460 . -17) (undo-tree-id1461 . -17) (undo-tree-id1462 . -17) (undo-tree-id1463 . -17) (undo-tree-id1464 . -17) (undo-tree-id1465 . -17) (undo-tree-id1466 . -17) (undo-tree-id1467 . -17) (undo-tree-id1468 . -17) (undo-tree-id1469 . -17) (undo-tree-id1470 . -17) (undo-tree-id1471 . -17) (undo-tree-id1472 . -17) (undo-tree-id1473 . -17) (undo-tree-id1474 . -17) (undo-tree-id1475 . -17) (undo-tree-id1476 . -17) (undo-tree-id1477 . -17) (undo-tree-id1478 . -17) (undo-tree-id1479 . -17) (undo-tree-id1480 . -17) (undo-tree-id1481 . -17) (undo-tree-id1482 . -17) (undo-tree-id1483 . -17) (undo-tree-id1484 . -17) (undo-tree-id1485 . -17) (undo-tree-id1486 . -17) (undo-tree-id1487 . -17) (undo-tree-id1488 . -17) (undo-tree-id1489 . -17) (undo-tree-id1490 . -17) (undo-tree-id1491 . -17) (undo-tree-id1492 . -17) (undo-tree-id1493 . -17) (undo-tree-id1494 . -17) (undo-tree-id1495 . -17) (undo-tree-id1496 . -17) (undo-tree-id1497 . -17) (undo-tree-id1498 . -17) (undo-tree-id1499 . -17) (undo-tree-id1500 . -17) (undo-tree-id1501 . -17) (undo-tree-id1502 . -17) (undo-tree-id1503 . -17) (undo-tree-id1504 . -16) (undo-tree-id1505 . -16) (undo-tree-id1506 . -16) (undo-tree-id1507 . -16) (undo-tree-id1508 . -16) (undo-tree-id1509 . -16) (undo-tree-id1510 . -16) (undo-tree-id1511 . -16) (undo-tree-id1512 . -16) (undo-tree-id1513 . -16) (undo-tree-id1514 . -16) (undo-tree-id1515 . -16) (undo-tree-id1516 . -16) (undo-tree-id1517 . -16) (undo-tree-id1518 . -16) (undo-tree-id1519 . -16) (undo-tree-id1520 . -16) (undo-tree-id1521 . -16) (undo-tree-id1522 . -16) (undo-tree-id1523 . -18) (undo-tree-id1524 . -17) 4969 (t 25902 42123 743556 167000)) nil (25902 42134 305772 267000) 0 nil])
([nil nil ((#("      //printf(\"%i\", child);
      /* if (child == 0) {
        printf(\"opt_help=%i, opt_delay=%i,opt_reverse= %i,argv[optind]= %s\\n\", opt_help, opt_delay, opt_reverse, argv[optind]);
      }
      else if (child) {
        printf(\"PARENT\\n\");
        } */
" 0 6 (c-in-sws t c-is-sws t fontified t) 6 7 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 7 8 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 8 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (c-in-sws t fontified t face font-lock-comment-face) 10 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 13 (c-in-sws t fontified t face font-lock-comment-face) 13 14 (c-in-sws t fontified t face font-lock-comment-face) 14 15 (c-in-sws t fontified t face font-lock-comment-face) 15 16 (c-in-sws t fontified t face font-lock-comment-face) 16 17 (c-in-sws t fontified t face font-lock-comment-face) 17 18 (c-in-sws t fontified t face font-lock-comment-face) 18 19 (c-in-sws t fontified t face font-lock-comment-face) 19 20 (c-in-sws t fontified t face font-lock-comment-face) 20 21 (c-in-sws t fontified t face font-lock-comment-face) 21 22 (c-in-sws t fontified t face font-lock-comment-face) 22 23 (c-in-sws t fontified t face font-lock-comment-face) 23 24 (c-in-sws t fontified t face font-lock-comment-face) 24 25 (c-in-sws t fontified t face font-lock-comment-face) 25 26 (c-in-sws t fontified t face font-lock-comment-face) 26 27 (c-in-sws t fontified t face font-lock-comment-face) 27 28 (c-in-sws t fontified t face font-lock-comment-face) 28 29 (fontified t face font-lock-comment-face c-in-sws t) 29 30 (fontified t c-in-sws t c-is-sws t) 30 35 (fontified t c-in-sws t c-is-sws t) 35 36 (fontified t face font-lock-comment-delimiter-face c-is-sws t c-in-sws t) 36 37 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 37 38 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 38 39 (fontified t face font-lock-comment-face c-in-sws t) 39 40 (fontified t face font-lock-comment-face c-in-sws t) 40 41 (fontified t face font-lock-comment-face c-in-sws t) 41 42 (fontified t face font-lock-comment-face c-in-sws t) 42 43 (fontified t face font-lock-comment-face c-in-sws t) 43 44 (fontified t face font-lock-comment-face c-in-sws t) 44 45 (fontified t face font-lock-comment-face c-in-sws t) 45 46 (fontified t face font-lock-comment-face c-in-sws t) 46 47 (fontified t face font-lock-comment-face c-in-sws t) 47 48 (fontified t face font-lock-comment-face c-in-sws t) 48 49 (fontified t face font-lock-comment-face c-in-sws t) 49 50 (fontified t face font-lock-comment-face c-in-sws t) 50 51 (fontified t face font-lock-comment-face c-in-sws t) 51 52 (fontified t face font-lock-comment-face c-in-sws t) 52 53 (fontified t face font-lock-comment-face c-in-sws t) 53 54 (fontified t face font-lock-comment-face c-in-sws t) 54 55 (fontified t face font-lock-comment-face c-in-sws t) 55 56 (fontified t face font-lock-comment-face c-in-sws t) 56 64 (fontified t face font-lock-comment-face c-in-sws t) 64 65 (fontified t face font-lock-comment-face c-in-sws t) 65 66 (fontified t face font-lock-comment-face c-in-sws t) 66 67 (fontified t face font-lock-comment-face c-in-sws t) 67 68 (fontified t face font-lock-comment-face c-in-sws t) 68 69 (fontified t face font-lock-comment-face c-in-sws t) 69 70 (fontified t face font-lock-comment-face c-in-sws t) 70 71 (fontified t face font-lock-comment-face c-in-sws t) 71 72 (fontified t face font-lock-comment-face c-in-sws t) 72 73 (fontified t face font-lock-comment-face c-in-sws t) 73 74 (fontified t face font-lock-comment-face c-in-sws t) 74 75 (fontified t face font-lock-comment-face c-in-sws t) 75 76 (fontified t face font-lock-comment-face c-in-sws t) 76 77 (fontified t face font-lock-comment-face c-in-sws t) 77 78 (fontified t face font-lock-comment-face c-in-sws t) 78 79 (fontified t face font-lock-comment-face c-in-sws t) 79 80 (fontified t face font-lock-comment-face c-in-sws t) 80 81 (fontified t face font-lock-comment-face c-in-sws t) 81 82 (fontified t face font-lock-comment-face c-in-sws t) 82 83 (fontified t face font-lock-comment-face c-in-sws t) 83 84 (fontified t face font-lock-comment-face c-in-sws t) 84 85 (fontified t face font-lock-comment-face c-in-sws t) 85 86 (fontified t face font-lock-comment-face c-in-sws t) 86 87 (fontified t face font-lock-comment-face c-in-sws t) 87 88 (fontified t face font-lock-comment-face c-in-sws t) 88 89 (fontified t face font-lock-comment-face c-in-sws t) 89 90 (fontified t face font-lock-comment-face c-in-sws t) 90 91 (fontified t face font-lock-comment-face c-in-sws t) 91 92 (fontified t face font-lock-comment-face c-in-sws t) 92 93 (fontified t face font-lock-comment-face c-in-sws t) 93 94 (fontified t face font-lock-comment-face c-in-sws t) 94 95 (fontified t face font-lock-comment-face c-in-sws t) 95 96 (fontified t face font-lock-comment-face c-in-sws t) 96 97 (fontified t face font-lock-comment-face c-in-sws t) 97 98 (fontified t face font-lock-comment-face c-in-sws t) 98 99 (fontified t face font-lock-comment-face c-in-sws t) 99 100 (fontified t face font-lock-comment-face c-in-sws t) 100 101 (fontified t face font-lock-comment-face c-in-sws t) 101 102 (fontified t face font-lock-comment-face c-in-sws t) 102 103 (fontified t face font-lock-comment-face c-in-sws t) 103 104 (fontified t face font-lock-comment-face c-in-sws t) 104 105 (fontified t face font-lock-comment-face c-in-sws t) 105 106 (fontified t face font-lock-comment-face c-in-sws t) 106 107 (fontified t face font-lock-comment-face c-in-sws t) 107 108 (fontified t face font-lock-comment-face c-in-sws t) 108 109 (fontified t face font-lock-comment-face c-in-sws t) 109 110 (fontified t face font-lock-comment-face c-in-sws t) 110 111 (fontified t face font-lock-comment-face c-in-sws t) 111 112 (fontified t face font-lock-comment-face c-in-sws t) 112 113 (fontified t face font-lock-comment-face c-in-sws t) 113 114 (fontified t face font-lock-comment-face c-in-sws t) 114 115 (fontified t face font-lock-comment-face c-in-sws t) 115 116 (fontified t face font-lock-comment-face c-in-sws t) 116 117 (fontified t face font-lock-comment-face c-in-sws t) 117 118 (fontified t face font-lock-comment-face c-in-sws t) 118 119 (fontified t face font-lock-comment-face c-in-sws t) 119 120 (fontified t face font-lock-comment-face c-in-sws t) 120 121 (fontified t face font-lock-comment-face c-in-sws t) 121 122 (fontified t face font-lock-comment-face c-in-sws t) 122 123 (fontified t face font-lock-comment-face c-in-sws t) 123 124 (fontified t face font-lock-comment-face c-in-sws t) 124 125 (fontified t face font-lock-comment-face c-in-sws t) 125 126 (fontified t face font-lock-comment-face c-in-sws t) 126 127 (fontified t face font-lock-comment-face c-in-sws t) 127 128 (fontified t face font-lock-comment-face c-in-sws t) 128 129 (fontified t face font-lock-comment-face c-in-sws t) 129 130 (fontified t face font-lock-comment-face c-in-sws t) 130 131 (fontified t face font-lock-comment-face c-in-sws t) 131 132 (fontified t face font-lock-comment-face c-in-sws t) 132 133 (fontified t face font-lock-comment-face c-in-sws t) 133 134 (fontified t face font-lock-comment-face c-in-sws t) 134 135 (fontified t face font-lock-comment-face c-in-sws t) 135 136 (fontified t face font-lock-comment-face c-in-sws t) 136 137 (fontified t face font-lock-comment-face c-in-sws t) 137 138 (fontified t face font-lock-comment-face c-in-sws t) 138 139 (fontified t face font-lock-comment-face c-in-sws t) 139 140 (fontified t face font-lock-comment-face c-in-sws t) 140 141 (fontified t face font-lock-comment-face c-in-sws t) 141 142 (fontified t face font-lock-comment-face c-in-sws t) 142 143 (fontified t face font-lock-comment-face c-in-sws t) 143 144 (fontified t face font-lock-comment-face c-in-sws t) 144 145 (fontified t face font-lock-comment-face c-in-sws t) 145 146 (fontified t face font-lock-comment-face c-in-sws t) 146 147 (fontified t face font-lock-comment-face c-in-sws t) 147 148 (fontified t face font-lock-comment-face c-in-sws t) 148 149 (fontified t face font-lock-comment-face c-in-sws t) 149 150 (fontified t face font-lock-comment-face c-in-sws t) 150 151 (fontified t face font-lock-comment-face c-in-sws t) 151 152 (fontified t face font-lock-comment-face c-in-sws t) 152 153 (fontified t face font-lock-comment-face c-in-sws t) 153 154 (fontified t face font-lock-comment-face c-in-sws t) 154 155 (fontified t face font-lock-comment-face c-in-sws t) 155 156 (fontified t face font-lock-comment-face c-in-sws t) 156 157 (fontified t face font-lock-comment-face c-in-sws t) 157 158 (fontified t face font-lock-comment-face c-in-sws t) 158 159 (fontified t face font-lock-comment-face c-in-sws t) 159 160 (fontified t face font-lock-comment-face c-in-sws t) 160 161 (fontified t face font-lock-comment-face c-in-sws t) 161 162 (fontified t face font-lock-comment-face c-in-sws t) 162 163 (fontified t face font-lock-comment-face c-in-sws t) 163 164 (fontified t face font-lock-comment-face c-in-sws t) 164 165 (fontified t face font-lock-comment-face c-in-sws t) 165 166 (fontified t face font-lock-comment-face c-in-sws t) 166 167 (fontified t face font-lock-comment-face c-in-sws t) 167 168 (fontified t face font-lock-comment-face c-in-sws t) 168 169 (fontified t face font-lock-comment-face c-in-sws t) 169 170 (fontified t face font-lock-comment-face c-in-sws t) 170 171 (fontified t face font-lock-comment-face c-in-sws t) 171 172 (fontified t face font-lock-comment-face c-in-sws t) 172 173 (fontified t face font-lock-comment-face c-in-sws t) 173 174 (fontified t face font-lock-comment-face c-in-sws t) 174 175 (fontified t face font-lock-comment-face c-in-sws t) 175 176 (fontified t face font-lock-comment-face c-in-sws t) 176 177 (fontified t face font-lock-comment-face c-in-sws t) 177 178 (fontified t face font-lock-comment-face c-in-sws t) 178 179 (fontified t face font-lock-comment-face c-in-sws t) 179 180 (fontified t face font-lock-comment-face c-in-sws t) 180 181 (fontified t face font-lock-comment-face c-in-sws t) 181 182 (fontified t face font-lock-comment-face c-in-sws t) 182 183 (fontified t face font-lock-comment-face c-in-sws t) 183 184 (fontified t face font-lock-comment-face c-in-sws t) 184 190 (fontified t face font-lock-comment-face c-in-sws t) 190 191 (fontified t face font-lock-comment-face c-in-sws t) 191 192 (fontified t face font-lock-comment-face c-in-sws t) 192 198 (fontified t face font-lock-comment-face c-in-sws t) 198 202 (fontified t face font-lock-comment-face c-in-sws t) 202 203 (fontified t face font-lock-comment-face c-in-sws t) 203 204 (fontified t face font-lock-comment-face c-in-sws t) 204 205 (fontified t face font-lock-comment-face c-in-sws t) 205 206 (fontified t face font-lock-comment-face c-in-sws t) 206 207 (fontified t face font-lock-comment-face c-in-sws t) 207 208 (fontified t face font-lock-comment-face c-in-sws t) 208 209 (fontified t face font-lock-comment-face c-in-sws t) 209 210 (fontified t face font-lock-comment-face c-in-sws t) 210 211 (fontified t face font-lock-comment-face c-in-sws t) 211 212 (fontified t face font-lock-comment-face c-in-sws t) 212 213 (fontified t face font-lock-comment-face c-in-sws t) 213 214 (fontified t face font-lock-comment-face c-in-sws t) 214 215 (fontified t face font-lock-comment-face c-in-sws t) 215 216 (fontified t face font-lock-comment-face c-in-sws t) 216 224 (fontified t face font-lock-comment-face c-in-sws t) 224 225 (fontified t face font-lock-comment-face c-in-sws t) 225 226 (fontified t face font-lock-comment-face c-in-sws t) 226 227 (fontified t face font-lock-comment-face c-in-sws t) 227 228 (fontified t face font-lock-comment-face c-in-sws t) 228 229 (fontified t face font-lock-comment-face c-in-sws t) 229 230 (fontified t face font-lock-comment-face c-in-sws t) 230 231 (fontified t face font-lock-comment-face c-in-sws t) 231 232 (fontified t face font-lock-comment-face c-in-sws t) 232 233 (fontified t face font-lock-comment-face c-in-sws t) 233 234 (fontified t face font-lock-comment-face c-in-sws t) 234 235 (fontified t face font-lock-comment-face c-in-sws t) 235 236 (fontified t face font-lock-comment-face c-in-sws t) 236 237 (fontified t face font-lock-comment-face c-in-sws t) 237 238 (fontified t face font-lock-comment-face c-in-sws t) 238 239 (fontified t face font-lock-comment-face c-in-sws t) 239 240 (fontified t face font-lock-comment-face c-in-sws t) 240 241 (fontified t face font-lock-comment-face c-in-sws t) 241 242 (fontified t face font-lock-comment-face c-in-sws t) 242 243 (fontified t face font-lock-comment-face c-in-sws t) 243 244 (fontified t face font-lock-comment-face c-in-sws t) 244 252 (fontified t c-in-sws t face font-lock-comment-face) 252 253 (fontified t c-in-sws t face font-lock-comment-face) 253 254 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 254 255 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 255 256 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 256 257 (fontified t c-in-sws t)) . 4611) (undo-tree-id1525 . -256) (undo-tree-id1526 . -55) (undo-tree-id1527 . -128) (undo-tree-id1528 . -129) (undo-tree-id1529 . -183) (undo-tree-id1530 . -191) (undo-tree-id1531 . -253) (undo-tree-id1532 . -71) (undo-tree-id1533 . -229) (undo-tree-id1534 . -191) (undo-tree-id1535 . -211) (undo-tree-id1536 . -212) (undo-tree-id1537 . -135) (undo-tree-id1538 . -241) (undo-tree-id1539 . -82) (undo-tree-id1540 . -253) (undo-tree-id1541 . -211) (undo-tree-id1542 . -204) (undo-tree-id1543 . -6) (undo-tree-id1544 . -241) (undo-tree-id1545 . -253) (undo-tree-id1546 . -256) (undo-tree-id1547 . -256) (undo-tree-id1548 . -256) (t 25902 42134 327514 682000)) nil (25902 42447 814086 35000) 0 nil])
([nil nil ((4610 . 4617) (t 25902 42182 791327 187000)) nil (25902 42680 250030 627000) 0 nil] [nil nil ((#("file_ops(argv[optind], opt_delay_time, opt_revers" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-5-face)) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t face (rainbow-delimiters-depth-6-face)) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-6-face)) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t)) . -4643) (undo-tree-id1557 . -49) (undo-tree-id1558 . -49) 4692 (t 25902 42182 791327 187000)) ((4643 . 4692)) (25902 42343 426342 948000) 0 nil])
([nil nil ((4617 . 4623)) nil (25902 42680 250029 670000) 0 nil])
([nil nil ((4635 . 4644) (#("        " 0 8 (fontified nil)) . 4635) (undo-tree-id1549 . -8) (undo-tree-id1550 . -8) (undo-tree-id1551 . -8) (undo-tree-id1552 . -8) (undo-tree-id1553 . -8) (undo-tree-id1554 . -8) (undo-tree-id1555 . -8) (undo-tree-id1556 . -8) 4643) ((nil ws-butler-chg delete 4643 . 4644) (4635 . 4643) (#("
        " 0 9 (fontified t ws-butler-chg chg)) . 4635) (undo-tree-id1559 . -9) (undo-tree-id1560 . -9) (undo-tree-id1561 . -1) (undo-tree-id1562 . -9) (undo-tree-id1563 . -9) (undo-tree-id1564 . -9) (undo-tree-id1565 . -9) (undo-tree-id1566 . -9) (undo-tree-id1567 . -9)) (25902 42341 135212 764000) 0 nil])
([nil nil ((4623 . 4624)) nil (25902 42680 250028 901000) 0 nil])
nil
([nil nil ((4624 . 4626)) nil (25902 42680 250028 141000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t ws-butler-chg chg)) . -4625) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) 4626) nil (25902 42680 250027 60000) 0 nil])
([nil nil ((4625 . 4626)) nil (25902 42680 250024 735000) 0 nil])
([nil nil ((#("%" 0 1 (fontified t ws-butler-chg chg)) . -4624) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -4625) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) 4626) nil (25902 42680 250023 460000) 0 nil])
([nil nil ((4625 . 4626) (nil syntax-table nil 4625 . 4626) (nil syntax-table (1) 4624 . 4625) (4624 . 4625)) nil (25902 42680 250018 28000) 0 nil])
([nil nil ((#("%" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4625) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (nil syntax-table nil 4626 . 4627) (nil syntax-table (1) 4624 . 4625)) nil (25902 42680 250016 466000) 0 nil])
([nil nil ((4629 . 4630) (nil syntax-table nil 4629 . 4630) (nil syntax-table (1) 4624 . 4625) (4628 . 4629) (nil syntax-table nil 4628 . 4629) (nil syntax-table (1) 4624 . 4625) (4627 . 4628) (nil syntax-table nil 4627 . 4628) (nil syntax-table (1) 4624 . 4625) (4626 . 4627) (nil syntax-table nil 4626 . 4627) (nil syntax-table (1) 4624 . 4625) (4625 . 4626) (nil syntax-table nil 4625 . 4626) (nil syntax-table (1) 4624 . 4625)) nil (25902 42680 250013 579000) 0 nil])
([nil nil ((4635 . 4636) (nil syntax-table nil 4635 . 4636) (nil syntax-table (1) 4624 . 4625) (4634 . 4635) (nil syntax-table nil 4634 . 4635) (nil syntax-table (1) 4624 . 4625) (4633 . 4634) (nil syntax-table nil 4633 . 4634) (nil syntax-table (1) 4624 . 4625) (4632 . 4633) (nil syntax-table nil 4632 . 4633) (nil syntax-table (1) 4624 . 4625) (4631 . 4632) (nil syntax-table nil 4631 . 4632) (nil syntax-table (1) 4624 . 4625) (4630 . 4631) (nil syntax-table nil 4630 . 4631) (nil syntax-table (1) 4624 . 4625)) nil (25902 42680 250009 875000) 0 nil])
([nil nil ((4636 . 4637) (nil syntax-table nil 4636 . 4637) (nil syntax-table (1) 4624 . 4625)) nil (25902 42680 250006 221000) 0 nil])
([nil nil ((4646 . 4647) (nil syntax-table nil 4646 . 4647) (nil syntax-table (1) 4624 . 4625) (4645 . 4646) (nil syntax-table nil 4645 . 4646) (nil syntax-table (1) 4624 . 4625) (4644 . 4645) (nil syntax-table nil 4644 . 4645) (nil syntax-table (1) 4624 . 4625) (4643 . 4644) (nil syntax-table nil 4643 . 4644) (nil syntax-table (1) 4624 . 4625) (4642 . 4643) (nil syntax-table nil 4642 . 4643) (nil syntax-table (1) 4624 . 4625) (4641 . 4642) (nil syntax-table nil 4641 . 4642) (nil syntax-table (1) 4624 . 4625) (4640 . 4641) (nil syntax-table nil 4640 . 4641) (nil syntax-table (1) 4624 . 4625) (4639 . 4640) (nil syntax-table nil 4639 . 4640) (nil syntax-table (1) 4624 . 4625) (4638 . 4639) (nil syntax-table nil 4638 . 4639) (nil syntax-table (1) 4624 . 4625) (4637 . 4638) (nil syntax-table nil 4637 . 4638) (nil syntax-table (1) 4624 . 4625)) nil (25902 42680 250003 948000) 0 nil])
([nil nil ((4647 . 4648) (nil syntax-table nil 4647 . 4648) (nil syntax-table (1) 4624 . 4625)) nil (25902 42680 249998 461000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4647) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (nil syntax-table nil 4648 . 4649) (nil syntax-table (1) 4624 . 4625)) nil (25902 42680 249997 59000) 0 nil])
([nil nil ((4647 . 4648) (nil syntax-table nil 4647 . 4648) (nil syntax-table (1) 4624 . 4625)) nil (25902 42680 249994 310000) 0 nil])
([nil nil ((4648 . 4649)) nil (25902 42680 249993 205000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4646) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) 4647) nil (25902 42680 249992 266000) 0 nil])
([nil nil ((4646 . 4647)) nil (25902 42680 249990 106000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4635) (undo-tree-id1587 . -1) 4636) nil (25902 42680 249989 184000) 0 nil])
([nil nil ((4635 . 4636)) nil (25902 42680 249987 533000) 0 nil])
([nil nil ((4649 . 4653)) nil (25902 42680 249986 672000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -4649) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -4650) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -4651) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -4652) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) 4653) nil (25902 42680 249984 806000) 0 nil])
([nil nil ((4649 . 4655)) nil (25902 42680 249971 133000) 0 nil])
([nil nil ((4655 . 4656)) nil (25902 42680 249970 375000) 0 nil])
([nil nil ((4656 . 4661)) nil (25902 42680 249969 639000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg)) . -4660) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) 4661) nil (25902 42680 249968 604000) 0 nil])
([nil nil ((4660 . 4663)) nil (25902 42680 249965 627000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg)) . -4662) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) 4663) nil (25902 42680 249963 941000) 0 nil])
([nil nil ((4662 . 4663)) nil (25902 42680 249956 679000) 0 nil])
([nil nil ((4663 . 4664)) nil (25902 42680 249955 219000) 0 nil])
([nil nil ((4664 . 4665)) nil (25902 42680 249950 340000) 0 nil])
([nil nil ((4611 . 4617) (4611 . 4613) (t 25902 42680 485568 959000)) nil (25902 42876 450137 317000) 0 nil])
([nil nil ((4673 . 4680)) nil (25902 42876 450136 180000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -4673) (undo-tree-id1627 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . -4674) (undo-tree-id1628 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . -4675) (undo-tree-id1629 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . -4676) (undo-tree-id1630 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . -4677) (undo-tree-id1631 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . -4678) (undo-tree-id1632 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . -4679) (undo-tree-id1633 . -1) 4680) nil (25902 42876 450134 291000) 0 nil])
([nil nil ((4588 . 4595)) nil (25902 42876 450127 296000) 0 nil])
([nil nil ((4595 . 4598)) nil (25902 42876 450126 433000) 0 nil])
([nil nil ((4598 . 4599)) nil (25902 42876 450125 498000) 0 nil])
([nil nil ((4599 . 4603)) nil (25902 42876 450124 314000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -4602) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) 4603) nil (25902 42876 450123 168000) 0 nil])
([nil nil ((4602 . 4604)) nil (25902 42876 450118 738000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -4602) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -4603) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) 4604) nil (25902 42876 450117 377000) 0 nil])
([nil nil ((4602 . 4605)) nil (25902 42876 450112 649000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t ws-butler-chg chg)) . -4604) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) 4605) nil (25902 42876 450111 591000) 0 nil])
([nil nil ((4604 . 4610)) nil (25902 42876 450108 679000) 0 nil])
([nil nil ((4610 . 4611)) nil (25902 42876 450107 820000) 0 nil])
([nil nil ((4611 . 4612)) nil (25902 42876 450106 977000) 0 nil])
([nil nil ((4613 . 4621) (#("      " 0 6 (fontified t)) . 4613) (undo-tree-id1616 . -5) (undo-tree-id1617 . -6) (undo-tree-id1618 . -6) 4634) nil (25902 42876 450105 716000) 0 nil])
([nil nil ((4637 . 4645) (#("      " 0 6 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t)) . 4637) 4660) nil (25902 42876 450101 902000) 0 nil])
([nil nil ((4702 . 4710) (#("      " 0 1 (c-is-sws t c-in-sws t fontified t) 1 6 (c-in-sws t c-is-sws t fontified t)) . 4702) (undo-tree-id1614 . 6) (undo-tree-id1615 . -6) 4725) nil (25902 42876 450100 369000) 0 nil])
([nil nil ((4728 . 4738) (#("        " 0 8 (fontified t)) . 4728) (undo-tree-id1613 . -8) 4753) nil (25902 42876 450097 82000) 0 nil])
([nil nil ((4791 . 4799) (#("      " 0 1 (fontified t) 1 6 (fontified t)) . 4791) (undo-tree-id1612 . 6) 4798) nil (25902 42876 450094 532000) 0 nil])
([nil nil ((4800 . 4809)) nil (25902 42876 450091 767000) 0 nil])
([nil nil ((4801 . 4807) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 4801) (undo-tree-id1602 . -8) (undo-tree-id1603 . -8) (undo-tree-id1604 . -8) (undo-tree-id1605 . -8) (undo-tree-id1606 . -8) (undo-tree-id1607 . -8) (undo-tree-id1608 . -8) (undo-tree-id1609 . -8) (undo-tree-id1610 . -8) (undo-tree-id1611 . -8) (4809 . 4810)) nil (25902 42876 450087 555000) 0 nil])
([nil nil ((4610 . 4613) (t 25902 42876 468928 910000)) nil (25902 42921 395061 396000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -4612) (undo-tree-id1634 . -1) 4613) nil (25902 42921 395058 640000) 0 nil])
([nil nil ((4612 . 4624)) nil (25902 42921 395047 418000) 0 nil])
([nil nil ((4611 . 4613) (t 25902 42921 420784 587000)) nil (25902 42949 547465 781000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-5-face))) . -4611) (undo-tree-id1635 . -1) (#(")" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-5-face))) . -4612) (undo-tree-id1636 . -1) 4613) nil (25902 42949 547463 652000) 0 nil])
([nil nil ((4610 . 4611)) nil (25902 42949 547456 44000) 0 nil])
([nil nil ((4599 . 4600)) nil (25902 42949 547453 983000) 0 nil])
([nil nil ((4616 . 4617)) nil (25902 42949 547450 979000) 0 nil])
([nil nil ((4627 . 4628)) nil (25902 42949 547444 750000) 0 nil])
([nil nil ((4826 . 4833) (t 25902 42949 560694 630000)) nil (25902 42983 323768 49000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -4826) (undo-tree-id1640 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4827) (undo-tree-id1641 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4828) (undo-tree-id1642 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4829) (undo-tree-id1643 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4830) (undo-tree-id1644 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4831) (undo-tree-id1645 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4832) (undo-tree-id1646 . -1) 4833) nil (25902 42983 323764 241000) 0 nil])
([nil nil ((4946 . 4951)) nil (25902 42983 323745 399000) 0 nil])
([nil nil ((4951 . 4955)) nil (25902 42983 323744 721000) 0 nil])
([nil nil ((4955 . 4956)) nil (25902 42983 323744 30000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-3-face))) . -4955) (undo-tree-id1639 . -1) 4956) nil (25902 42983 323742 995000) 0 nil])
([nil nil ((4955 . 4958)) nil (25902 42983 323741 324000) 0 nil])
([nil nil ((4958 . 4959)) nil (25902 42983 323740 412000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg)) . -4957) (undo-tree-id1637 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-3-face))) . -4958) (undo-tree-id1638 . -1) 4959) nil (25902 42983 323738 712000) 0 nil])
([nil nil ((4957 . 4958)) nil (25902 42983 323731 172000) 0 nil])
([nil nil ((4958 . 4959)) nil (25902 42983 323730 467000) 0 nil])
([nil nil ((4959 . 4961)) nil (25902 42983 323729 607000) 0 nil])
([nil nil ((4961 . 4962)) nil (25902 42983 323728 221000) 0 nil])
([nil nil ((4962 . 4963)) nil (25902 42983 323723 980000) 0 nil])
([nil nil ((1704 . 1705) (t 25902 42983 340587 17000)) nil (25902 43022 34471 55000) 0 nil])
([nil nil ((1705 . 1706)) nil (25902 43022 34470 15000) 0 nil])
([nil nil ((1706 . 1718)) nil (25902 43022 34469 79000) 0 nil])
([nil nil ((1718 . 1719)) nil (25902 43022 34467 673000) 0 nil])
([nil nil ((1719 . 1726)) nil (25902 43022 34462 984000) 0 nil])
([nil nil ((3931 . 3934) (t 25902 43022 52464 165000)) nil (25902 43172 375797 331000) 0 nil])
([nil nil ((3934 . 3949)) nil (25902 43172 375795 814000) 0 nil])
([nil nil ((3949 . 3950)) nil (25902 43172 375791 532000) 0 nil])
([nil nil ((5002 . 5003) (t 25902 43172 397223 145000)) nil (25902 43236 284657 310000) 0 nil])
([nil nil ((5003 . 5008)) nil (25902 43236 284656 158000) 0 nil])
([nil nil ((5005 . 5016) (#("wai" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . -5005) (undo-tree-id1648 . -3) (undo-tree-id1649 . -3) 5008) nil (25902 43236 284654 904000) 0 nil])
([nil nil ((5016 . 5017)) nil (25902 43236 284651 518000) 0 nil])
([nil nil ((5017 . 5019)) nil (25902 43236 284650 646000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t ws-butler-chg chg)) . -5018) (undo-tree-id1647 . -1) 5019) nil (25902 43236 284648 412000) 0 nil])
([nil nil ((5018 . 5022)) nil (25902 43236 284635 476000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -5016) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (#(" " 0 1 (fontified t)) . -5017) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (#("N" 0 1 (fontified t)) . -5018) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (#("U" 0 1 (fontified t)) . -5019) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (#("L" 0 1 (fontified t)) . -5020) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (#("L" 0 1 (fontified t face font-lock-constant-face)) . -5021) (undo-tree-id1694 . -1) 5022 (t 25902 43236 305534 644000)) nil (25902 43252 733826 530000) 0 nil])
([nil nil ((5016 . 5017) (t 25902 43252 749606 376000)) nil (25902 43258 967743 418000) 0 nil])
([nil nil ((5017 . 5019)) nil (25902 43258 967738 104000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t c-in-sws t fontified t)) . -5022) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (#("
" 0 1 (c-is-sws t c-in-sws t fontified t)) . -5023) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (#("
" 0 1 (c-is-sws t c-in-sws t fontified t)) . -5024) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (#("
" 0 1 (c-is-sws t c-in-sws t fontified t)) . -5025) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) 5026 (t 25902 43258 985632 727000)) nil (25902 43533 122968 239000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face c-in-sws t)) . -1828) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) 1829 (#("int exists( char *input ) {
  FILE *file;
  if (file = fopen(input, \"r\")) {
    fclose(file);
    return 0;
  }
  else {
    printf(\"FILE \\'%s\\' not found.\\n\", input);
    return 1;
  }
}" 0 1 (c-is-sws t fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face) 3 4 (fontified t) 4 5 (fontified t face font-lock-function-name-face) 5 6 (fontified t face font-lock-function-name-face) 6 7 (fontified t face font-lock-function-name-face) 7 8 (fontified t face font-lock-function-name-face) 8 9 (fontified t face font-lock-function-name-face) 9 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 11 12 (fontified t) 12 13 (fontified t face font-lock-type-face) 13 14 (fontified t face font-lock-type-face) 14 15 (fontified t face font-lock-type-face) 15 16 (fontified t face font-lock-type-face) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t face font-lock-variable-name-face) 19 20 (fontified t face font-lock-variable-name-face) 20 21 (fontified t face font-lock-variable-name-face) 21 22 (fontified t face font-lock-variable-name-face) 22 23 (fontified t face font-lock-variable-name-face) 23 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 26 (fontified t) 26 27 (fontified t face (rainbow-delimiters-depth-1-face)) 27 28 (fontified t) 28 30 (fontified t) 30 31 (fontified t face font-lock-type-face) 31 32 (fontified t face font-lock-type-face) 32 33 (fontified t face font-lock-type-face) 33 34 (fontified t c-type c-decl-id-start face font-lock-type-face) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t face font-lock-variable-name-face) 37 38 (fontified t face font-lock-variable-name-face) 38 39 (fontified t face font-lock-variable-name-face) 39 40 (fontified t face font-lock-variable-name-face) 40 41 (fontified t) 41 42 (fontified t) 42 44 (fontified t) 44 45 (fontified t face font-lock-keyword-face) 45 46 (fontified t face font-lock-keyword-face) 46 47 (fontified t) 47 48 (fontified t face (rainbow-delimiters-depth-2-face)) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t face (rainbow-delimiters-depth-3-face)) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t face font-lock-string-face) 69 70 (fontified t face font-lock-string-face) 70 71 (fontified t face font-lock-string-face) 71 72 (fontified t face (rainbow-delimiters-depth-3-face)) 72 73 (fontified t face (rainbow-delimiters-depth-2-face)) 73 74 (fontified t) 74 75 (fontified t face (rainbow-delimiters-depth-2-face)) 75 76 (fontified t) 76 80 (fontified t) 80 86 (fontified t) 86 87 (fontified t face (rainbow-delimiters-depth-3-face)) 87 88 (fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 92 (fontified t face (rainbow-delimiters-depth-3-face)) 92 93 (fontified t) 93 94 (fontified t) 94 98 (fontified t) 98 99 (fontified t face font-lock-keyword-face) 99 100 (fontified t face font-lock-keyword-face) 100 101 (fontified t face font-lock-keyword-face) 101 102 (fontified t face font-lock-keyword-face) 102 103 (fontified t face font-lock-keyword-face) 103 104 (fontified t face font-lock-keyword-face) 104 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 110 (fontified t) 110 111 (fontified t face (rainbow-delimiters-depth-2-face)) 111 112 (fontified t) 112 114 (fontified t) 114 118 (fontified t face font-lock-keyword-face) 118 119 (fontified t) 119 120 (fontified t face (rainbow-delimiters-depth-2-face)) 120 121 (fontified t) 121 125 (fontified t) 125 126 (fontified t) 126 127 (fontified t) 127 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t face (rainbow-delimiters-depth-3-face)) 132 133 (fontified t face font-lock-string-face) 133 134 (fontified t face font-lock-string-face) 134 135 (fontified t face font-lock-string-face) 135 136 (fontified t face font-lock-string-face) 136 137 (fontified t face font-lock-string-face) 137 138 (fontified t face font-lock-string-face) 138 139 (fontified t face font-lock-string-face) 139 140 (fontified t face font-lock-string-face) 140 141 (fontified t face font-lock-string-face) 141 142 (fontified t face font-lock-string-face) 142 143 (fontified t face font-lock-string-face) 143 144 (fontified t face font-lock-string-face) 144 145 (fontified t face font-lock-string-face) 145 146 (fontified t face font-lock-string-face) 146 147 (fontified t face font-lock-string-face) 147 148 (fontified t face font-lock-string-face) 148 149 (fontified t face font-lock-string-face) 149 151 (fontified t face font-lock-string-face) 151 152 (fontified t face font-lock-string-face) 152 153 (fontified t face font-lock-string-face) 153 154 (fontified t face font-lock-string-face) 154 155 (fontified t face font-lock-string-face) 155 156 (fontified t face font-lock-string-face) 156 157 (fontified t face font-lock-string-face) 157 158 (fontified t face font-lock-string-face) 158 159 (fontified t) 159 160 (fontified t) 160 161 (fontified t) 161 162 (fontified t) 162 163 (fontified t) 163 165 (fontified t) 165 166 (fontified t face (rainbow-delimiters-depth-3-face)) 166 167 (fontified t) 167 168 (fontified t) 168 172 (fontified t) 172 173 (fontified t face font-lock-keyword-face) 173 174 (fontified t face font-lock-keyword-face) 174 177 (fontified t face font-lock-keyword-face) 177 178 (fontified t face font-lock-keyword-face) 178 179 (fontified t) 179 180 (fontified t) 180 181 (fontified t) 181 182 (fontified t) 182 184 (fontified t) 184 185 (fontified t face (rainbow-delimiters-depth-2-face)) 185 186 (fontified t) 186 187 (fontified t face (rainbow-delimiters-depth-1-face))) . 1829) (undo-tree-id1759 . -187) (undo-tree-id1760 . -187) (undo-tree-id1761 . -12) (undo-tree-id1762 . -25) (undo-tree-id1763 . -187) (undo-tree-id1764 . -187) (undo-tree-id1765 . -187) (t 25902 43533 142406 783000)) nil (25902 43591 123557 970000) 0 nil])
([nil nil ((#("// Checks if file exists. Try to delete this before submitting, and handle file checking in file_ops
" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 2 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 4 (c-in-sws t fontified t face font-lock-comment-face) 4 10 (c-in-sws t fontified t face font-lock-comment-face) 10 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 13 (c-in-sws t fontified t face font-lock-comment-face) 13 14 (c-in-sws t fontified t face font-lock-comment-face) 14 15 (c-in-sws t fontified t face font-lock-comment-face) 15 16 (c-in-sws t fontified t face font-lock-comment-face) 16 17 (c-in-sws t fontified t face font-lock-comment-face) 17 18 (c-in-sws t fontified t face font-lock-comment-face) 18 19 (c-in-sws t fontified t face font-lock-comment-face) 19 20 (c-in-sws t fontified t face font-lock-comment-face) 20 21 (c-in-sws t fontified t face font-lock-comment-face) 21 22 (c-in-sws t fontified t face font-lock-comment-face) 22 23 (c-in-sws t fontified t face font-lock-comment-face) 23 24 (c-in-sws t fontified t face font-lock-comment-face) 24 25 (c-in-sws t fontified t face font-lock-comment-face) 25 26 (c-in-sws t fontified t face font-lock-comment-face) 26 27 (c-in-sws t fontified t face font-lock-comment-face) 27 28 (c-in-sws t fontified t face font-lock-comment-face) 28 29 (c-in-sws t fontified t face font-lock-comment-face) 29 30 (c-in-sws t fontified t face font-lock-comment-face) 30 31 (c-in-sws t fontified t face font-lock-comment-face) 31 32 (c-in-sws t fontified t face font-lock-comment-face) 32 33 (c-in-sws t fontified t face font-lock-comment-face) 33 34 (c-in-sws t fontified t face font-lock-comment-face) 34 35 (c-in-sws t fontified t face font-lock-comment-face) 35 37 (c-in-sws t fontified t face font-lock-comment-face) 37 39 (c-in-sws t fontified t face font-lock-comment-face) 39 40 (c-in-sws t fontified t face font-lock-comment-face) 40 42 (c-in-sws t fontified t face font-lock-comment-face) 42 43 (c-in-sws t fontified t face font-lock-comment-face) 43 44 (c-in-sws t fontified t face font-lock-comment-face) 44 45 (c-in-sws t fontified t face font-lock-comment-face) 45 46 (c-in-sws t fontified t face font-lock-comment-face) 46 47 (c-in-sws t fontified t face font-lock-comment-face) 47 48 (c-in-sws t fontified t face font-lock-comment-face) 48 49 (c-in-sws t fontified t face font-lock-comment-face) 49 51 (c-in-sws t fontified t face font-lock-comment-face) 51 52 (c-in-sws t fontified t face font-lock-comment-face) 52 54 (c-in-sws t fontified t face font-lock-comment-face) 54 55 (c-in-sws t fontified t face font-lock-comment-face) 55 56 (c-in-sws t fontified t face font-lock-comment-face) 56 57 (c-in-sws t fontified t face font-lock-comment-face) 57 58 (c-in-sws t fontified t face font-lock-comment-face) 58 59 (c-in-sws t fontified t face font-lock-comment-face) 59 61 (c-in-sws t fontified t face font-lock-comment-face) 61 62 (c-in-sws t fontified t face font-lock-comment-face) 62 63 (c-in-sws t fontified t face font-lock-comment-face) 63 64 (c-in-sws t fontified t face font-lock-comment-face) 64 65 (c-in-sws t fontified t face font-lock-comment-face) 65 66 (c-in-sws t fontified t face font-lock-comment-face) 66 68 (c-in-sws t fontified t face font-lock-comment-face) 68 69 (c-in-sws t fontified t face font-lock-comment-face) 69 71 (c-in-sws t fontified t face font-lock-comment-face) 71 72 (c-in-sws t fontified t face font-lock-comment-face) 72 73 (c-in-sws t fontified t face font-lock-comment-face) 73 74 (c-in-sws t fontified t face font-lock-comment-face) 74 75 (c-in-sws t fontified t face font-lock-comment-face) 75 76 (c-in-sws t fontified t face font-lock-comment-face) 76 77 (c-in-sws t fontified t face font-lock-comment-face) 77 78 (c-in-sws t fontified t face font-lock-comment-face) 78 79 (c-in-sws t fontified t face font-lock-comment-face) 79 80 (c-in-sws t fontified t face font-lock-comment-face) 80 82 (c-in-sws t fontified t face font-lock-comment-face) 82 83 (c-in-sws t fontified t face font-lock-comment-face) 83 84 (c-in-sws t fontified t face font-lock-comment-face) 84 85 (c-in-sws t fontified t face font-lock-comment-face) 85 87 (c-in-sws t fontified t face font-lock-comment-face) 87 89 (c-in-sws t fontified t face font-lock-comment-face) 89 90 (c-in-sws t fontified t face font-lock-comment-face) 90 91 (c-in-sws t fontified t face font-lock-comment-face) 91 92 (c-in-sws t fontified t face font-lock-comment-face) 92 93 (c-in-sws t fontified t face font-lock-comment-face) 93 94 (c-in-sws t fontified t face font-lock-comment-face) 94 95 (c-in-sws t fontified t face font-lock-comment-face) 95 96 (c-in-sws t fontified t face font-lock-comment-face) 96 97 (c-in-sws t fontified t face font-lock-comment-face) 97 98 (c-in-sws t fontified t face font-lock-comment-face) 98 99 (c-in-sws t fontified t face font-lock-comment-face) 99 100 (c-in-sws t fontified t face font-lock-comment-face) 100 101 (fontified t ws-butler-chg delete face font-lock-comment-face c-in-sws t)) . 1728) (undo-tree-id1715 . -100) (undo-tree-id1716 . 1) (undo-tree-id1717 . -99) (undo-tree-id1718 . -100) (undo-tree-id1719 . -100) (undo-tree-id1720 . -100) (undo-tree-id1721 . -100) (undo-tree-id1722 . -100) (undo-tree-id1723 . -100) (undo-tree-id1724 . -100) (undo-tree-id1725 . -100) (undo-tree-id1726 . -100) (undo-tree-id1727 . -100) (undo-tree-id1728 . -100) (undo-tree-id1729 . -99) (undo-tree-id1730 . -99) (undo-tree-id1731 . -99) (undo-tree-id1732 . -99) (undo-tree-id1733 . -99) (undo-tree-id1734 . -99) (undo-tree-id1735 . -99) (undo-tree-id1736 . -99) (undo-tree-id1737 . -99) (undo-tree-id1738 . -99) (undo-tree-id1739 . -99) (undo-tree-id1740 . -99) (undo-tree-id1741 . -99) (undo-tree-id1742 . -99) (undo-tree-id1743 . -99) (undo-tree-id1744 . -99) (undo-tree-id1745 . -99) (undo-tree-id1746 . -99) (undo-tree-id1747 . -99) (undo-tree-id1748 . -101) 1827) nil (25902 43591 123536 103000) 0 nil])
([nil nil ((3043 . 3046) (t 25902 43591 146493 100000)) nil (25902 43627 506455 648000) 0 nil])
([nil nil ((3046 . 3052)) nil (25902 43627 506454 724000) 0 nil])
([nil nil ((3052 . 3053)) nil (25902 43627 506453 922000) 0 nil])
([nil nil ((3056 . 3057) (nil syntax-table nil 3056 . 3057) (nil syntax-table (1) 3053 . 3054) (3055 . 3056) (nil syntax-table nil 3104 . 3105) (nil syntax-table (1) 3092 . 3093) (3054 . 3055) (nil syntax-table nil 3054 . 3055) (nil syntax-table (1) 3053 . 3054) (3053 . 3054)) nil (25902 43627 506452 624000) 0 nil])
([nil nil ((3057 . 3058)) nil (25902 43627 506449 849000) 0 nil])
([nil nil ((3058 . 3059)) nil (25902 43627 506445 128000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -3492) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) 3493 (t 25902 43627 578536 531000)) nil (25902 43922 304018 762000) 0 nil])
([nil nil ((3492 . 3493)) nil (25902 43922 304003 539000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -3492) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) 3493 (t 25902 43922 326648 438000)) nil (25902 43942 784282 856000) 0 nil])
([nil nil ((3492 . 3493)) nil (25902 43942 784270 600000) 0 nil])
([nil nil ((3802 . 3813) (t 25902 43942 802643 622000)) nil (25902 43980 350212 160000) 0 nil])
([nil nil ((3813 . 3821)) nil (25902 43980 350210 990000) 0 nil])
([nil nil ((3821 . 3822)) nil (25902 43980 350209 646000) 0 nil])
([nil nil ((3833 . 3835)) nil (25902 43980 350205 492000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -3833) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . -3834) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) 3835 (t 25902 43980 370631 417000)) nil (25902 43995 534420 714000) 0 nil])
([nil nil ((#("          return 0;
" 0 10 (fontified t) 10 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t face font-lock-keyword-face) 15 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t)) . 3803) (undo-tree-id1775 . -13) (undo-tree-id1776 . 10) (undo-tree-id1777 . -15) (undo-tree-id1778 . -9) (undo-tree-id1779 . -19) (undo-tree-id1780 . -12) (undo-tree-id1781 . -12) (undo-tree-id1782 . -12) (undo-tree-id1783 . -12) (undo-tree-id1784 . -12) (undo-tree-id1785 . -12) (undo-tree-id1786 . -12) (undo-tree-id1787 . -10) (undo-tree-id1788 . -10) (undo-tree-id1789 . -10) (undo-tree-id1790 . -10) (undo-tree-id1791 . -10) (undo-tree-id1792 . -10) (undo-tree-id1793 . -10) (undo-tree-id1794 . -10) (undo-tree-id1795 . -10) (undo-tree-id1796 . -10) (undo-tree-id1797 . -10) (undo-tree-id1798 . -10) (undo-tree-id1799 . -10) (undo-tree-id1800 . -10) (undo-tree-id1801 . -9) (undo-tree-id1802 . -9) (undo-tree-id1803 . -9) (undo-tree-id1804 . -9) (undo-tree-id1805 . -9) (undo-tree-id1806 . -9) (undo-tree-id1807 . -9) (undo-tree-id1808 . -9) (undo-tree-id1809 . -9) (undo-tree-id1810 . -9) (undo-tree-id1811 . -9) (undo-tree-id1812 . -9) (undo-tree-id1813 . -9) (undo-tree-id1814 . -9) (undo-tree-id1815 . -9) (undo-tree-id1816 . -9) (undo-tree-id1817 . -9) (undo-tree-id1818 . -9) (undo-tree-id1819 . -9) (undo-tree-id1820 . -20) 3812) nil (25902 43995 533834 534000) 0 nil])
([nil nil ((4304 . 4309) (t 25902 43995 562625 312000)) nil (25902 44007 151261 293000) 0 nil])
([nil nil ((4309 . 4316)) nil (25902 44007 151260 143000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t ws-butler-chg chg)) . -4315) (undo-tree-id2101 . -1) 4316) nil (25902 44007 151258 286000) 0 nil])
([nil nil ((4315 . 4317)) nil (25902 44007 151251 200000) 0 nil])
([nil nil ((4317 . 4318)) nil (25902 44007 151246 838000) 0 nil])
([nil nil ((3482 . 3485) (t 25902 44007 166620 217000)) nil (25902 44022 70020 201000) 0 nil])
([nil nil ((3485 . 3491)) nil (25902 44022 70019 99000) 0 nil])
([nil nil ((3491 . 3492)) nil (25902 44022 70018 197000) 0 nil])
([nil nil ((3495 . 3496) (nil syntax-table nil 3495 . 3496) (nil syntax-table (1) 3492 . 3493) (3494 . 3495) (nil syntax-table nil 3506 . 3507) (nil syntax-table (1) 3492 . 3493) (3493 . 3494) (nil syntax-table nil 3493 . 3494) (nil syntax-table (1) 3492 . 3493) (3492 . 3493)) nil (25902 44022 70015 974000) 0 nil])
([nil nil ((3496 . 3497)) nil (25902 44022 70006 602000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg)) . -3496) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) 3497) nil (25902 44022 70000 736000) 0 nil])
([nil nil ((3496 . 3497)) nil (25902 44022 69964 279000) 0 nil])
([nil nil ((3497 . 3498)) nil (25902 44022 69959 165000) 0 nil])
([nil nil ((#("/" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -4461) (undo-tree-id2126 . -1) 4462 (t 25902 44022 90613 131000)) nil (25902 44197 47923 538000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t ws-butler-chg delete)) . 4461)) nil (25902 44197 47920 420000) 0 nil])
([nil nil ((4453 . 4461) (#("              " 0 7 (c-in-sws t c-is-sws t fontified t) 7 8 (fontified t) 8 9 (fontified t ws-butler-chg delete) 9 14 (fontified t)) . 4453) (undo-tree-id2120 . -8) (undo-tree-id2121 . -8) (undo-tree-id2122 . -13) (undo-tree-id2123 . -13) (undo-tree-id2124 . -8) (undo-tree-id2125 . -8) 4461) nil (25902 44197 47916 28000) 0 nil])
([nil nil ((4492 . 4493) (nil syntax-table nil 4510 . 4511) (nil syntax-table (1) 4468 . 4469) (4491 . 4492) (t 25902 44197 74490 31000)) nil (25902 44220 995339 600000) 0 nil])
([nil nil ((4491 . 4492) (t 25902 44221 22468 197000)) nil (25902 44383 563312 964000) 0 nil])
([nil nil ((4492 . 4501)) nil (25902 44383 563311 576000) 0 nil])
([nil nil ((4519 . 4520)) nil (25902 44383 563310 752000) 0 nil])
([nil nil ((4520 . 4524)) nil (25902 44383 563309 746000) 0 nil])
([nil nil ((4524 . 4527)) nil (25902 44383 563308 391000) 0 nil])
([nil nil ((4527 . 4529)) nil (25902 44383 563303 739000) 0 nil])
([nil nil ((4461 . 4463) (t 25902 44383 590294 975000)) nil (25902 44460 225361 50000) 0 nil])
([nil nil ((2235 . 2236) (t 25902 44460 246200 526000)) nil (25902 44642 303606 47000) 0 nil])
([nil current ((2248 . 2249)) nil (25902 44642 303601 703000) 0 nil])
nil
