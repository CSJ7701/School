(undo-tree-save-format-version . 1)
"f975ef78fdbef04e658ec72840767d0de0330a51"
[nil nil nil nil (25865 45250 356699 237000) 0 nil]
([nil nil ((739 . 741) (634 . 636) (529 . 531) (424 . 426) (319 . 321) (214 . 216) (109 . 111) (4 . 6) (nil rear-nonsticky nil 930 . 931) (nil fontified nil 519 . 931) (nil fontified nil 501 . 519) (nil fontified nil 3 . 501) (nil fontified nil 1 . 3) (1 . 931) (t 25865 45250 364234 329000)) nil (25865 45892 979781 790000) 0 nil])
([nil nil ((947 . 950)) nil (25865 45892 979777 904000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t face font-lock-comment-face)) . -946) (undo-tree-id3 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -947) (undo-tree-id4 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -948) (undo-tree-id5 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -949) (undo-tree-id6 . -1) 950) nil (25865 45892 979776 288000) 0 nil])
([nil nil ((844 . 847) (#("                                                                                                      " 0 102 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 844) (undo-tree-id2 . -102) 946) nil (25865 45892 979768 755000) 0 nil])
([nil nil ((845 . 848) (#("  " 0 2 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 845) (undo-tree-id0 . -2) (undo-tree-id1 . -2) 847) nil (25865 45892 979760 552000) 0 nil])
([nil nil ((848 . 849)) nil (25865 45892 979734 165000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified nil face font-lock-comment-face c-in-sws t)) . 846) (849 . 850)) nil (25865 45892 979732 678000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 724) (#("  " 0 2 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 620) (#("  " 0 2 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 517) (#("  " 0 2 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 414) (#("  " 0 2 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 311) (#("  " 0 2 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 208) (#("   " 0 3 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 105) (848 . 849)) nil (25865 45892 979726 852000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face)) . -2310) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (#(" " 0 1 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face)) . -2311) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (#(" " 0 1 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face)) . -2312) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (#(" " 0 1 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face)) . -2313) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (#(" " 0 1 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face)) . -2314) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (#("
" 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -2315) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (#("
" 0 1 (ws-butler-chg chg rear-nonsticky t fontified t c-in-sws t face font-lock-comment-face)) . -2316) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (#("
" 0 1 (ws-butler-chg delete fontified t c-in-sws t face font-lock-comment-face)) . -2317) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) 2318 (nil rear-nonsticky nil 2316 . 2317) (nil fontified nil 4 . 2317) (4 . 2317) (#("  $$\\   $$\\                                                                     $$\\               $$\\
  $$ |  $$ |                                                                    $$ |            $$$$ |
  $$ |  $$ | $$$$$$\\  $$$$$$\\$$$$\\   $$$$$$\\  $$\\  $$\\  $$\\  $$$$$$\\   $$$$$$\\  $$ |  $$\\       \\_$$ |
  $$$$$$$$ |$$  __$$\\ $$  _$$  _$$\\ $$  __$$\\ $$ | $$ | $$ |$$  __$$\\ $$  __$$\\ $$ | $$  |        $$ |
  $$  __$$ |$$ /  $$ |$$ / $$ / $$ |$$$$$$$$ |$$ | $$ | $$ |$$ /  $$ |$$ |  \\__|$$$$$$  /         $$ |
  $$ |  $$ |$$ |  $$ |$$ | $$ | $$ |$$   ____|$$ | $$ | $$ |$$ |  $$ |$$ |      $$  _$$<          $$ |
  $$ |  $$ |\\$$$$$$  |$$ | $$ | $$ |\\$$$$$$$\\ \\$$$$$\\$$$$  |\\$$$$$$  |$$ |      $$ | \\$$\\       $$$$$$\\
  \\__|  \\__| \\______/ \\__| \\__| \\__| \\_______| \\_____\\____/  \\______/ \\__|      \\__|  \\__|      \\______|
" 0 101 (fontified t c-in-sws t face font-lock-comment-face) 101 102 (fontified t face font-lock-comment-face c-in-sws t) 102 204 (fontified t face font-lock-comment-face c-in-sws t) 204 205 (fontified t face font-lock-comment-face c-in-sws t) 205 307 (fontified t face font-lock-comment-face c-in-sws t) 307 308 (fontified t face font-lock-comment-face c-in-sws t) 308 410 (fontified t face font-lock-comment-face c-in-sws t) 410 411 (fontified t face font-lock-comment-face c-in-sws t) 411 488 (fontified t face font-lock-comment-face c-in-sws t) 488 498 (fontified t face font-lock-comment-face c-in-sws t) 498 500 (fontified t face font-lock-comment-face c-in-sws t) 500 513 (fontified t face font-lock-comment-face c-in-sws t) 513 514 (fontified t face font-lock-comment-face c-in-sws t) 514 516 (fontified t face font-lock-comment-face c-in-sws t) 516 616 (fontified t face font-lock-comment-face c-in-sws t) 616 617 (fontified t face font-lock-comment-face c-in-sws t) 617 720 (fontified t face font-lock-comment-face c-in-sws t) 720 721 (fontified t face font-lock-comment-face c-in-sws t) 721 826 (c-in-sws t fontified t face font-lock-comment-face)) . 4) (undo-tree-id506 . -826) (undo-tree-id507 . -758) (undo-tree-id508 . -758) (undo-tree-id509 . -758) (undo-tree-id510 . -826) (t 25865 45892 986779 150000)) nil (25865 45992 13288 710000) 0 nil])
([nil nil ((#("                                                                                                   
" 0 99 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face) 99 100 (ws-butler-chg delete fontified t face font-lock-comment-face c-in-sws t)) . 2211) (undo-tree-id435 . -98) (undo-tree-id436 . -99) (undo-tree-id437 . -99) (undo-tree-id438 . -99) (undo-tree-id439 . -99) (undo-tree-id440 . -99) (undo-tree-id441 . -99) (undo-tree-id442 . -99) (undo-tree-id443 . -99) (undo-tree-id444 . -99) (undo-tree-id445 . -99) (undo-tree-id446 . 1) (undo-tree-id447 . -98) (undo-tree-id448 . -98) (undo-tree-id449 . -98) (undo-tree-id450 . -98) (undo-tree-id451 . -98) (undo-tree-id452 . -98) (undo-tree-id453 . -98) (undo-tree-id454 . -98) (undo-tree-id455 . -98) (undo-tree-id456 . -98) (undo-tree-id457 . -98) (undo-tree-id458 . -98) (undo-tree-id459 . -98) (undo-tree-id460 . -98) (undo-tree-id461 . -98) (undo-tree-id462 . -98) (undo-tree-id463 . -98) (undo-tree-id464 . -98) (undo-tree-id465 . -98) (undo-tree-id466 . -100) (undo-tree-id467 . -99) 2309) nil (25865 45992 13186 838000) 0 nil])
([nil nil ((#("                                                                                                        
" 0 105 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 846) (undo-tree-id415 . -1) (undo-tree-id416 . -104) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -105) 847) nil (25865 45992 13113 664000) 0 nil])
([nil nil ((#("                                                                                                        
" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-face) 1 80 (ws-butler-chg chg fontified t face font-lock-comment-face) 80 104 (ws-butler-chg chg fontified t face font-lock-comment-face) 104 105 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 846) (undo-tree-id385 . -1) (undo-tree-id386 . -104) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -104) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -105) 847) nil (25865 45992 13065 341000) 0 nil])
([nil nil ((#("                                                                                                        
" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-face) 1 104 (ws-butler-chg chg fontified t face font-lock-comment-face) 104 105 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 846) (undo-tree-id355 . -1) (undo-tree-id356 . -104) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -104) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -105) 847) nil (25865 45992 12754 927000) 0 nil])
([nil nil ((#("                                                                                                        
" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-face) 1 104 (ws-butler-chg chg fontified t face font-lock-comment-face) 104 105 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 846) (undo-tree-id325 . -1) (undo-tree-id326 . -104) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -104) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -105) 847) nil (25865 45992 12692 897000) 0 nil])
([nil nil ((#("                                                                                                        
" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-face) 1 104 (ws-butler-chg chg fontified t face font-lock-comment-face) 104 105 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 846) (undo-tree-id295 . -1) (undo-tree-id296 . -104) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -104) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -105) 847) nil (25865 45992 12619 312000) 0 nil])
([nil nil ((#("                                                                                                        
" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-face) 1 104 (ws-butler-chg chg fontified t face font-lock-comment-face) 104 105 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 846) (undo-tree-id265 . -1) (undo-tree-id266 . -104) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -104) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -105) 847) nil (25865 45992 12557 553000) 0 nil])
([nil nil ((#("                                                                                                        
" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-face) 1 80 (ws-butler-chg chg fontified t face font-lock-comment-face) 80 104 (ws-butler-chg chg fontified t face font-lock-comment-face) 104 105 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 846) (undo-tree-id235 . -1) (undo-tree-id236 . -104) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -104) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -105) 847) nil (25865 45992 12493 730000) 0 nil])
([nil nil ((#("                                                                                                        
" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-face) 1 104 (ws-butler-chg chg fontified t face font-lock-comment-face) 104 105 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 846) (undo-tree-id205 . -1) (undo-tree-id206 . -104) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -104) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -105) 847) nil (25865 45992 12432 124000) 0 nil])
([nil nil ((#("                                                                                                        
" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-face) 1 104 (ws-butler-chg chg fontified t face font-lock-comment-face) 104 105 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 846) (undo-tree-id175 . -1) (undo-tree-id176 . -104) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -104) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -105) 847) nil (25865 45992 12362 85000) 0 nil])
([nil nil ((#("                                                                                                        
" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-face) 1 104 (ws-butler-chg chg fontified t face font-lock-comment-face) 104 105 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 846) (undo-tree-id145 . -1) (undo-tree-id146 . -104) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -104) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -105) 847) nil (25865 45992 12297 985000) 0 nil])
([nil nil ((#("                                                                                                        
" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-face) 1 104 (ws-butler-chg chg fontified t face font-lock-comment-face) 104 105 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 846) (undo-tree-id115 . -1) (undo-tree-id116 . -104) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -104) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -105) 847) nil (25865 45992 12229 794000) 0 nil])
([nil nil ((#("                                                                                                        
" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-face) 1 80 (ws-butler-chg chg fontified t face font-lock-comment-face) 80 104 (ws-butler-chg chg fontified t face font-lock-comment-face) 104 105 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 846) (undo-tree-id85 . -1) (undo-tree-id86 . -104) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -104) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -105) 847) nil (25865 45992 12166 292000) 0 nil])
([nil nil ((#("                                                                                                        
" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-face) 1 104 (ws-butler-chg chg fontified t face font-lock-comment-face) 104 105 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 846) (undo-tree-id24 . -1) (undo-tree-id25 . -105) (undo-tree-id26 . -105) (undo-tree-id27 . -105) (undo-tree-id28 . -105) (undo-tree-id29 . -105) (undo-tree-id30 . -105) (undo-tree-id31 . -105) (undo-tree-id32 . -105) (undo-tree-id33 . -105) (undo-tree-id34 . -105) (undo-tree-id35 . -105) (undo-tree-id36 . -105) (undo-tree-id37 . -105) (undo-tree-id38 . -105) (undo-tree-id39 . -105) (undo-tree-id40 . -105) (undo-tree-id41 . -105) (undo-tree-id42 . -105) (undo-tree-id43 . -105) (undo-tree-id44 . -105) (undo-tree-id45 . -105) (undo-tree-id46 . -105) (undo-tree-id47 . -105) (undo-tree-id48 . -105) (undo-tree-id49 . -105) (undo-tree-id50 . -105) (undo-tree-id51 . -105) (undo-tree-id52 . -105) (undo-tree-id53 . -104) (undo-tree-id54 . -105) (undo-tree-id55 . -105) (undo-tree-id56 . -105) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -104) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -105) 847) nil (25865 45992 11906 642000) 0 nil])
([nil nil ((846 . 847)) nil (25865 45992 11848 685000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -629) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -630) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -631) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -632) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t c-in-sws t face font-lock-comment-face)) . -633) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -634) (undo-tree-id23 . -1) 635) nil (25865 45992 11845 896000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg face font-lock-comment-face fontified t c-in-sws t)) . -529) (undo-tree-id7 . -1) 530) nil (25865 45992 11831 718000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 109)) nil (25865 45992 11817 807000) 0 nil])
([nil nil ((837 . 840) (t 25865 45992 22554 899000)) nil (25865 46082 899372 109000) 0 nil])
([nil nil ((840 . 842)) nil (25865 46082 899370 892000) 0 nil])
([nil nil ((#("x" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -840) (undo-tree-id518 . -1) (#("2" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -841) (undo-tree-id519 . -1) 842) nil (25865 46082 899369 770000) 0 nil])
([nil nil ((845 . 846)) nil (25865 46082 899355 893000) 0 nil])
([nil nil ((846 . 847)) nil (25865 46082 899355 84000) 0 nil])
([nil nil ((847 . 855)) nil (25865 46082 899354 76000) 0 nil])
([nil nil ((855 . 864)) nil (25865 46082 899353 290000) 0 nil])
([nil nil ((864 . 866)) nil (25865 46082 899352 312000) 0 nil])
([nil nil ((866 . 874)) nil (25865 46082 899351 439000) 0 nil])
([nil nil ((874 . 876)) nil (25865 46082 899350 615000) 0 nil])
([nil nil ((876 . 877)) nil (25865 46082 899349 762000) 0 nil])
([nil nil ((877 . 878)) nil (25865 46082 899349 42000) 0 nil])
([nil nil ((878 . 881)) nil (25865 46082 899348 141000) 0 nil])
([nil nil ((879 . 882) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 879) (undo-tree-id517 . -2) 881) nil (25865 46082 899347 48000) 0 nil])
([nil nil ((880 . 883) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 880) (undo-tree-id516 . -2) 882) nil (25865 46082 899344 748000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil ws-butler-chg chg)) . 881) (undo-tree-id515 . -2) (883 . 884)) nil (25865 46082 899342 581000) 0 nil])
([nil nil ((882 . 883)) nil (25865 46082 899340 443000) 0 nil])
([nil nil ((879 . 881) (879 . 881)) nil (25865 46082 899339 524000) 0 nil])
([nil nil ((883 . 884)) nil (25865 46082 899338 77000) 0 nil])
([nil nil ((879 . 882) (#("  " 0 2 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . 879) (undo-tree-id514 . -2) 881) nil (25865 46082 899336 931000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-delimiter-face)) . 884) 882) nil (25865 46082 899334 311000) 0 nil])
([nil nil ((884 . 904)) nil (25865 46082 899333 137000) 0 nil])
([nil nil ((904 . 907)) nil (25865 46082 899332 258000) 0 nil])
([nil nil ((905 . 908) (#("  " 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t) 1 2 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . 905) (undo-tree-id513 . -2) 907) nil (25865 46082 899331 24000) 0 nil])
([nil nil ((908 . 910)) nil (25865 46082 899328 91000) 0 nil])
([nil nil ((910 . 916)) nil (25865 46082 899327 107000) 0 nil])
([nil nil ((916 . 925)) nil (25865 46082 899325 638000) 0 nil])
([nil nil ((925 . 928)) nil (25865 46082 899322 909000) 0 nil])
([nil nil ((926 . 929) (#("  " 0 1 (fontified t ws-butler-chg chg c-is-sws t) 1 2 (fontified t ws-butler-chg chg c-in-sws t)) . 926) (undo-tree-id512 . -2) 928) nil (25865 46082 899318 885000) 0 nil])
([nil nil ((927 . 930) (#("  " 0 2 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . 927) (undo-tree-id511 . -2) 929) nil (25865 46082 899311 325000) 0 nil])
([nil nil ((930 . 932)) nil (25865 46082 899301 279000) 0 nil])
([nil nil ((932 . 947)) nil (25865 46082 899298 344000) 0 nil])
([nil nil ((948 . 956)) nil (25865 46082 899296 486000) 0 nil])
([nil nil ((948 . 950) (956 . 957)) nil (25865 46082 899289 993000) 0 nil])
([nil nil ((925 . 928) (t 25865 46082 910349 98000)) nil (25865 46127 205565 608000) 0 nil])
([nil nil ((928 . 933)) nil (25865 46127 205564 684000) 0 nil])
([nil nil ((933 . 934) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -933) (933 . 935) (#("while" 0 1 (fontified nil ws-butler-chg chg c-is-sws t face font-lock-keyword-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 4 5 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 933) (undo-tree-id522 . -5) (undo-tree-id523 . -5) (928 . 933) 933) nil (25865 46127 205563 438000) 0 nil])
([nil nil ((934 . 935)) nil (25865 46127 205560 161000) 0 nil])
([nil nil ((935 . 940)) nil (25865 46127 205559 480000) 0 nil])
([nil nil ((940 . 941)) nil (25865 46127 205558 624000) 0 nil])
([nil nil ((941 . 947)) nil (25865 46127 205557 843000) 0 nil])
([nil nil ((947 . 949)) nil (25865 46127 205557 106000) 0 nil])
([nil nil ((949 . 954)) nil (25865 46127 205556 324000) 0 nil])
([nil nil ((954 . 955)) nil (25865 46127 205555 359000) 0 nil])
([nil nil ((955 . 962)) nil (25865 46127 205554 458000) 0 nil])
([nil nil ((956 . 963) (#("      " 0 6 (fontified t ws-butler-chg chg)) . 956) (undo-tree-id521 . -6) 962) nil (25865 46127 205553 243000) 0 nil])
([nil nil ((957 . 961) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . 957) (undo-tree-id520 . -6) (963 . 964)) nil (25865 46127 205550 183000) 0 nil])
([nil nil ((904 . 907)) nil (25865 46127 205542 769000) 0 nil])
([nil nil ((907 . 915)) nil (25865 46127 205538 297000) 0 nil])
([nil nil ((915 . 916) (t 25865 46127 218248 763000)) nil (25865 46154 470920 877000) 0 nil])
([nil nil ((916 . 917)) nil (25865 46154 470918 776000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg)) . -916) (undo-tree-id526 . -1) 917) nil (25865 46154 470915 289000) 0 nil])
([nil nil ((916 . 918)) nil (25865 46154 470909 272000) 0 nil])
([nil nil ((918 . 919)) nil (25865 46154 470908 78000) 0 nil])
([nil nil ((919 . 939)) nil (25865 46154 470906 980000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -938) (undo-tree-id524 . -1) (undo-tree-id525 . -1) 939) nil (25865 46154 470905 110000) 0 nil])
([nil nil ((938 . 953)) nil (25865 46154 470897 997000) 0 nil])
([nil nil ((953 . 974)) nil (25865 46154 470897 64000) 0 nil])
([nil nil ((974 . 995)) nil (25865 46154 470896 221000) 0 nil])
([nil nil ((995 . 1011)) nil (25865 46154 470894 841000) 0 nil])
([nil nil ((1011 . 1013)) nil (25865 46154 470889 891000) 0 nil])
([nil nil ((#("input=$1 // Argument passed to program. This is how to do it in bash - no clue whether this is true for c." 0 1 (fontified t c-is-sws t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t c-in-sws t c-is-sws t) 9 10 (fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 10 11 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 11 12 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 12 13 (fontified t c-in-sws t face font-lock-comment-face) 13 14 (fontified t c-in-sws t face font-lock-comment-face) 14 15 (fontified t c-in-sws t face font-lock-comment-face) 15 16 (fontified t c-in-sws t face font-lock-comment-face) 16 17 (fontified t c-in-sws t face font-lock-comment-face) 17 18 (fontified t c-in-sws t face font-lock-comment-face) 18 19 (fontified t c-in-sws t face font-lock-comment-face) 19 20 (fontified t c-in-sws t face font-lock-comment-face) 20 21 (fontified t c-in-sws t face font-lock-comment-face) 21 22 (fontified t c-in-sws t face font-lock-comment-face) 22 23 (fontified t c-in-sws t face font-lock-comment-face) 23 24 (fontified t c-in-sws t face font-lock-comment-face) 24 25 (fontified t c-in-sws t face font-lock-comment-face) 25 26 (fontified t c-in-sws t face font-lock-comment-face) 26 27 (fontified t c-in-sws t face font-lock-comment-face) 27 28 (fontified t c-in-sws t face font-lock-comment-face) 28 29 (fontified t c-in-sws t face font-lock-comment-face) 29 30 (fontified t c-in-sws t face font-lock-comment-face) 30 31 (fontified t c-in-sws t face font-lock-comment-face) 31 32 (fontified t c-in-sws t face font-lock-comment-face) 32 33 (fontified t c-in-sws t face font-lock-comment-face) 33 34 (fontified t c-in-sws t face font-lock-comment-face) 34 35 (fontified t c-in-sws t face font-lock-comment-face) 35 36 (fontified t c-in-sws t face font-lock-comment-face) 36 37 (fontified t c-in-sws t face font-lock-comment-face) 37 38 (fontified t c-in-sws t face font-lock-comment-face) 38 39 (fontified t c-in-sws t face font-lock-comment-face) 39 40 (fontified t c-in-sws t face font-lock-comment-face) 40 41 (fontified t c-in-sws t face font-lock-comment-face) 41 42 (fontified t c-in-sws t face font-lock-comment-face) 42 43 (fontified t c-in-sws t face font-lock-comment-face) 43 44 (fontified t c-in-sws t face font-lock-comment-face) 44 45 (fontified t c-in-sws t face font-lock-comment-face) 45 46 (fontified t c-in-sws t face font-lock-comment-face) 46 47 (fontified t c-in-sws t face font-lock-comment-face) 47 48 (fontified t c-in-sws t face font-lock-comment-face) 48 49 (fontified t c-in-sws t face font-lock-comment-face) 49 50 (fontified t c-in-sws t face font-lock-comment-face) 50 51 (fontified t c-in-sws t face font-lock-comment-face) 51 52 (fontified t c-in-sws t face font-lock-comment-face) 52 53 (fontified t c-in-sws t face font-lock-comment-face) 53 54 (fontified t c-in-sws t face font-lock-comment-face) 54 55 (fontified t c-in-sws t face font-lock-comment-face) 55 56 (fontified t c-in-sws t face font-lock-comment-face) 56 57 (fontified t c-in-sws t face font-lock-comment-face) 57 58 (fontified t c-in-sws t face font-lock-comment-face) 58 59 (fontified t c-in-sws t face font-lock-comment-face) 59 60 (fontified t c-in-sws t face font-lock-comment-face) 60 61 (fontified t c-in-sws t face font-lock-comment-face) 61 62 (fontified t c-in-sws t face font-lock-comment-face) 62 63 (fontified t c-in-sws t face font-lock-comment-face) 63 64 (fontified t c-in-sws t face font-lock-comment-face) 64 65 (fontified t c-in-sws t face font-lock-comment-face) 65 66 (fontified t c-in-sws t face font-lock-comment-face) 66 67 (fontified t c-in-sws t face font-lock-comment-face) 67 68 (fontified t c-in-sws t face font-lock-comment-face) 68 69 (fontified t c-in-sws t face font-lock-comment-face) 69 70 (fontified t c-in-sws t face font-lock-comment-face) 70 71 (fontified t c-in-sws t face font-lock-comment-face) 71 72 (fontified t c-in-sws t face font-lock-comment-face) 72 73 (fontified t c-in-sws t face font-lock-comment-face) 73 74 (fontified t c-in-sws t face font-lock-comment-face) 74 75 (fontified t c-in-sws t face font-lock-comment-face) 75 76 (fontified t c-in-sws t face font-lock-comment-face) 76 77 (fontified t c-in-sws t face font-lock-comment-face) 77 78 (fontified t c-in-sws t face font-lock-comment-face) 78 79 (fontified t c-in-sws t face font-lock-comment-face) 79 80 (fontified t c-in-sws t face font-lock-comment-face) 80 81 (fontified t c-in-sws t face font-lock-comment-face) 81 82 (fontified t c-in-sws t face font-lock-comment-face) 82 83 (fontified t c-in-sws t face font-lock-comment-face) 83 84 (fontified t c-in-sws t face font-lock-comment-face) 84 85 (fontified t c-in-sws t face font-lock-comment-face) 85 86 (fontified t c-in-sws t face font-lock-comment-face) 86 87 (fontified t c-in-sws t face font-lock-comment-face) 87 88 (fontified t c-in-sws t face font-lock-comment-face) 88 89 (fontified t c-in-sws t face font-lock-comment-face) 89 90 (fontified t c-in-sws t face font-lock-comment-face) 90 91 (fontified t c-in-sws t face font-lock-comment-face) 91 92 (fontified t c-in-sws t face font-lock-comment-face) 92 93 (fontified t c-in-sws t face font-lock-comment-face) 93 94 (fontified t c-in-sws t face font-lock-comment-face) 94 95 (fontified t c-in-sws t face font-lock-comment-face) 95 96 (fontified t c-in-sws t face font-lock-comment-face) 96 97 (fontified t c-in-sws t face font-lock-comment-face) 97 98 (fontified t c-in-sws t face font-lock-comment-face) 98 99 (fontified t c-in-sws t face font-lock-comment-face) 99 100 (fontified t c-in-sws t face font-lock-comment-face) 100 101 (fontified t c-in-sws t face font-lock-comment-face) 101 102 (fontified t c-in-sws t face font-lock-comment-face) 102 103 (fontified t c-in-sws t face font-lock-comment-face) 103 104 (fontified t c-in-sws t face font-lock-comment-face) 104 105 (fontified t c-in-sws t face font-lock-comment-face) 105 106 (fontified t c-in-sws t face font-lock-comment-face)) . 907) (undo-tree-id529 . -106) (undo-tree-id530 . -96) (undo-tree-id531 . -106) (undo-tree-id532 . -106) (t 25865 46154 482187 29000)) nil (25865 46566 333871 721000) 0 nil])
([nil nil ((875 . 883)) nil (25865 46566 333867 224000) 0 nil])
([nil nil ((883 . 884)) nil (25865 46566 333866 224000) 0 nil])
([nil nil ((884 . 885)) nil (25865 46566 333865 371000) 0 nil])
([nil nil ((885 . 889)) nil (25865 46566 333864 516000) 0 nil])
([nil nil ((889 . 890)) nil (25865 46566 333863 822000) 0 nil])
([nil nil ((890 . 891)) nil (25865 46566 333863 42000) 0 nil])
([nil nil ((891 . 898)) nil (25865 46566 333862 126000) 0 nil])
([nil nil ((875 . 876)) nil (25865 46566 333860 746000) 0 nil])
([nil nil ((#("  " 0 1 (c-is-sws t c-in-sws t fontified t) 1 2 (c-is-sws t c-in-sws t fontified t)) . 929) (undo-tree-id527 . -2) (undo-tree-id528 . -2) 876) nil (25865 46566 333856 554000) 0 nil])
([nil nil ((902 . 903) (t 25865 46566 345254 449000)) nil (25865 46707 517780 305000) 0 nil])
([nil nil ((903 . 905)) nil (25865 46707 517774 336000) 0 nil])
([nil nil ((905 . 926) (t 25865 46707 528931 581000)) nil (25865 47405 286438 92000) 0 nil])
([nil nil ((926 . 930)) nil (25865 47405 286436 955000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -929) (undo-tree-id537 . -1) 930) nil (25865 47405 286434 268000) 0 nil])
([nil nil ((929 . 946)) nil (25865 47405 286429 659000) 0 nil])
([nil nil ((946 . 952)) nil (25865 47405 286427 764000) 0 nil])
([nil nil ((946 . 947)) nil (25865 47405 286426 154000) 0 nil])
([nil nil ((947 . 948)) nil (25865 47405 286423 859000) 0 nil])
([nil nil ((954 . 975)) nil (25865 47405 286422 398000) 0 nil])
([nil nil ((975 . 976)) nil (25865 47405 286421 860000) 0 nil])
([nil nil ((976 . 983)) nil (25865 47405 286421 124000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -982) (undo-tree-id535 . -1) (undo-tree-id536 . -1) 983) nil (25865 47405 286420 211000) 0 nil])
([nil nil ((982 . 991)) nil (25865 47405 286417 670000) 0 nil])
([nil nil ((991 . 992)) nil (25865 47405 286416 998000) 0 nil])
([nil nil ((992 . 1001)) nil (25865 47405 286416 327000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1000) (undo-tree-id533 . -1) (undo-tree-id534 . -1) 1001) nil (25865 47405 286414 784000) 0 nil])
([nil nil ((1000 . 1020)) nil (25865 47405 286406 478000) 0 nil])
([nil nil ((1020 . 1021)) nil (25865 47405 286401 472000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . -1085) (undo-tree-id684 . -1) (#("i" 0 1 (fontified t)) . -1086) (undo-tree-id685 . -1) (#("n" 0 1 (fontified t)) . -1087) (undo-tree-id686 . -1) (#("p" 0 1 (fontified t)) . -1088) (undo-tree-id687 . -1) (#("u" 0 1 (fontified t)) . -1089) (undo-tree-id688 . -1) (#("t" 0 1 (fontified t)) . -1090) (undo-tree-id689 . -1) 1091 (t 25865 47405 295327 272000)) nil (25865 48249 797552 959000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t face font-lock-negation-char-face)) . -1079) (undo-tree-id663 . -1) (#("f" 0 1 (fontified t)) . -1080) (undo-tree-id664 . -1) (#("e" 0 1 (fontified t)) . -1081) (undo-tree-id665 . -1) (#("o" 0 1 (fontified t)) . -1082) (undo-tree-id666 . -1) (#("f" 0 1 (fontified t)) . -1083) (undo-tree-id667 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -1084) (undo-tree-id668 . -1) (#(")" 0 1 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-3-face))) . -1085) (undo-tree-id669 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -1086) (undo-tree-id670 . -1) (#("
" 0 1 (fontified t)) . -1087) (undo-tree-id671 . -1) (#(" " 0 1 (fontified t)) . -1088) (undo-tree-id672 . -1) (#(" " 0 1 (fontified t)) . -1089) (undo-tree-id673 . -1) (#(" " 0 1 (fontified t)) . -1090) (undo-tree-id674 . -1) (#(" " 0 1 (fontified t)) . -1091) (undo-tree-id675 . -1) (#("{" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -1092) (undo-tree-id676 . -1) (#("
" 0 1 (fontified t)) . -1093) (undo-tree-id677 . -1) (#("
" 0 1 (fontified t)) . -1094) (undo-tree-id678 . -1) (#(" " 0 1 (fontified t)) . -1095) (undo-tree-id679 . -1) (#(" " 0 1 (fontified t)) . -1096) (undo-tree-id680 . -1) (#(" " 0 1 (fontified t)) . -1097) (undo-tree-id681 . -1) (#(" " 0 1 (fontified t)) . -1098) (undo-tree-id682 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -1099) (undo-tree-id683 . -1) 1100) nil (25865 48249 797526 495000) 0 nil])
([nil nil ((#("w" 0 1 (c-is-sws t fontified t)) . -1072) (undo-tree-id656 . -1) (#("h" 0 1 (fontified t)) . -1073) (undo-tree-id657 . -1) (#("i" 0 1 (fontified t)) . -1074) (undo-tree-id658 . -1) (#("l" 0 1 (fontified t)) . -1075) (undo-tree-id659 . -1) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -1076) (undo-tree-id660 . -1) (#(" " 0 1 (fontified t)) . -1077) (undo-tree-id661 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -1078) (undo-tree-id662 . -1) 1079) nil (25865 48249 797473 326000) 0 nil])
([nil nil ((864 . 867)) nil (25865 48249 797455 407000) 0 nil])
([nil nil ((866 . 867)) nil (25865 48249 797453 269000) 0 nil])
([nil nil ((867 . 877)) nil (25865 48249 797451 109000) 0 nil])
([nil nil ((877 . 882)) nil (25865 48249 797448 971000) 0 nil])
([nil nil ((882 . 884)) nil (25865 48249 797446 841000) 0 nil])
([nil nil ((883 . 894)) nil (25865 48249 797444 693000) 0 nil])
([nil nil ((894 . 895)) nil (25865 48249 797442 537000) 0 nil])
([nil nil ((895 . 900)) nil (25865 48249 797440 21000) 0 nil])
([nil nil ((#("int file_exists(const char *fname)" 0 1 (fontified t ws-butler-chg chg c-is-sws t face font-lock-type-face) 1 2 (fontified t ws-butler-chg chg face font-lock-type-face) 2 3 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg face font-lock-function-name-face) 5 6 (fontified t ws-butler-chg chg face font-lock-function-name-face) 6 7 (fontified t ws-butler-chg chg face font-lock-function-name-face) 7 8 (fontified t ws-butler-chg chg face font-lock-function-name-face) 8 9 (fontified t ws-butler-chg chg face font-lock-function-name-face) 9 10 (fontified t ws-butler-chg chg face font-lock-function-name-face) 10 11 (fontified t ws-butler-chg chg face font-lock-function-name-face) 11 12 (fontified t ws-butler-chg chg face font-lock-function-name-face) 12 13 (fontified t ws-butler-chg chg face font-lock-function-name-face) 13 14 (fontified t ws-butler-chg chg face font-lock-function-name-face) 14 15 (fontified t ws-butler-chg chg face font-lock-function-name-face) 15 16 (fontified t ws-butler-chg chg c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 16 17 (fontified t ws-butler-chg chg face font-lock-keyword-face) 17 18 (fontified t ws-butler-chg chg face font-lock-keyword-face) 18 19 (fontified t ws-butler-chg chg face font-lock-keyword-face) 19 20 (fontified t ws-butler-chg chg face font-lock-keyword-face) 20 21 (fontified t ws-butler-chg chg face font-lock-keyword-face) 21 22 (fontified t ws-butler-chg chg) 22 23 (fontified t ws-butler-chg chg face font-lock-type-face) 23 24 (fontified t ws-butler-chg chg face font-lock-type-face) 24 25 (fontified t ws-butler-chg chg face font-lock-type-face) 25 26 (fontified t ws-butler-chg chg face font-lock-type-face) 26 27 (fontified t ws-butler-chg chg) 27 28 (fontified t ws-butler-chg chg) 28 29 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 29 30 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 30 31 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 31 32 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 32 33 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 33 34 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-1-face))) . 867) (undo-tree-id653 . -34) (undo-tree-id654 . -30) (undo-tree-id655 . -34)) nil (25865 48249 797437 113000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t category c->-as-paren-syntax c-in-sws t face (rainbow-delimiters-depth-1-face font-lock-string-face))) . -863) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -864) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . -865) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . -866) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) 867) nil (25865 48249 797424 402000) 0 nil])
([nil nil ((863 . 864)) nil (25865 48249 797396 976000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t c-in-sws t)) . 864)) nil (25865 48249 797395 467000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face c-in-sws t)) . -1069) (undo-tree-id637 . -1) (#(" " 0 1 (c-is-sws t c-in-sws t fontified t)) . -1070) (undo-tree-id638 . -1) (#(" " 0 1 (c-in-sws t c-is-sws t fontified t)) . -1071) (undo-tree-id639 . -1) 1072) nil (25865 48249 797392 276000) 0 nil])
([nil nil ((1069 . 1072)) nil (25865 48249 797385 525000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t ws-butler-chg chg c-is-sws t) 1 2 (fontified t ws-butler-chg chg c-in-sws t)) . 1070) (undo-tree-id636 . -2) 1072) nil (25865 48249 797384 66000) 0 nil])
([nil nil ((1069 . 1072)) nil (25865 48249 797381 62000) 0 nil])
([nil nil ((1072 . 1074)) nil (25865 48249 797379 478000) 0 nil])
([nil nil ((1074 . 1075)) nil (25865 48249 797378 232000) 0 nil])
([nil nil ((1075 . 1077)) nil (25865 48249 797376 865000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -1074) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (#("/" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1075) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (#("/" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1076) (undo-tree-id635 . -1) 1077) nil (25865 48249 797374 341000) 0 nil])
([nil nil ((1074 . 1075)) nil (25865 48249 797365 953000) 0 nil])
([nil nil ((1075 . 1077)) nil (25865 48249 797364 590000) 0 nil])
([nil nil ((1069 . 1072)) nil (25865 48249 797363 439000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t ws-butler-chg chg c-is-sws t) 1 2 (fontified t ws-butler-chg chg c-in-sws t)) . 1070) (undo-tree-id630 . -2) 1072) nil (25865 48249 797361 942000) 0 nil])
([nil nil ((1078 . 1099)) nil (25865 48249 797359 105000) 0 nil])
([nil nil ((1099 . 1101)) nil (25865 48249 797357 828000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1099) (undo-tree-id628 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face)) . -1100) (undo-tree-id629 . -1) 1101) nil (25865 48249 797355 786000) 0 nil])
([nil nil ((1099 . 1104)) nil (25865 48249 797350 488000) 0 nil])
([nil nil ((1104 . 1107)) nil (25865 48249 797348 908000) 0 nil])
([nil nil ((#("  " 0 1 (ws-butler-chg chg fontified t c-is-sws t) 1 2 (ws-butler-chg chg fontified t c-in-sws t)) . 1105) (undo-tree-id626 . -2) (undo-tree-id627 . -2) 1107) nil (25865 48249 797345 947000) 0 nil])
([nil nil ((1069 . 1072)) nil (25865 48249 797342 217000) 0 nil])
([nil nil ((1070 . 1073) (#("  " 0 1 (fontified t ws-butler-chg chg c-is-sws t) 1 2 (fontified t ws-butler-chg chg c-in-sws t)) . 1070) (undo-tree-id625 . -2) 1072) nil (25865 48249 797340 734000) 0 nil])
([nil nil ((1073 . 1075)) nil (25865 48249 797337 354000) 0 nil])
([nil nil ((1075 . 1076)) nil (25865 48249 797335 960000) 0 nil])
([nil nil ((1076 . 1078)) nil (25865 48249 797334 620000) 0 nil])
([nil nil ((1078 . 1094)) nil (25865 48249 797333 446000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face)) . 1104)) nil (25865 48249 797332 115000) 0 nil])
([nil nil ((1104 . 1105)) nil (25865 48249 797330 746000) 0 nil])
([nil nil ((1094 . 1097)) nil (25865 48249 797329 516000) 0 nil])
([nil nil ((1097 . 1100)) nil (25865 48249 797328 35000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -1099) (undo-tree-id624 . -1) 1100) nil (25865 48249 797326 672000) 0 nil])
([nil nil ((1099 . 1101)) nil (25865 48249 797323 767000) 0 nil])
([nil nil ((1101 . 1102)) nil (25865 48249 797322 533000) 0 nil])
([nil nil ((1102 . 1109)) nil (25865 48249 797321 160000) 0 nil])
([nil nil ((1109 . 1110)) nil (25865 48249 797320 20000) 0 nil])
([nil nil ((1097 . 1101)) nil (25865 48249 797318 699000) 0 nil])
([nil nil ((1114 . 1115)) nil (25865 48249 797317 618000) 0 nil])
([nil nil ((1115 . 1117)) nil (25865 48249 797316 402000) 0 nil])
([nil nil ((1117 . 1138)) nil (25865 48249 797315 110000) 0 nil])
([nil nil ((1138 . 1143)) nil (25865 48249 797313 918000) 0 nil])
([nil nil ((1143 . 1144)) nil (25865 48249 797300 143000) 0 nil])
([nil nil ((1144 . 1153)) nil (25865 48249 797298 888000) 0 nil])
([nil nil ((1153 . 1174)) nil (25865 48249 797297 716000) 0 nil])
([nil nil ((1174 . 1195)) nil (25865 48249 797296 475000) 0 nil])
([nil nil ((1195 . 1203)) nil (25865 48249 797295 351000) 0 nil])
([nil nil ((1203 . 1204)) nil (25865 48249 797294 65000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -1203) (undo-tree-id623 . -1) 1204) nil (25865 48249 797292 548000) 0 nil])
([nil nil ((1203 . 1204)) nil (25865 48249 797289 926000) 0 nil])
([nil nil ((1204 . 1207)) nil (25865 48249 797288 674000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t) 1 2 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t)) . -1205) (undo-tree-id622 . -2) 1207) nil (25865 48249 797287 316000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -1204) (undo-tree-id621 . -1) 1205) nil (25865 48249 797284 459000) 0 nil])
([nil nil ((#("variable." 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 5 6 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 6 7 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 7 8 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 8 9 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1195) (undo-tree-id618 . -2) (undo-tree-id619 . -8) (undo-tree-id620 . -9) 1204) nil (25865 48249 797281 713000) 0 nil])
([nil nil ((#("argc " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1190) (undo-tree-id615 . -5) (undo-tree-id616 . -5) (undo-tree-id617 . -5) 1195) nil (25865 48249 797274 575000) 0 nil])
([nil nil ((#("actual " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 5 6 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 6 7 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1183) (undo-tree-id612 . -7) (undo-tree-id613 . -7) (undo-tree-id614 . -7) 1190) nil (25865 48249 797264 876000) 0 nil])
([nil nil ((#("the " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1179) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (undo-tree-id611 . -4) 1183) nil (25865 48249 797254 51000) 0 nil])
([nil nil ((#("increment " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 5 6 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 6 7 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 7 8 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 8 9 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 9 10 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1169) (undo-tree-id606 . -10) (undo-tree-id607 . -10) (undo-tree-id608 . -10) 1179) nil (25865 48249 797243 676000) 0 nil])
([nil nil ((#("to " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1166) (undo-tree-id603 . -3) (undo-tree-id604 . -3) (undo-tree-id605 . -3) 1169) nil (25865 48249 797215 725000) 0 nil])
([nil nil ((#("have " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1161) (undo-tree-id600 . -5) (undo-tree-id601 . -5) (undo-tree-id602 . -5) 1166) nil (25865 48249 797204 453000) 0 nil])
([nil nil ((#("t " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1159) (undo-tree-id597 . -2) (undo-tree-id598 . -2) (undo-tree-id599 . -2) 1161) nil (25865 48249 797193 779000) 0 nil])
([nil nil ((#("don'" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1155) (undo-tree-id594 . -4) (undo-tree-id595 . -4) (undo-tree-id596 . -4) 1159) nil (25865 48249 797184 353000) 0 nil])
([nil nil ((#("I " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1153) (undo-tree-id591 . -2) (undo-tree-id592 . -2) (undo-tree-id593 . -2) 1155) nil (25865 48249 797174 239000) 0 nil])
([nil nil ((#("that " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1148) (undo-tree-id588 . -5) (undo-tree-id589 . -5) (undo-tree-id590 . -5) 1153) nil (25865 48249 797162 759000) 0 nil])
([nil nil ((#("so " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1145) (undo-tree-id585 . -3) (undo-tree-id586 . -3) (undo-tree-id587 . -3) 1148) nil (25865 48249 797153 473000) 0 nil])
([nil nil ((#("purposes, " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 5 6 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 6 7 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 7 8 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 8 9 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 9 10 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1135) (undo-tree-id582 . -10) (undo-tree-id583 . -10) (undo-tree-id584 . -10) 1145) nil (25865 48249 797146 509000) 0 nil])
([nil nil ((#("loop " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1130) (undo-tree-id579 . -5) (undo-tree-id580 . -5) (undo-tree-id581 . -5) 1135) nil (25865 48249 797136 517000) 0 nil])
([nil nil ((#("for " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1126) (undo-tree-id576 . -4) (undo-tree-id577 . -4) (undo-tree-id578 . -4) 1130) nil (25865 48249 797127 200000) 0 nil])
([nil nil ((#("is " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1123) (undo-tree-id573 . -3) (undo-tree-id574 . -3) (undo-tree-id575 . -3) 1126) nil (25865 48249 797118 191000) 0 nil])
([nil nil ((#("This " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1118) (undo-tree-id570 . -5) (undo-tree-id571 . -5) (undo-tree-id572 . -5) 1123) nil (25865 48249 797107 451000) 0 nil])
([nil nil ((#("argc; // " 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t) 6 7 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 7 8 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-delimiter-face) 8 9 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-delimiter-face)) . -1109) (undo-tree-id565 . -9) (undo-tree-id566 . -9) (undo-tree-id567 . -9) (undo-tree-id568 . -5) (undo-tree-id569 . -5) 1118) nil (25865 48249 797096 250000) 0 nil])
([nil nil ((#("argc* = " 0 1 (fontified t ws-butler-chg chg c-is-sws t face font-lock-variable-name-face) 1 2 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 2 3 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 3 4 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg)) . -1101) (undo-tree-id560 . -8) (undo-tree-id561 . -8) (undo-tree-id562 . -8) (undo-tree-id563 . -8) (undo-tree-id564 . -8) 1109) nil (25865 48249 797080 797000) 0 nil])
([nil nil ((#("int " 0 1 (fontified t ws-butler-chg chg c-is-sws t face font-lock-type-face) 1 2 (fontified t ws-butler-chg chg face font-lock-type-face) 2 3 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face) 3 4 (fontified t ws-butler-chg chg)) . -1097) (undo-tree-id555 . -4) (undo-tree-id556 . -4) (undo-tree-id557 . -4) (undo-tree-id558 . -4) (undo-tree-id559 . -4) 1101) nil (25865 48249 797076 299000) 0 nil])
([nil nil ((1097 . 1100)) nil (25865 48249 797071 972000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1099) (undo-tree-id554 . -1) 1100) nil (25865 48249 797071 59000) 0 nil])
([nil nil ((1099 . 1100)) nil (25865 48249 797069 426000) 0 nil])
([nil nil ((1100 . 1111)) nil (25865 48249 797068 737000) 0 nil])
([nil nil ((1111 . 1112)) nil (25865 48249 797067 740000) 0 nil])
([nil nil ((1112 . 1113)) nil (25865 48249 797066 952000) 0 nil])
([nil nil ((1113 . 1114)) nil (25865 48249 797066 214000) 0 nil])
([nil nil ((1114 . 1119)) nil (25865 48249 797065 371000) 0 nil])
([nil nil ((1119 . 1124)) nil (25865 48249 797064 656000) 0 nil])
([nil nil ((1119 . 1125) (#("print" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -1119) (undo-tree-id552 . -5) (undo-tree-id553 . -5) 1124) nil (25865 48249 797063 588000) 0 nil])
([nil nil ((1125 . 1126)) nil (25865 48249 797061 138000) 0 nil])
([nil nil ((1142 . 1143) (nil syntax-table nil 1142 . 1143) (nil syntax-table (1) 1126 . 1127) (1141 . 1142) (nil syntax-table nil 1141 . 1142) (nil syntax-table (1) 1126 . 1127) (1140 . 1141) (nil syntax-table nil 1140 . 1141) (nil syntax-table (1) 1126 . 1127) (1139 . 1140) (nil syntax-table nil 1139 . 1140) (nil syntax-table (1) 1126 . 1127) (1138 . 1139) (nil syntax-table nil 1138 . 1139) (nil syntax-table (1) 1126 . 1127) (1137 . 1138) (nil syntax-table nil 1137 . 1138) (nil syntax-table (1) 1126 . 1127) (1136 . 1137) (nil syntax-table nil 1136 . 1137) (nil syntax-table (1) 1126 . 1127) (1135 . 1136) (nil syntax-table nil 1135 . 1136) (nil syntax-table (1) 1126 . 1127) (1134 . 1135) (nil syntax-table nil 1134 . 1135) (nil syntax-table (1) 1126 . 1127) (1133 . 1134) (nil syntax-table nil 1133 . 1134) (nil syntax-table (1) 1126 . 1127) (1132 . 1133) (nil syntax-table nil 1132 . 1133) (nil syntax-table (1) 1126 . 1127) (1131 . 1132) (nil syntax-table nil 1131 . 1132) (nil syntax-table (1) 1126 . 1127) (1130 . 1131) (nil syntax-table nil 1130 . 1131) (nil syntax-table (1) 1126 . 1127) (1129 . 1130) (nil syntax-table nil 1129 . 1130) (nil syntax-table (1) 1126 . 1127) (1128 . 1129) (nil syntax-table nil 1128 . 1129) (nil syntax-table (1) 1126 . 1127) (1127 . 1128) (nil syntax-table nil 1127 . 1128) (nil syntax-table (1) 1126 . 1127) (1126 . 1127)) nil (25865 48249 797058 584000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1142) (undo-tree-id551 . -1) (nil syntax-table nil 1143 . 1144) (nil syntax-table (1) 1126 . 1127)) nil (25865 48249 797050 262000) 0 nil])
([nil nil ((1143 . 1144) (nil syntax-table nil 1143 . 1144) (nil syntax-table (1) 1126 . 1127) (1142 . 1143) (nil syntax-table nil 1142 . 1143) (nil syntax-table (1) 1126 . 1127)) nil (25865 48249 797048 92000) 0 nil])
([nil nil ((1146 . 1147) (nil syntax-table nil 1146 . 1147) (nil syntax-table (1) 1126 . 1127) (1145 . 1146) (nil syntax-table nil 1145 . 1146) (nil syntax-table (1) 1126 . 1127) (1144 . 1145) (nil syntax-table nil 1144 . 1145) (nil syntax-table (1) 1126 . 1127)) nil (25865 48249 797045 923000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1140) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (nil syntax-table nil 1141 . 1142) (nil syntax-table (1) 1126 . 1127) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1141) (undo-tree-id545 . -1) (nil syntax-table nil 1142 . 1143) (nil syntax-table (1) 1126 . 1127) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1142) (undo-tree-id546 . -1) (nil syntax-table nil 1143 . 1144) (nil syntax-table (1) 1126 . 1127) (#("A" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1143) (undo-tree-id547 . -1) (nil syntax-table nil 1144 . 1145) (nil syntax-table (1) 1126 . 1127) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1144) (undo-tree-id548 . -1) (nil syntax-table nil 1145 . 1146) (nil syntax-table (1) 1126 . 1127) (#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1145) (undo-tree-id549 . -1) (nil syntax-table nil 1146 . 1147) (nil syntax-table (1) 1126 . 1127) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1146) (undo-tree-id550 . -1) (nil syntax-table nil 1147 . 1148) (nil syntax-table (1) 1126 . 1127)) nil (25865 48249 797042 54000) 0 nil])
([nil nil ((1150 . 1151) (nil syntax-table nil 1150 . 1151) (nil syntax-table (1) 1126 . 1127) (1149 . 1150) (nil syntax-table nil 1149 . 1150) (nil syntax-table (1) 1126 . 1127) (1148 . 1149) (nil syntax-table nil 1148 . 1149) (nil syntax-table (1) 1126 . 1127) (1147 . 1148) (nil syntax-table nil 1147 . 1148) (nil syntax-table (1) 1126 . 1127) (1146 . 1147) (nil syntax-table nil 1146 . 1147) (nil syntax-table (1) 1126 . 1127) (1145 . 1146) (nil syntax-table nil 1145 . 1146) (nil syntax-table (1) 1126 . 1127) (1144 . 1145) (nil syntax-table nil 1144 . 1145) (nil syntax-table (1) 1126 . 1127) (1143 . 1144) (nil syntax-table nil 1143 . 1144) (nil syntax-table (1) 1126 . 1127) (1142 . 1143) (nil syntax-table nil 1142 . 1143) (nil syntax-table (1) 1126 . 1127) (1141 . 1142) (nil syntax-table nil 1141 . 1142) (nil syntax-table (1) 1126 . 1127) (1140 . 1141) (nil syntax-table nil 1140 . 1141) (nil syntax-table (1) 1126 . 1127)) nil (25865 48249 797029 79000) 0 nil])
([nil nil ((1151 . 1152)) nil (25865 48249 797015 119000) 0 nil])
([nil nil ((1152 . 1153)) nil (25865 48249 797012 675000) 0 nil])
([nil nil ((1153 . 1158)) nil (25865 48249 797010 284000) 0 nil])
([nil nil ((1154 . 1156) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 1154) (undo-tree-id542 . -4) (1158 . 1159)) nil (25865 48249 797009 144000) 0 nil])
([nil nil ((1157 . 1160)) nil (25865 48249 797007 401000) 0 nil])
([nil nil ((1160 . 1164)) nil (25865 48249 797006 686000) 0 nil])
([nil nil ((1164 . 1165) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -1164) (1164 . 1166) (#("else" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 1164) (undo-tree-id540 . -3) (undo-tree-id541 . -4) (1160 . 1164) 1164) nil (25865 48249 797005 440000) 0 nil])
([nil nil ((1165 . 1168)) nil (25865 48249 797002 17000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1167) (undo-tree-id539 . -1) 1168) nil (25865 48249 797000 956000) 0 nil])
([nil nil ((1167 . 1168)) nil (25865 48249 796998 96000) 0 nil])
([nil nil ((1168 . 1175)) nil (25865 48249 796997 399000) 0 nil])
([nil nil ((1175 . 1178)) nil (25865 48249 796996 642000) 0 nil])
([nil nil ((1178 . 1179)) nil (25865 48249 796995 896000) 0 nil])
([nil nil ((1179 . 1180)) nil (25865 48249 796995 232000) 0 nil])
([nil nil ((1180 . 1181)) nil (25865 48249 796994 563000) 0 nil])
([nil nil ((1181 . 1186)) nil (25865 48249 796993 821000) 0 nil])
([nil nil ((1186 . 1192)) nil (25865 48249 796993 16000) 0 nil])
([nil nil ((1192 . 1193)) nil (25865 48249 796992 191000) 0 nil])
([nil nil ((1212 . 1213) (nil syntax-table nil 1212 . 1213) (nil syntax-table (1) 1193 . 1194) (1211 . 1212) (nil syntax-table nil 1211 . 1212) (nil syntax-table (1) 1193 . 1194) (1210 . 1211) (nil syntax-table nil 1210 . 1211) (nil syntax-table (1) 1193 . 1194) (1209 . 1210) (nil syntax-table nil 1209 . 1210) (nil syntax-table (1) 1193 . 1194) (1208 . 1209) (nil syntax-table nil 1208 . 1209) (nil syntax-table (1) 1193 . 1194) (1207 . 1208) (nil syntax-table nil 1207 . 1208) (nil syntax-table (1) 1193 . 1194) (1206 . 1207) (nil syntax-table nil 1206 . 1207) (nil syntax-table (1) 1193 . 1194) (1205 . 1206) (nil syntax-table nil 1205 . 1206) (nil syntax-table (1) 1193 . 1194) (1204 . 1205) (nil syntax-table nil 1204 . 1205) (nil syntax-table (1) 1193 . 1194) (1203 . 1204) (nil syntax-table nil 1203 . 1204) (nil syntax-table (1) 1193 . 1194) (1202 . 1203) (nil syntax-table nil 1202 . 1203) (nil syntax-table (1) 1193 . 1194) (1201 . 1202) (nil syntax-table nil 1201 . 1202) (nil syntax-table (1) 1193 . 1194) (1200 . 1201) (nil syntax-table nil 1200 . 1201) (nil syntax-table (1) 1193 . 1194) (1199 . 1200) (nil syntax-table nil 1199 . 1200) (nil syntax-table (1) 1193 . 1194) (1198 . 1199) (nil syntax-table nil 1198 . 1199) (nil syntax-table (1) 1193 . 1194) (1197 . 1198) (nil syntax-table nil 1197 . 1198) (nil syntax-table (1) 1193 . 1194) (1196 . 1197) (nil syntax-table nil 1196 . 1197) (nil syntax-table (1) 1193 . 1194) (1195 . 1196) (nil syntax-table nil 1195 . 1196) (nil syntax-table (1) 1193 . 1194) (1194 . 1195) (nil syntax-table nil 1194 . 1195) (nil syntax-table (1) 1193 . 1194) (1193 . 1194)) nil (25865 48249 796989 26000) 0 nil])
([nil nil ((1213 . 1214)) nil (25865 48249 796965 165000) 0 nil])
([nil nil ((1214 . 1215)) nil (25865 48249 796963 822000) 0 nil])
([nil nil ((1215 . 1220)) nil (25865 48249 796960 848000) 0 nil])
([nil nil ((1216 . 1218) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 1216) (undo-tree-id538 . -4) (1220 . 1221)) nil (25865 48249 796955 131000) 0 nil])
([nil nil ((839 . 851) (t 25865 48249 817402 856000)) nil (25865 48270 21520 978000) 0 nil])
([nil nil ((851 . 872)) nil (25865 48270 21519 911000) 0 nil])
([nil nil ((872 . 877)) nil (25865 48270 21519 131000) 0 nil])
([nil nil ((877 . 878)) nil (25865 48270 21518 49000) 0 nil])
([nil nil ((878 . 899)) nil (25865 48270 21517 131000) 0 nil])
([nil nil ((899 . 904)) nil (25865 48270 21515 951000) 0 nil])
([nil nil ((904 . 905)) nil (25865 48270 21514 978000) 0 nil])
([nil nil ((905 . 906)) nil (25865 48270 21513 426000) 0 nil])
([nil nil ((906 . 919)) nil (25865 48270 21508 380000) 0 nil])
([nil nil ((1237 . 1240) (t 25865 48270 37356 858000)) nil (25865 48443 264302 610000) 0 nil])
([nil nil ((1240 . 1244)) nil (25865 48443 264301 649000) 0 nil])
([nil nil ((1244 . 1245) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -1244) (1244 . 1246) (#("else" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 1244) (undo-tree-id729 . -4) (undo-tree-id730 . -4) (1240 . 1244) 1244) nil (25865 48443 264300 353000) 0 nil])
([nil nil ((1245 . 1248)) nil (25865 48443 264297 443000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1247) (undo-tree-id728 . -1) 1248) nil (25865 48443 264296 567000) 0 nil])
([nil nil ((1247 . 1248)) nil (25865 48443 264294 956000) 0 nil])
([nil nil ((1248 . 1258)) nil (25865 48443 264293 939000) 0 nil])
([nil nil ((1258 . 1259)) nil (25865 48443 264293 345000) 0 nil])
([nil nil ((1259 . 1260)) nil (25865 48443 264292 631000) 0 nil])
([nil nil ((1260 . 1261)) nil (25865 48443 264291 973000) 0 nil])
([nil nil ((1261 . 1262)) nil (25865 48443 264291 232000) 0 nil])
([nil nil ((1262 . 1267)) nil (25865 48443 264290 599000) 0 nil])
([nil nil ((1267 . 1274)) nil (25865 48443 264289 919000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1273) (undo-tree-id726 . -1) (undo-tree-id727 . -1) 1274) nil (25865 48443 264288 846000) 0 nil])
([nil nil ((1273 . 1274)) nil (25865 48443 264286 956000) 0 nil])
([nil nil ((1274 . 1277)) nil (25865 48443 264286 223000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t ws-butler-chg chg)) . -1274) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -1275) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -1276) (undo-tree-id724 . -1) (undo-tree-id725 . -1) 1277) nil (25865 48443 264284 704000) 0 nil])
([nil nil ((1274 . 1275)) nil (25865 48443 264278 823000) 0 nil])
([nil nil ((1279 . 1280) (nil syntax-table nil 1279 . 1280) (nil syntax-table (1) 1274 . 1275) (1278 . 1279) (nil syntax-table nil 1278 . 1279) (nil syntax-table (1) 1274 . 1275) (1277 . 1278) (nil syntax-table nil 1277 . 1278) (nil syntax-table (1) 1274 . 1275) (1276 . 1277) (nil syntax-table nil 1276 . 1277) (nil syntax-table (1) 1274 . 1275) (1275 . 1276) (nil syntax-table nil 1275 . 1276) (nil syntax-table (1) 1274 . 1275)) nil (25865 48443 264277 711000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1275) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (nil syntax-table nil 1276 . 1277) (nil syntax-table (1) 1274 . 1275) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1276) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (nil syntax-table nil 1277 . 1278) (nil syntax-table (1) 1274 . 1275) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1277) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (nil syntax-table nil 1278 . 1279) (nil syntax-table (1) 1274 . 1275) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1278) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (nil syntax-table nil 1279 . 1280) (nil syntax-table (1) 1274 . 1275) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1279) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (nil syntax-table nil 1280 . 1281) (nil syntax-table (1) 1274 . 1275)) nil (25865 48443 264273 179000) 0 nil])
([nil nil ((1283 . 1284) (nil syntax-table nil 1283 . 1284) (nil syntax-table (1) 1274 . 1275) (1282 . 1283) (nil syntax-table nil 1282 . 1283) (nil syntax-table (1) 1274 . 1275) (1281 . 1282) (nil syntax-table nil 1281 . 1282) (nil syntax-table (1) 1274 . 1275) (1280 . 1281) (nil syntax-table nil 1280 . 1281) (nil syntax-table (1) 1274 . 1275) (1279 . 1280) (nil syntax-table nil 1279 . 1280) (nil syntax-table (1) 1274 . 1275) (1278 . 1279) (nil syntax-table nil 1278 . 1279) (nil syntax-table (1) 1274 . 1275) (1277 . 1278) (nil syntax-table nil 1277 . 1278) (nil syntax-table (1) 1274 . 1275) (1276 . 1277) (nil syntax-table nil 1276 . 1277) (nil syntax-table (1) 1274 . 1275) (1275 . 1276) (nil syntax-table nil 1275 . 1276) (nil syntax-table (1) 1274 . 1275)) nil (25865 48443 264262 364000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1275) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (nil syntax-table nil 1276 . 1277) (nil syntax-table (1) 1274 . 1275) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1276) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (nil syntax-table nil 1277 . 1278) (nil syntax-table (1) 1274 . 1275) (#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1277) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (nil syntax-table nil 1278 . 1279) (nil syntax-table (1) 1274 . 1275) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1278) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (nil syntax-table nil 1279 . 1280) (nil syntax-table (1) 1274 . 1275) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1279) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (nil syntax-table nil 1280 . 1281) (nil syntax-table (1) 1274 . 1275) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1280) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (nil syntax-table nil 1281 . 1282) (nil syntax-table (1) 1274 . 1275) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1281) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (nil syntax-table nil 1282 . 1283) (nil syntax-table (1) 1274 . 1275) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1282) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (nil syntax-table nil 1283 . 1284) (nil syntax-table (1) 1274 . 1275) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1283) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (nil syntax-table nil 1284 . 1285) (nil syntax-table (1) 1274 . 1275)) nil (25865 48443 264255 518000) 0 nil])
([nil nil ((1285 . 1286) (nil syntax-table nil 1285 . 1286) (nil syntax-table (1) 1274 . 1275) (1284 . 1285) (nil syntax-table nil 1284 . 1285) (nil syntax-table (1) 1274 . 1275) (1283 . 1284) (nil syntax-table nil 1283 . 1284) (nil syntax-table (1) 1274 . 1275) (1282 . 1283) (nil syntax-table nil 1282 . 1283) (nil syntax-table (1) 1274 . 1275) (1281 . 1282) (nil syntax-table nil 1281 . 1282) (nil syntax-table (1) 1274 . 1275) (1280 . 1281) (nil syntax-table nil 1280 . 1281) (nil syntax-table (1) 1274 . 1275) (1279 . 1280) (nil syntax-table nil 1279 . 1280) (nil syntax-table (1) 1274 . 1275) (1278 . 1279) (nil syntax-table nil 1278 . 1279) (nil syntax-table (1) 1274 . 1275) (1277 . 1278) (nil syntax-table nil 1277 . 1278) (nil syntax-table (1) 1274 . 1275) (1276 . 1277) (nil syntax-table nil 1276 . 1277) (nil syntax-table (1) 1274 . 1275) (1275 . 1276) (nil syntax-table nil 1275 . 1276) (nil syntax-table (1) 1274 . 1275)) nil (25865 48443 264236 688000) 0 nil])
([nil nil ((1302 . 1303) (nil syntax-table nil 1302 . 1303) (nil syntax-table (1) 1274 . 1275) (1301 . 1302) (nil syntax-table nil 1301 . 1302) (nil syntax-table (1) 1274 . 1275) (1300 . 1301) (nil syntax-table nil 1300 . 1301) (nil syntax-table (1) 1274 . 1275) (1299 . 1300) (nil syntax-table nil 1299 . 1300) (nil syntax-table (1) 1274 . 1275) (1298 . 1299) (nil syntax-table nil 1298 . 1299) (nil syntax-table (1) 1274 . 1275) (1297 . 1298) (nil syntax-table nil 1297 . 1298) (nil syntax-table (1) 1274 . 1275) (1296 . 1297) (nil syntax-table nil 1296 . 1297) (nil syntax-table (1) 1274 . 1275) (1295 . 1296) (nil syntax-table nil 1295 . 1296) (nil syntax-table (1) 1274 . 1275) (1294 . 1295) (nil syntax-table nil 1294 . 1295) (nil syntax-table (1) 1274 . 1275) (1293 . 1294) (nil syntax-table nil 1293 . 1294) (nil syntax-table (1) 1274 . 1275) (1292 . 1293) (nil syntax-table nil 1292 . 1293) (nil syntax-table (1) 1274 . 1275) (1291 . 1292) (nil syntax-table nil 1291 . 1292) (nil syntax-table (1) 1274 . 1275) (1290 . 1291) (nil syntax-table nil 1290 . 1291) (nil syntax-table (1) 1274 . 1275) (1289 . 1290) (nil syntax-table nil 1289 . 1290) (nil syntax-table (1) 1274 . 1275) (1288 . 1289) (nil syntax-table nil 1288 . 1289) (nil syntax-table (1) 1274 . 1275) (1287 . 1288) (nil syntax-table nil 1287 . 1288) (nil syntax-table (1) 1274 . 1275) (1286 . 1287) (nil syntax-table nil 1286 . 1287) (nil syntax-table (1) 1274 . 1275)) nil (25865 48443 264229 449000) 0 nil])
([nil nil ((1303 . 1304)) nil (25865 48443 264220 466000) 0 nil])
([nil nil ((1304 . 1305)) nil (25865 48443 264219 690000) 0 nil])
([nil nil ((1305 . 1310)) nil (25865 48443 264218 592000) 0 nil])
([nil nil ((1306 . 1308) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 1306) (undo-tree-id690 . -4) (1310 . 1311)) nil (25865 48443 264214 956000) 0 nil])
([nil nil ((#("filename" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face) 5 6 (fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face) 7 8 (fontified t face font-lock-string-face)) . -1222) (undo-tree-id732 . -8) 1230 (t 25865 48443 280962 808000)) nil (25865 48476 160672 918000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -1221) (undo-tree-id731 . -1) 1222) nil (25865 48476 160666 506000) 0 nil])
([nil nil ((1221 . 1231)) nil (25865 48476 160654 44000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1317) (undo-tree-id733 . -1) (#("i" 0 1 (fontified t)) . -1318) (undo-tree-id734 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -1319) (undo-tree-id735 . -1) 1320 (t 25865 48476 172888 7000)) nil (25865 48500 6880 946000) 0 nil])
([nil nil ((#("( argc" 0 1 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-2-face)) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 1317)) nil (25865 48500 6868 283000) 0 nil])
([nil nil ((#(" > 1" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 1317)) nil (25865 48500 6866 650000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg delete face (rainbow-delimiters-mismatched-face))) . 1317) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 1317)) nil (25865 48500 6861 530000) 0 nil])
([nil nil ((1232 . 1233) (nil syntax-table nil 1235 . 1236) (nil syntax-table (1) 1206 . 1207) (1231 . 1232) (#("\\" 0 1 (fontified t ws-butler-chg chg)) . -1232) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -1233) (undo-tree-id739 . -1) 1234 (1232 . 1234) (t 25865 48500 24833 765000)) nil (25865 48543 891194 670000) 0 nil])
([nil nil ((1306 . 1307) (nil syntax-table nil 1309 . 1310) (nil syntax-table (1) 1277 . 1278) (1305 . 1306)) nil (25865 48543 891181 518000) 0 nil])
([nil nil ((1355 . 1356) (nil syntax-table nil 1358 . 1359) (nil syntax-table (1) 1335 . 1336) (1354 . 1355)) nil (25865 48543 891176 79000) 0 nil])
([nil nil ((#("  if( argc == 0 ) {
    printf(\"Please enter an argument\\n\");
  }" 0 1 (c-is-sws t c-in-sws t fontified t) 1 2 (c-in-sws t c-is-sws t fontified t) 2 3 (c-is-sws t fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face (rainbow-delimiters-depth-2-face)) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-2-face)) 17 18 (fontified t) 18 19 (fontified t face (rainbow-delimiters-depth-2-face)) 19 20 (fontified t) 20 24 (fontified t) 24 30 (fontified t) 30 31 (fontified t face (rainbow-delimiters-depth-3-face)) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t face font-lock-string-face) 39 40 (fontified t face font-lock-string-face) 40 41 (fontified t face font-lock-string-face) 41 42 (fontified t face font-lock-string-face) 42 43 (fontified t face font-lock-string-face) 43 44 (fontified t face font-lock-string-face) 44 45 (fontified t face font-lock-string-face) 45 46 (fontified t face font-lock-string-face) 46 47 (fontified t face font-lock-string-face) 47 48 (fontified t face font-lock-string-face) 48 49 (fontified t face font-lock-string-face) 49 50 (fontified t face font-lock-string-face) 50 51 (fontified t face font-lock-string-face) 51 52 (fontified t face font-lock-string-face) 52 53 (fontified t face font-lock-string-face) 53 54 (fontified t face font-lock-string-face) 54 55 (fontified t face font-lock-string-face) 55 56 (fontified t face font-lock-string-face) 56 57 (fontified t face font-lock-string-face) 57 58 (fontified t face font-lock-string-face) 58 59 (fontified t face font-lock-string-face) 59 60 (fontified t face (rainbow-delimiters-depth-3-face)) 60 61 (fontified t) 61 62 (fontified t) 62 64 (fontified t) 64 65 (fontified t face (rainbow-delimiters-depth-2-face))) . 1175) (undo-tree-id809 . -65) (undo-tree-id810 . 7) (undo-tree-id811 . -2) (undo-tree-id812 . -65) (undo-tree-id813 . -65) (undo-tree-id814 . -65) (t 25865 48543 908733 973000)) nil (25865 48659 315668 102000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face c-in-sws t)) . -1174) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) 1175) nil (25865 48659 315662 997000) 0 nil])
([nil nil ((#("e" 0 1 (c-is-sws t fontified t)) . -1177) (undo-tree-id799 . -1) (#("l" 0 1 (fontified t)) . -1178) (undo-tree-id800 . -1) (#("s" 0 1 (fontified t)) . -1179) (undo-tree-id801 . -1) (#("e" 0 1 (fontified t)) . -1180) (undo-tree-id802 . -1) (#(" " 0 1 (fontified t)) . -1181) (undo-tree-id803 . -1) 1182) nil (25865 48659 315657 893000) 0 nil])
([nil nil ((1243 . 1246)) nil (25865 48659 315652 95000) 0 nil])
([nil nil ((1246 . 1250)) nil (25865 48659 315651 397000) 0 nil])
([nil nil ((1250 . 1251) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -1250) (1250 . 1252) (#("else" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 1250) (undo-tree-id797 . -4) (undo-tree-id798 . -4) (1246 . 1250) 1250) nil (25865 48659 315650 146000) 0 nil])
([nil nil ((1251 . 1254)) nil (25865 48659 315647 192000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1253) (undo-tree-id796 . -1) 1254) nil (25865 48659 315646 335000) 0 nil])
([nil nil ((1253 . 1254)) nil (25865 48659 315644 785000) 0 nil])
([nil nil ((1254 . 1258)) nil (25865 48659 315644 59000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1243) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1244) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1245) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1246) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -1247) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -1248) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -1249) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1250) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -1251) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -1252) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face))) . -1253) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -1254) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -1255) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -1256) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -1257) (undo-tree-id795 . -1) 1258) nil (25865 48659 315640 234000) 0 nil])
([nil nil ((1250 . 1251) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -1250) (1250 . 1252) (#("else" 0 4 (fontified nil face font-lock-keyword-face)) . 1250) (undo-tree-id764 . -4) (undo-tree-id765 . -4) (undo-tree-id766 . -4) (1246 . 1250) 1250) nil (25865 48659 315616 403000) 0 nil])
([nil nil ((1251 . 1253)) nil (25865 48659 315612 363000) 0 nil])
([nil nil ((1253 . 1254)) nil (25865 48659 315611 611000) 0 nil])
([nil nil ((1254 . 1260)) nil (25865 48659 315610 907000) 0 nil])
([nil nil ((1254 . 1255)) nil (25865 48659 315610 214000) 0 nil])
([nil nil ((1261 . 1264)) nil (25865 48659 315609 508000) 0 nil])
([nil nil ((1264 . 1265)) nil (25865 48659 315608 774000) 0 nil])
([nil nil ((1307 . 1310)) nil (25865 48659 315608 109000) 0 nil])
([nil nil ((1310 . 1314)) nil (25865 48659 315607 401000) 0 nil])
([nil nil ((1314 . 1315) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -1314) (1314 . 1316) (#("else" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 1314) (undo-tree-id762 . -4) (undo-tree-id763 . -4) (1310 . 1314) 1314) nil (25865 48659 315606 47000) 0 nil])
([nil nil ((1315 . 1316)) nil (25865 48659 315603 113000) 0 nil])
([nil nil ((1316 . 1321)) nil (25865 48659 315602 253000) 0 nil])
([nil nil ((1321 . 1327)) nil (25865 48659 315601 450000) 0 nil])
([nil nil ((1327 . 1328)) nil (25865 48659 315600 339000) 0 nil])
([nil nil ((1337 . 1338) (nil syntax-table nil 1337 . 1338) (nil syntax-table (1) 1328 . 1329) (1336 . 1337) (nil syntax-table nil 1336 . 1337) (nil syntax-table (1) 1328 . 1329) (1335 . 1336) (nil syntax-table nil 1335 . 1336) (nil syntax-table (1) 1328 . 1329) (1334 . 1335) (nil syntax-table nil 1334 . 1335) (nil syntax-table (1) 1328 . 1329) (1333 . 1334) (nil syntax-table nil 1333 . 1334) (nil syntax-table (1) 1328 . 1329) (1332 . 1333) (nil syntax-table nil 1332 . 1333) (nil syntax-table (1) 1328 . 1329) (1331 . 1332) (nil syntax-table nil 1331 . 1332) (nil syntax-table (1) 1328 . 1329) (1330 . 1331) (nil syntax-table nil 1330 . 1331) (nil syntax-table (1) 1328 . 1329) (1329 . 1330) (nil syntax-table nil 1329 . 1330) (nil syntax-table (1) 1328 . 1329) (1328 . 1329)) nil (25865 48659 315598 512000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1336) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (nil syntax-table nil 1337 . 1338) (nil syntax-table (1) 1328 . 1329) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1337) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (nil syntax-table nil 1338 . 1339) (nil syntax-table (1) 1328 . 1329)) nil (25865 48659 315592 537000) 0 nil])
([nil nil ((1345 . 1346) (nil syntax-table nil 1345 . 1346) (nil syntax-table (1) 1328 . 1329) (1344 . 1345) (nil syntax-table nil 1344 . 1345) (nil syntax-table (1) 1328 . 1329) (1343 . 1344) (nil syntax-table nil 1343 . 1344) (nil syntax-table (1) 1328 . 1329) (1342 . 1343) (nil syntax-table nil 1342 . 1343) (nil syntax-table (1) 1328 . 1329) (1341 . 1342) (nil syntax-table nil 1341 . 1342) (nil syntax-table (1) 1328 . 1329) (1340 . 1341) (nil syntax-table nil 1340 . 1341) (nil syntax-table (1) 1328 . 1329) (1339 . 1340) (nil syntax-table nil 1339 . 1340) (nil syntax-table (1) 1328 . 1329) (1338 . 1339) (nil syntax-table nil 1338 . 1339) (nil syntax-table (1) 1328 . 1329) (1337 . 1338) (nil syntax-table nil 1337 . 1338) (nil syntax-table (1) 1328 . 1329) (1336 . 1337) (nil syntax-table nil 1336 . 1337) (nil syntax-table (1) 1328 . 1329)) nil (25865 48659 315584 405000) 0 nil])
([nil nil ((1353 . 1354) (nil syntax-table nil 1353 . 1354) (nil syntax-table (1) 1328 . 1329) (1352 . 1353) (nil syntax-table nil 1352 . 1353) (nil syntax-table (1) 1328 . 1329) (1351 . 1352) (nil syntax-table nil 1351 . 1352) (nil syntax-table (1) 1328 . 1329) (1350 . 1351) (nil syntax-table nil 1350 . 1351) (nil syntax-table (1) 1328 . 1329) (1349 . 1350) (nil syntax-table nil 1349 . 1350) (nil syntax-table (1) 1328 . 1329) (1348 . 1349) (nil syntax-table nil 1348 . 1349) (nil syntax-table (1) 1328 . 1329) (1347 . 1348) (nil syntax-table nil 1347 . 1348) (nil syntax-table (1) 1328 . 1329) (1346 . 1347) (nil syntax-table nil 1346 . 1347) (nil syntax-table (1) 1328 . 1329)) nil (25865 48659 315577 867000) 0 nil])
([nil nil ((1354 . 1355)) nil (25865 48659 315572 905000) 0 nil])
([nil nil ((1355 . 1356)) nil (25865 48659 315572 45000) 0 nil])
([nil nil ((1356 . 1361)) nil (25865 48659 315570 742000) 0 nil])
([nil nil ((1357 . 1359) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 1357) (undo-tree-id740 . -4) (undo-tree-id741 . -4) (undo-tree-id742 . -4) (undo-tree-id743 . -4) (undo-tree-id744 . -4) (undo-tree-id745 . -4) (undo-tree-id746 . -4) (undo-tree-id747 . -4) (undo-tree-id748 . -4) (undo-tree-id749 . -4) (undo-tree-id750 . -4) (undo-tree-id751 . -4) (undo-tree-id752 . -4) (undo-tree-id753 . -4) (undo-tree-id754 . -4) (undo-tree-id755 . -4) (undo-tree-id756 . -4) (1361 . 1362)) nil (25865 48659 315566 141000) 0 nil])
([nil nil ((1129 . 1130) (1127 . 1129) (1106 . 1127) (1104 . 1106) (1101 . 1104) (t 25865 48659 332471 524000)) nil (25865 48789 909309 681000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1218) (undo-tree-id816 . -1) 1219) nil (25865 48789 909307 379000) 0 nil])
([nil nil ((1218 . 1219)) nil (25865 48789 909305 137000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1291) (undo-tree-id815 . -1) 1292) nil (25865 48789 909302 662000) 0 nil])
([nil nil ((1291 . 1292)) nil (25865 48789 909292 675000) 0 nil])
([nil nil ((1383 . 1384) (nil syntax-table nil 1386 . 1387) (nil syntax-table (1) 1357 . 1358) (1382 . 1383) (t 25865 48789 928174 7000)) nil (25865 48806 745875 726000) 0 nil])
([nil nil ((1203 . 1206) (t 25865 48806 764135 629000)) nil (25865 48834 541684 710000) 0 nil])
([nil nil ((1206 . 1210)) nil (25865 48834 541683 308000) 0 nil])
([nil nil ((1210 . 1212)) nil (25865 48834 541681 89000) 0 nil])
([nil nil ((1212 . 1213)) nil (25865 48834 541678 607000) 0 nil])
([nil nil ((1217 . 1218) (nil syntax-table nil 1217 . 1218) (nil syntax-table (1) 1213 . 1214) (1216 . 1217) (nil syntax-table nil 1216 . 1217) (nil syntax-table (1) 1213 . 1214) (1215 . 1216) (nil syntax-table nil 1235 . 1236) (nil syntax-table (1) 1213 . 1214) (1214 . 1215) (nil syntax-table nil 1214 . 1215) (nil syntax-table (1) 1213 . 1214) (1213 . 1214)) nil (25865 48834 541673 751000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1216) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (nil syntax-table nil 1217 . 1218) (nil syntax-table (1) 1213 . 1214) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1217) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (nil syntax-table nil 1218 . 1219) (nil syntax-table (1) 1213 . 1214)) nil (25865 48834 541670 338000) 0 nil])
([nil nil ((1228 . 1229) (nil syntax-table nil 1228 . 1229) (nil syntax-table (1) 1213 . 1214) (1227 . 1228) (nil syntax-table nil 1227 . 1228) (nil syntax-table (1) 1213 . 1214) (1226 . 1227) (nil syntax-table nil 1226 . 1227) (nil syntax-table (1) 1213 . 1214) (1225 . 1226) (nil syntax-table nil 1225 . 1226) (nil syntax-table (1) 1213 . 1214) (1224 . 1225) (nil syntax-table nil 1224 . 1225) (nil syntax-table (1) 1213 . 1214) (1223 . 1224) (nil syntax-table nil 1223 . 1224) (nil syntax-table (1) 1213 . 1214) (1222 . 1223) (nil syntax-table nil 1222 . 1223) (nil syntax-table (1) 1213 . 1214) (1221 . 1222) (nil syntax-table nil 1221 . 1222) (nil syntax-table (1) 1213 . 1214) (1220 . 1221) (nil syntax-table nil 1220 . 1221) (nil syntax-table (1) 1213 . 1214) (1219 . 1220) (nil syntax-table nil 1219 . 1220) (nil syntax-table (1) 1213 . 1214) (1218 . 1219) (nil syntax-table nil 1218 . 1219) (nil syntax-table (1) 1213 . 1214) (1217 . 1218) (nil syntax-table nil 1217 . 1218) (nil syntax-table (1) 1213 . 1214) (1216 . 1217) (nil syntax-table nil 1216 . 1217) (nil syntax-table (1) 1213 . 1214)) nil (25865 48834 541664 536000) 0 nil])
([nil nil ((1240 . 1242) (nil syntax-table nil 1240 . 1241) (nil syntax-table (1) 1213 . 1214) (1239 . 1240) (nil syntax-table nil 1259 . 1260) (nil syntax-table (1) 1213 . 1214) (1238 . 1239) (nil syntax-table nil 1238 . 1239) (nil syntax-table (1) 1213 . 1214) (1237 . 1238) (nil syntax-table nil 1237 . 1238) (nil syntax-table (1) 1213 . 1214) (1236 . 1237) (nil syntax-table nil 1236 . 1237) (nil syntax-table (1) 1213 . 1214) (1235 . 1236) (nil syntax-table nil 1235 . 1236) (nil syntax-table (1) 1213 . 1214) (1234 . 1235) (nil syntax-table nil 1234 . 1235) (nil syntax-table (1) 1213 . 1214) (1233 . 1234) (nil syntax-table nil 1233 . 1234) (nil syntax-table (1) 1213 . 1214) (1232 . 1233) (nil syntax-table nil 1232 . 1233) (nil syntax-table (1) 1213 . 1214) (1231 . 1232) (nil syntax-table nil 1231 . 1232) (nil syntax-table (1) 1213 . 1214) (1230 . 1231) (nil syntax-table nil 1230 . 1231) (nil syntax-table (1) 1213 . 1214) (1229 . 1230) (nil syntax-table nil 1229 . 1230) (nil syntax-table (1) 1213 . 1214)) nil (25865 48834 541655 902000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg chg)) . -1241) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) 1242) nil (25865 48834 541648 866000) 0 nil])
([nil nil ((1241 . 1242)) nil (25865 48834 541643 195000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face))) . -1241) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) 1242) nil (25865 48834 541640 190000) 0 nil])
([nil nil ((1241 . 1242)) nil (25865 48834 541612 956000) 0 nil])
([nil nil ((1242 . 1243)) nil (25865 48834 541608 106000) 0 nil])
([nil nil ((1431 . 1434) (t 25865 48834 564072 260000)) nil (25865 48853 194077 169000) 0 nil])
([nil nil ((1434 . 1440)) nil (25865 48853 194076 63000) 0 nil])
([nil nil ((1440 . 1441)) nil (25865 48853 194075 157000) 0 nil])
([nil nil ((1444 . 1445) (nil syntax-table nil 1444 . 1445) (nil syntax-table (1) 1441 . 1442) (1443 . 1444) (nil syntax-table nil 1444 . 1445) (nil syntax-table (1) 1441 . 1442) (1442 . 1443) (nil syntax-table nil 1442 . 1443) (nil syntax-table (1) 1441 . 1442) (1441 . 1442)) nil (25865 48853 194073 710000) 0 nil])
([nil nil ((1445 . 1446)) nil (25865 48853 194070 340000) 0 nil])
([nil nil ((1446 . 1447)) nil (25865 48853 194065 784000) 0 nil])
([nil nil ((1483 . 1489) (t 25865 48853 212029 757000)) nil (25865 49067 193447 484000) 0 nil])
([nil nil ((1483 . 1485) 1489) nil (25865 49067 193444 840000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg)) . -1490) (undo-tree-id910 . -1) 1491) nil (25865 49067 193441 832000) 0 nil])
([nil nil ((1490 . 1491)) nil (25865 49067 193437 820000) 0 nil])
([nil nil ((1491 . 1492)) nil (25865 49067 193435 863000) 0 nil])
([nil nil ((1502 . 1503) (nil syntax-table nil 1502 . 1503) (nil syntax-table (1) 1492 . 1493) (1501 . 1502) (nil syntax-table nil 1501 . 1502) (nil syntax-table (1) 1492 . 1493) (1500 . 1501) (nil syntax-table nil 1500 . 1501) (nil syntax-table (1) 1492 . 1493) (1499 . 1500) (nil syntax-table nil 1499 . 1500) (nil syntax-table (1) 1492 . 1493) (1498 . 1499) (nil syntax-table nil 1498 . 1499) (nil syntax-table (1) 1492 . 1493) (1497 . 1498) (nil syntax-table nil 1497 . 1498) (nil syntax-table (1) 1492 . 1493) (1496 . 1497) (nil syntax-table nil 1496 . 1497) (nil syntax-table (1) 1492 . 1493) (1495 . 1496) (nil syntax-table nil 1495 . 1496) (nil syntax-table (1) 1492 . 1493) (1494 . 1495) (nil syntax-table nil 1495 . 1496) (nil syntax-table (1) 1492 . 1493) (1493 . 1494) (nil syntax-table nil 1493 . 1494) (nil syntax-table (1) 1492 . 1493) (1492 . 1493)) nil (25865 49067 193429 93000) 0 nil])
([nil nil ((1510 . 1511) (nil syntax-table nil 1510 . 1511) (nil syntax-table (1) 1492 . 1493) (1509 . 1510) (nil syntax-table nil 1509 . 1510) (nil syntax-table (1) 1492 . 1493) (1508 . 1509) (nil syntax-table nil 1508 . 1509) (nil syntax-table (1) 1492 . 1493) (1507 . 1508) (nil syntax-table nil 1507 . 1508) (nil syntax-table (1) 1492 . 1493) (1506 . 1507) (nil syntax-table nil 1506 . 1507) (nil syntax-table (1) 1492 . 1493) (1505 . 1506) (nil syntax-table nil 1505 . 1506) (nil syntax-table (1) 1492 . 1493) (1504 . 1505) (nil syntax-table nil 1504 . 1505) (nil syntax-table (1) 1492 . 1493) (1503 . 1504) (nil syntax-table nil 1503 . 1504) (nil syntax-table (1) 1492 . 1493)) nil (25865 49067 193408 597000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1510) (undo-tree-id909 . -1) (nil syntax-table nil 1512 . 1513) (nil syntax-table (1) 1492 . 1493)) nil (25865 49067 193393 970000) 0 nil])
([nil nil ((1513 . 1514) (nil syntax-table nil 1513 . 1514) (nil syntax-table (1) 1492 . 1493) (1512 . 1513) (nil syntax-table nil 1512 . 1513) (nil syntax-table (1) 1492 . 1493) (1511 . 1512) (nil syntax-table nil 1511 . 1512) (nil syntax-table (1) 1492 . 1493) (1510 . 1511) (nil syntax-table nil 1510 . 1511) (nil syntax-table (1) 1492 . 1493)) nil (25865 49067 193387 591000) 0 nil])
([nil nil ((1515 . 1516) (nil syntax-table nil 1515 . 1516) (nil syntax-table (1) 1492 . 1493) (1514 . 1515) (nil syntax-table nil 1515 . 1516) (nil syntax-table (1) 1492 . 1493)) nil (25865 49067 193379 98000) 0 nil])
([nil nil ((1516 . 1517)) nil (25865 49067 193374 373000) 0 nil])
([nil nil ((1517 . 1518)) nil (25865 49067 193372 230000) 0 nil])
([nil nil ((972 . 973)) nil (25865 49067 193370 70000) 0 nil])
([nil nil ((1519 . 1522)) nil (25865 49067 193368 111000) 0 nil])
([nil nil ((1522 . 1525)) nil (25865 49067 193366 176000) 0 nil])
([nil nil ((1525 . 1526)) nil (25865 49067 193363 952000) 0 nil])
([nil nil ((1526 . 1539)) nil (25865 49067 193361 953000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -1538) (undo-tree-id908 . -1) 1539) nil (25865 49067 193359 432000) 0 nil])
([nil nil ((1538 . 1539)) nil (25865 49067 193355 427000) 0 nil])
([nil nil ((1539 . 1546)) nil (25865 49067 193353 501000) 0 nil])
([nil nil ((1546 . 1547)) nil (25865 49067 193351 577000) 0 nil])
([nil nil ((1550 . 1551) (nil syntax-table nil 1550 . 1551) (nil syntax-table (1) 1548 . 1549) (1549 . 1550) (nil syntax-table nil 1549 . 1550) (nil syntax-table (1) 1548 . 1549) (1547 . 1549)) nil (25865 49067 193348 639000) 0 nil])
([nil nil ((1551 . 1553)) nil (25865 49067 193343 732000) 0 nil])
([nil nil ((1553 . 1554)) nil (25865 49067 193341 814000) 0 nil])
([nil nil ((1554 . 1555)) nil (25865 49067 193339 807000) 0 nil])
([nil nil ((1555 . 1560)) nil (25865 49067 193337 867000) 0 nil])
([nil nil ((1560 . 1566)) nil (25865 49067 193335 933000) 0 nil])
([nil nil ((1566 . 1567)) nil (25865 49067 193333 965000) 0 nil])
([nil nil ((1567 . 1571)) nil (25865 49067 193332 29000) 0 nil])
([nil nil ((1571 . 1572)) nil (25865 49067 193330 97000) 0 nil])
([nil nil ((1572 . 1573)) nil (25865 49067 193328 163000) 0 nil])
([nil nil ((1573 . 1578)) nil (25865 49067 193326 154000) 0 nil])
([nil nil ((1578 . 1584)) nil (25865 49067 193324 228000) 0 nil])
([nil nil ((1584 . 1585)) nil (25865 49067 193322 289000) 0 nil])
([nil nil ((1589 . 1590) (nil syntax-table nil 1589 . 1590) (nil syntax-table (1) 1585 . 1586) (1588 . 1589) (nil syntax-table nil 1588 . 1589) (nil syntax-table (1) 1585 . 1586) (1587 . 1588) (nil syntax-table nil 1587 . 1588) (nil syntax-table (1) 1585 . 1586) (1586 . 1587) (nil syntax-table nil 1586 . 1587) (nil syntax-table (1) 1585 . 1586) (1585 . 1586)) nil (25865 49067 193318 374000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -1586) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (nil syntax-table nil 1587 . 1588) (nil syntax-table (1) 1585 . 1586) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -1587) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (nil syntax-table nil 1588 . 1589) (nil syntax-table (1) 1585 . 1586) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -1588) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (nil syntax-table nil 1589 . 1590) (nil syntax-table (1) 1585 . 1586) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -1589) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (nil syntax-table nil 1590 . 1591) (nil syntax-table (1) 1585 . 1586)) nil (25865 49067 193306 746000) 0 nil])
([nil nil ((1593 . 1594) (nil syntax-table nil 1593 . 1594) (nil syntax-table (1) 1585 . 1586) (1592 . 1593) (nil syntax-table nil 1592 . 1593) (nil syntax-table (1) 1585 . 1586) (1591 . 1592) (nil syntax-table nil 1591 . 1592) (nil syntax-table (1) 1585 . 1586) (1590 . 1591) (nil syntax-table nil 1590 . 1591) (nil syntax-table (1) 1585 . 1586) (1589 . 1590) (nil syntax-table nil 1589 . 1590) (nil syntax-table (1) 1585 . 1586) (1588 . 1589) (nil syntax-table nil 1588 . 1589) (nil syntax-table (1) 1585 . 1586) (1587 . 1588) (nil syntax-table nil 1587 . 1588) (nil syntax-table (1) 1585 . 1586) (1586 . 1587) (nil syntax-table nil 1586 . 1587) (nil syntax-table (1) 1585 . 1586)) nil (25865 49067 193281 632000) 0 nil])
([nil nil ((#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -1592) (undo-tree-id898 . -1) (nil syntax-table nil 1593 . 1594) (nil syntax-table (1) 1585 . 1586) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -1593) (undo-tree-id899 . -1) (nil syntax-table nil 1594 . 1595) (nil syntax-table (1) 1585 . 1586)) nil (25865 49067 193266 676000) 0 nil])
([nil nil ((1597 . 1598) (nil syntax-table nil 1597 . 1598) (nil syntax-table (1) 1585 . 1586) (1596 . 1597) (nil syntax-table nil 1596 . 1597) (nil syntax-table (1) 1585 . 1586) (1595 . 1596) (nil syntax-table nil 1595 . 1596) (nil syntax-table (1) 1585 . 1586) (1594 . 1595) (nil syntax-table nil 1594 . 1595) (nil syntax-table (1) 1585 . 1586) (1593 . 1594) (nil syntax-table nil 1593 . 1594) (nil syntax-table (1) 1585 . 1586) (1592 . 1593) (nil syntax-table nil 1592 . 1593) (nil syntax-table (1) 1585 . 1586)) nil (25865 49067 193256 900000) 0 nil])
([nil nil ((1598 . 1599)) nil (25865 49067 193250 111000) 0 nil])
([nil nil ((#("\"" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -1597) (undo-tree-id896 . -1) (#(")" 0 1 (ws-butler-chg chg fontified t face (rainbow-delimiters-depth-3-face))) . -1598) (undo-tree-id897 . -1) 1599) nil (25865 49067 193248 68000) 0 nil])
([nil nil ((1599 . 1600) (nil syntax-table nil 1599 . 1600) (nil syntax-table (1) 1585 . 1586) (1598 . 1599) (nil syntax-table nil 1599 . 1600) (nil syntax-table (1) 1585 . 1586) (1597 . 1598) (nil syntax-table nil 1597 . 1598) (nil syntax-table (1) 1585 . 1586)) nil (25865 49067 193242 315000) 0 nil])
([nil nil ((1600 . 1601)) nil (25865 49067 193239 184000) 0 nil])
([nil nil ((1601 . 1608)) nil (25865 49067 193238 307000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -1601) (undo-tree-id889 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1602) (undo-tree-id890 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1603) (undo-tree-id891 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1604) (undo-tree-id892 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1605) (undo-tree-id893 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1606) (undo-tree-id894 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1607) (undo-tree-id895 . -1) 1608) nil (25865 49067 193232 245000) 0 nil])
([nil nil ((1601 . 1602)) nil (25865 49067 193212 924000) 0 nil])
([nil nil ((1602 . 1607)) nil (25865 49067 193210 349000) 0 nil])
([nil nil ((1607 . 1611)) nil (25865 49067 193207 723000) 0 nil])
([nil nil ((1611 . 1612) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -1611) (1611 . 1613) (#("else" 0 1 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1 2 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified nil face font-lock-keyword-face)) . 1611) (undo-tree-id887 . -4) (undo-tree-id888 . -4) (1607 . 1611) 1611) nil (25865 49067 193203 818000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1611) (undo-tree-id886 . -1) 1612) nil (25865 49067 193194 123000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -1607) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -1608) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -1609) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -1610) (undo-tree-id884 . -1) (undo-tree-id885 . -1) 1611) nil (25865 49067 193186 425000) 0 nil])
([nil nil ((1603 . 1605) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 1603) (undo-tree-id876 . -4) (undo-tree-id877 . -4) (1607 . 1608)) nil (25865 49067 193163 536000) 0 nil])
([nil nil ((1606 . 1609)) nil (25865 49067 193156 931000) 0 nil])
([nil nil ((1609 . 1611)) nil (25865 49067 193154 745000) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t)) . -1610) (undo-tree-id875 . -1) 1611) nil (25865 49067 193152 63000) 0 nil])
([nil nil ((1610 . 1613)) nil (25865 49067 193147 6000) 0 nil])
([nil nil ((1613 . 1614) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -1613) (1613 . 1615) (#("else" 0 1 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1 2 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 2 3 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified nil face font-lock-keyword-face)) . 1613) (undo-tree-id873 . -4) (undo-tree-id874 . -4) (1609 . 1613) 1613) nil (25865 49067 193142 916000) 0 nil])
([nil nil ((1614 . 1615)) nil (25865 49067 193134 206000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face))) . -1614) (undo-tree-id871 . -1) (undo-tree-id872 . -1) 1615) nil (25865 49067 193131 242000) 0 nil])
([nil nil ((1614 . 1615)) nil (25865 49067 193123 771000) 0 nil])
([nil nil ((1615 . 1620)) nil (25865 49067 193121 246000) 0 nil])
([nil nil ((1620 . 1626)) nil (25865 49067 193118 946000) 0 nil])
([nil nil ((1626 . 1627)) nil (25865 49067 193116 729000) 0 nil])
([nil nil ((1647 . 1648) (nil syntax-table nil 1647 . 1648) (nil syntax-table (1) 1627 . 1628) (1646 . 1647) (nil syntax-table nil 1646 . 1647) (nil syntax-table (1) 1627 . 1628) (1645 . 1646) (nil syntax-table nil 1645 . 1646) (nil syntax-table (1) 1627 . 1628) (1644 . 1645) (nil syntax-table nil 1644 . 1645) (nil syntax-table (1) 1627 . 1628) (1643 . 1644) (nil syntax-table nil 1643 . 1644) (nil syntax-table (1) 1627 . 1628) (1642 . 1643) (nil syntax-table nil 1642 . 1643) (nil syntax-table (1) 1627 . 1628) (1641 . 1642) (nil syntax-table nil 1641 . 1642) (nil syntax-table (1) 1627 . 1628) (1640 . 1641) (nil syntax-table nil 1640 . 1641) (nil syntax-table (1) 1627 . 1628) (1639 . 1640) (nil syntax-table nil 1639 . 1640) (nil syntax-table (1) 1627 . 1628) (1638 . 1639) (nil syntax-table nil 1638 . 1639) (nil syntax-table (1) 1627 . 1628) (1637 . 1638) (nil syntax-table nil 1637 . 1638) (nil syntax-table (1) 1627 . 1628) (1636 . 1637) (nil syntax-table nil 1636 . 1637) (nil syntax-table (1) 1627 . 1628) (1635 . 1636) (nil syntax-table nil 1635 . 1636) (nil syntax-table (1) 1627 . 1628) (1634 . 1635) (nil syntax-table nil 1634 . 1635) (nil syntax-table (1) 1627 . 1628) (1633 . 1634) (nil syntax-table nil 1633 . 1634) (nil syntax-table (1) 1627 . 1628) (1632 . 1633) (nil syntax-table nil 1632 . 1633) (nil syntax-table (1) 1627 . 1628) (1631 . 1632) (nil syntax-table nil 1631 . 1632) (nil syntax-table (1) 1627 . 1628) (1630 . 1631) (nil syntax-table nil 1630 . 1631) (nil syntax-table (1) 1627 . 1628) (1629 . 1630) (nil syntax-table nil 1629 . 1630) (nil syntax-table (1) 1627 . 1628) (1628 . 1629) (nil syntax-table nil 1628 . 1629) (nil syntax-table (1) 1627 . 1628) (1627 . 1628)) nil (25865 49067 193104 104000) 0 nil])
([nil nil ((1648 . 1649) (nil syntax-table nil 1649 . 1650) (nil syntax-table (1) 1627 . 1628)) nil (25865 49067 193069 993000) 0 nil])
([nil nil ((1649 . 1650) (nil syntax-table nil 1649 . 1650) (nil syntax-table (1) 1627 . 1628)) nil (25865 49067 193065 691000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1649) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (nil syntax-table nil 1650 . 1651) (nil syntax-table (1) 1627 . 1628)) nil (25865 49067 193062 322000) 0 nil])
([nil nil ((1649 . 1650) (nil syntax-table nil 1649 . 1650) (nil syntax-table (1) 1627 . 1628)) nil (25865 49067 193056 164000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1649) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (nil syntax-table nil 1650 . 1651) (nil syntax-table (1) 1627 . 1628)) nil (25865 49067 193051 876000) 0 nil])
([nil nil ((1649 . 1650) (nil syntax-table nil 1649 . 1650) (nil syntax-table (1) 1627 . 1628)) nil (25865 49067 193043 699000) 0 nil])
([nil nil ((1650 . 1651)) nil (25865 49067 193040 856000) 0 nil])
([nil nil ((1651 . 1652)) nil (25865 49067 193038 704000) 0 nil])
([nil nil ((1652 . 1657)) nil (25865 49067 193035 929000) 0 nil])
([nil current ((1653 . 1655) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 1653) (undo-tree-id850 . -4) (undo-tree-id851 . -4) (undo-tree-id852 . -4) (undo-tree-id853 . -4) (undo-tree-id854 . -4) (undo-tree-id855 . -4) (undo-tree-id856 . -4) (undo-tree-id857 . -4) (undo-tree-id858 . -4) (undo-tree-id859 . -4) (undo-tree-id860 . -4) (undo-tree-id861 . -4) (undo-tree-id862 . -4) (undo-tree-id863 . -4) (undo-tree-id864 . -4) (undo-tree-id865 . -4) (undo-tree-id866 . -4) (1657 . 1658)) nil (25865 49067 193028 216000) 0 nil])
nil
